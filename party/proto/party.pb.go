// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: party.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProfileAdditionalInfoStatus int32

const (
	ProfileAdditionalInfoStatus_UNKNOWN_PROFILE_ADDITIONAL_INFO_STATUS     ProfileAdditionalInfoStatus = 0
	ProfileAdditionalInfoStatus_PROFILE_ADDITIONAL_INFO_STATUS_EMPTY       ProfileAdditionalInfoStatus = 1
	ProfileAdditionalInfoStatus_PROFILE_ADDITIONAL_INFO_STATUS_INCOMPLETED ProfileAdditionalInfoStatus = 2
	ProfileAdditionalInfoStatus_PROFILE_ADDITIONAL_INFO_STATUS_COMPLETED   ProfileAdditionalInfoStatus = 3
	ProfileAdditionalInfoStatus_PROFILE_ADDITIONAL_INFO_STATUS_REJECTED    ProfileAdditionalInfoStatus = 4
	ProfileAdditionalInfoStatus_PROFILE_ADDITIONAL_INFO_STATUS_ACCEPTED    ProfileAdditionalInfoStatus = 5
)

// Enum value maps for ProfileAdditionalInfoStatus.
var (
	ProfileAdditionalInfoStatus_name = map[int32]string{
		0: "UNKNOWN_PROFILE_ADDITIONAL_INFO_STATUS",
		1: "PROFILE_ADDITIONAL_INFO_STATUS_EMPTY",
		2: "PROFILE_ADDITIONAL_INFO_STATUS_INCOMPLETED",
		3: "PROFILE_ADDITIONAL_INFO_STATUS_COMPLETED",
		4: "PROFILE_ADDITIONAL_INFO_STATUS_REJECTED",
		5: "PROFILE_ADDITIONAL_INFO_STATUS_ACCEPTED",
	}
	ProfileAdditionalInfoStatus_value = map[string]int32{
		"UNKNOWN_PROFILE_ADDITIONAL_INFO_STATUS":     0,
		"PROFILE_ADDITIONAL_INFO_STATUS_EMPTY":       1,
		"PROFILE_ADDITIONAL_INFO_STATUS_INCOMPLETED": 2,
		"PROFILE_ADDITIONAL_INFO_STATUS_COMPLETED":   3,
		"PROFILE_ADDITIONAL_INFO_STATUS_REJECTED":    4,
		"PROFILE_ADDITIONAL_INFO_STATUS_ACCEPTED":    5,
	}
)

func (x ProfileAdditionalInfoStatus) Enum() *ProfileAdditionalInfoStatus {
	p := new(ProfileAdditionalInfoStatus)
	*p = x
	return p
}

func (x ProfileAdditionalInfoStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProfileAdditionalInfoStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[0].Descriptor()
}

func (ProfileAdditionalInfoStatus) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[0]
}

func (x ProfileAdditionalInfoStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProfileAdditionalInfoStatus.Descriptor instead.
func (ProfileAdditionalInfoStatus) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{0}
}

type UpdateProfileAdditionalInfoStatus int32

const (
	UpdateProfileAdditionalInfoStatus_UNKNOWN_UPDATE_PROFILE_ADDITIONAL_INFO_STATUS  UpdateProfileAdditionalInfoStatus = 0
	UpdateProfileAdditionalInfoStatus_UPDATE_PROFILE_ADDITIONAL_INFO_STATUS_REJECTED UpdateProfileAdditionalInfoStatus = 1
	UpdateProfileAdditionalInfoStatus_UPDATE_PROFILE_ADDITIONAL_INFO_STATUS_ACCEPTED UpdateProfileAdditionalInfoStatus = 2
)

// Enum value maps for UpdateProfileAdditionalInfoStatus.
var (
	UpdateProfileAdditionalInfoStatus_name = map[int32]string{
		0: "UNKNOWN_UPDATE_PROFILE_ADDITIONAL_INFO_STATUS",
		1: "UPDATE_PROFILE_ADDITIONAL_INFO_STATUS_REJECTED",
		2: "UPDATE_PROFILE_ADDITIONAL_INFO_STATUS_ACCEPTED",
	}
	UpdateProfileAdditionalInfoStatus_value = map[string]int32{
		"UNKNOWN_UPDATE_PROFILE_ADDITIONAL_INFO_STATUS":  0,
		"UPDATE_PROFILE_ADDITIONAL_INFO_STATUS_REJECTED": 1,
		"UPDATE_PROFILE_ADDITIONAL_INFO_STATUS_ACCEPTED": 2,
	}
)

func (x UpdateProfileAdditionalInfoStatus) Enum() *UpdateProfileAdditionalInfoStatus {
	p := new(UpdateProfileAdditionalInfoStatus)
	*p = x
	return p
}

func (x UpdateProfileAdditionalInfoStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateProfileAdditionalInfoStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[1].Descriptor()
}

func (UpdateProfileAdditionalInfoStatus) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[1]
}

func (x UpdateProfileAdditionalInfoStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateProfileAdditionalInfoStatus.Descriptor instead.
func (UpdateProfileAdditionalInfoStatus) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{1}
}

type ProfileStatus int32

const (
	ProfileStatus_UNKNOWN_PROFILE_STATUS            ProfileStatus = 0
	ProfileStatus_PROFILE_STATUS_IN_PROGRESS        ProfileStatus = 1
	ProfileStatus_PROFILE_STATUS_WAITING_FOR_VERIFY ProfileStatus = 2
	ProfileStatus_PROFILE_STATUS_REJECTED           ProfileStatus = 3
	ProfileStatus_PROFILE_STATUS_COMPLETED          ProfileStatus = 4
)

// Enum value maps for ProfileStatus.
var (
	ProfileStatus_name = map[int32]string{
		0: "UNKNOWN_PROFILE_STATUS",
		1: "PROFILE_STATUS_IN_PROGRESS",
		2: "PROFILE_STATUS_WAITING_FOR_VERIFY",
		3: "PROFILE_STATUS_REJECTED",
		4: "PROFILE_STATUS_COMPLETED",
	}
	ProfileStatus_value = map[string]int32{
		"UNKNOWN_PROFILE_STATUS":            0,
		"PROFILE_STATUS_IN_PROGRESS":        1,
		"PROFILE_STATUS_WAITING_FOR_VERIFY": 2,
		"PROFILE_STATUS_REJECTED":           3,
		"PROFILE_STATUS_COMPLETED":          4,
	}
)

func (x ProfileStatus) Enum() *ProfileStatus {
	p := new(ProfileStatus)
	*p = x
	return p
}

func (x ProfileStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProfileStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[2].Descriptor()
}

func (ProfileStatus) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[2]
}

func (x ProfileStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProfileStatus.Descriptor instead.
func (ProfileStatus) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{2}
}

type AdditionalInfoType int32

const (
	AdditionalInfoType_UNKNOWN_ADDITIONAL_INFO_TYPE               AdditionalInfoType = 0
	AdditionalInfoType_ADDITIONAL_INFO_TYPE_PROFILE_PICTURE       AdditionalInfoType = 1
	AdditionalInfoType_ADDITIONAL_INFO_TYPE_ID_CARD               AdditionalInfoType = 2
	AdditionalInfoType_ADDITIONAL_INFO_TYPE_DRIVING_LICENSE       AdditionalInfoType = 3
	AdditionalInfoType_ADDITIONAL_INFO_TYPE_DRIVER_BACKGROUND     AdditionalInfoType = 4
	AdditionalInfoType_ADDITIONAL_INFO_TYPE_RESIDENCE_CARD        AdditionalInfoType = 5
	AdditionalInfoType_ADDITIONAL_INFO_TYPE_BANK_ACCOUNT          AdditionalInfoType = 6
	AdditionalInfoType_ADDITIONAL_INFO_TYPE_MOT                   AdditionalInfoType = 7
	AdditionalInfoType_ADDITIONAL_INFO_TYPE_INSURANCE_CERTIFICATE AdditionalInfoType = 8
	AdditionalInfoType_ADDITIONAL_INFO_TYPE_ADDRESS               AdditionalInfoType = 9
)

// Enum value maps for AdditionalInfoType.
var (
	AdditionalInfoType_name = map[int32]string{
		0: "UNKNOWN_ADDITIONAL_INFO_TYPE",
		1: "ADDITIONAL_INFO_TYPE_PROFILE_PICTURE",
		2: "ADDITIONAL_INFO_TYPE_ID_CARD",
		3: "ADDITIONAL_INFO_TYPE_DRIVING_LICENSE",
		4: "ADDITIONAL_INFO_TYPE_DRIVER_BACKGROUND",
		5: "ADDITIONAL_INFO_TYPE_RESIDENCE_CARD",
		6: "ADDITIONAL_INFO_TYPE_BANK_ACCOUNT",
		7: "ADDITIONAL_INFO_TYPE_MOT",
		8: "ADDITIONAL_INFO_TYPE_INSURANCE_CERTIFICATE",
		9: "ADDITIONAL_INFO_TYPE_ADDRESS",
	}
	AdditionalInfoType_value = map[string]int32{
		"UNKNOWN_ADDITIONAL_INFO_TYPE":               0,
		"ADDITIONAL_INFO_TYPE_PROFILE_PICTURE":       1,
		"ADDITIONAL_INFO_TYPE_ID_CARD":               2,
		"ADDITIONAL_INFO_TYPE_DRIVING_LICENSE":       3,
		"ADDITIONAL_INFO_TYPE_DRIVER_BACKGROUND":     4,
		"ADDITIONAL_INFO_TYPE_RESIDENCE_CARD":        5,
		"ADDITIONAL_INFO_TYPE_BANK_ACCOUNT":          6,
		"ADDITIONAL_INFO_TYPE_MOT":                   7,
		"ADDITIONAL_INFO_TYPE_INSURANCE_CERTIFICATE": 8,
		"ADDITIONAL_INFO_TYPE_ADDRESS":               9,
	}
)

func (x AdditionalInfoType) Enum() *AdditionalInfoType {
	p := new(AdditionalInfoType)
	*p = x
	return p
}

func (x AdditionalInfoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdditionalInfoType) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[3].Descriptor()
}

func (AdditionalInfoType) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[3]
}

func (x AdditionalInfoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdditionalInfoType.Descriptor instead.
func (AdditionalInfoType) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{3}
}

type TransportationType int32

const (
	TransportationType_UNKNOWN_TRANSPORTATION_TYPE   TransportationType = 0
	TransportationType_TRANSPORTATION_TYPE_CAR       TransportationType = 1
	TransportationType_TRANSPORTATION_TYPE_BICYCLE   TransportationType = 2
	TransportationType_TRANSPORTATION_TYPE_MOTORBIKE TransportationType = 3
	TransportationType_TRANSPORTATION_TYPE_VAN       TransportationType = 4
)

// Enum value maps for TransportationType.
var (
	TransportationType_name = map[int32]string{
		0: "UNKNOWN_TRANSPORTATION_TYPE",
		1: "TRANSPORTATION_TYPE_CAR",
		2: "TRANSPORTATION_TYPE_BICYCLE",
		3: "TRANSPORTATION_TYPE_MOTORBIKE",
		4: "TRANSPORTATION_TYPE_VAN",
	}
	TransportationType_value = map[string]int32{
		"UNKNOWN_TRANSPORTATION_TYPE":   0,
		"TRANSPORTATION_TYPE_CAR":       1,
		"TRANSPORTATION_TYPE_BICYCLE":   2,
		"TRANSPORTATION_TYPE_MOTORBIKE": 3,
		"TRANSPORTATION_TYPE_VAN":       4,
	}
)

func (x TransportationType) Enum() *TransportationType {
	p := new(TransportationType)
	*p = x
	return p
}

func (x TransportationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransportationType) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[4].Descriptor()
}

func (TransportationType) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[4]
}

func (x TransportationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransportationType.Descriptor instead.
func (TransportationType) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{4}
}

type TransportationSize int32

const (
	TransportationSize_UNKNOWN_TRANSPORTATION_SIZE TransportationSize = 0
	TransportationSize_TRANSPORTATION_SIZE_SMALL   TransportationSize = 1
	TransportationSize_TRANSPORTATION_SIZE_MEDIUM  TransportationSize = 2
	TransportationSize_TRANSPORTATION_SIZE_LARGE   TransportationSize = 3
)

// Enum value maps for TransportationSize.
var (
	TransportationSize_name = map[int32]string{
		0: "UNKNOWN_TRANSPORTATION_SIZE",
		1: "TRANSPORTATION_SIZE_SMALL",
		2: "TRANSPORTATION_SIZE_MEDIUM",
		3: "TRANSPORTATION_SIZE_LARGE",
	}
	TransportationSize_value = map[string]int32{
		"UNKNOWN_TRANSPORTATION_SIZE": 0,
		"TRANSPORTATION_SIZE_SMALL":   1,
		"TRANSPORTATION_SIZE_MEDIUM":  2,
		"TRANSPORTATION_SIZE_LARGE":   3,
	}
)

func (x TransportationSize) Enum() *TransportationSize {
	p := new(TransportationSize)
	*p = x
	return p
}

func (x TransportationSize) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransportationSize) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[5].Descriptor()
}

func (TransportationSize) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[5]
}

func (x TransportationSize) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransportationSize.Descriptor instead.
func (TransportationSize) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{5}
}

type IDCardType int32

const (
	IDCardType_UNKNOWN_IDCARD_TYPE          IDCardType = 0
	IDCardType_IDCARD_TYPE_PASSPORT         IDCardType = 1
	IDCardType_IDCARD_TYPE_NATIONAL_ID_CARD IDCardType = 2
)

// Enum value maps for IDCardType.
var (
	IDCardType_name = map[int32]string{
		0: "UNKNOWN_IDCARD_TYPE",
		1: "IDCARD_TYPE_PASSPORT",
		2: "IDCARD_TYPE_NATIONAL_ID_CARD",
	}
	IDCardType_value = map[string]int32{
		"UNKNOWN_IDCARD_TYPE":          0,
		"IDCARD_TYPE_PASSPORT":         1,
		"IDCARD_TYPE_NATIONAL_ID_CARD": 2,
	}
)

func (x IDCardType) Enum() *IDCardType {
	p := new(IDCardType)
	*p = x
	return p
}

func (x IDCardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IDCardType) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[6].Descriptor()
}

func (IDCardType) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[6]
}

func (x IDCardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IDCardType.Descriptor instead.
func (IDCardType) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{6}
}

type MotStatus int32

const (
	MotStatus_UNKNOWN_MOT_STATUS                 MotStatus = 0
	MotStatus_MOT_STATUS_NO_DETAILS_HELD_BY_DVLA MotStatus = 1
	MotStatus_MOT_STATUS_NO_RESULTS_RETURNED     MotStatus = 2
	MotStatus_MOT_STATUS_NOT_VALID               MotStatus = 3
	MotStatus_MOT_STATUS_VALID                   MotStatus = 4
)

// Enum value maps for MotStatus.
var (
	MotStatus_name = map[int32]string{
		0: "UNKNOWN_MOT_STATUS",
		1: "MOT_STATUS_NO_DETAILS_HELD_BY_DVLA",
		2: "MOT_STATUS_NO_RESULTS_RETURNED",
		3: "MOT_STATUS_NOT_VALID",
		4: "MOT_STATUS_VALID",
	}
	MotStatus_value = map[string]int32{
		"UNKNOWN_MOT_STATUS":                 0,
		"MOT_STATUS_NO_DETAILS_HELD_BY_DVLA": 1,
		"MOT_STATUS_NO_RESULTS_RETURNED":     2,
		"MOT_STATUS_NOT_VALID":               3,
		"MOT_STATUS_VALID":                   4,
	}
)

func (x MotStatus) Enum() *MotStatus {
	p := new(MotStatus)
	*p = x
	return p
}

func (x MotStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MotStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[7].Descriptor()
}

func (MotStatus) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[7]
}

func (x MotStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MotStatus.Descriptor instead.
func (MotStatus) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{7}
}

type TaxStatus int32

const (
	TaxStatus_UNKNOWN_TAX_STATUS                   TaxStatus = 0
	TaxStatus_TAX_STATUS_NOT_TAXED_FOR_ON_ROAD_USE TaxStatus = 1
	TaxStatus_TAX_STATUS_SORN                      TaxStatus = 2
	TaxStatus_TAX_STATUS_TAXED                     TaxStatus = 3
	TaxStatus_TAX_STATUS_UNTAXED                   TaxStatus = 4
)

// Enum value maps for TaxStatus.
var (
	TaxStatus_name = map[int32]string{
		0: "UNKNOWN_TAX_STATUS",
		1: "TAX_STATUS_NOT_TAXED_FOR_ON_ROAD_USE",
		2: "TAX_STATUS_SORN",
		3: "TAX_STATUS_TAXED",
		4: "TAX_STATUS_UNTAXED",
	}
	TaxStatus_value = map[string]int32{
		"UNKNOWN_TAX_STATUS":                   0,
		"TAX_STATUS_NOT_TAXED_FOR_ON_ROAD_USE": 1,
		"TAX_STATUS_SORN":                      2,
		"TAX_STATUS_TAXED":                     3,
		"TAX_STATUS_UNTAXED":                   4,
	}
)

func (x TaxStatus) Enum() *TaxStatus {
	p := new(TaxStatus)
	*p = x
	return p
}

func (x TaxStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaxStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[8].Descriptor()
}

func (TaxStatus) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[8]
}

func (x TaxStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaxStatus.Descriptor instead.
func (TaxStatus) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{8}
}

type Boolean int32

const (
	Boolean_UNKNOWN_BOOLEAN Boolean = 0
	Boolean_BOOLEAN_FALSE   Boolean = 1
	Boolean_BOOLEAN_TRUE    Boolean = 2
)

// Enum value maps for Boolean.
var (
	Boolean_name = map[int32]string{
		0: "UNKNOWN_BOOLEAN",
		1: "BOOLEAN_FALSE",
		2: "BOOLEAN_TRUE",
	}
	Boolean_value = map[string]int32{
		"UNKNOWN_BOOLEAN": 0,
		"BOOLEAN_FALSE":   1,
		"BOOLEAN_TRUE":    2,
	}
)

func (x Boolean) Enum() *Boolean {
	p := new(Boolean)
	*p = x
	return p
}

func (x Boolean) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Boolean) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[9].Descriptor()
}

func (Boolean) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[9]
}

func (x Boolean) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Boolean.Descriptor instead.
func (Boolean) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{9}
}

type ClaimType int32

const (
	ClaimType_UNKNOWN_CLAIM_TYPE      ClaimType = 0
	ClaimType_CLAIM_TYPE_EMAIL        ClaimType = 1
	ClaimType_CLAIM_TYPE_PHONE_NUMBER ClaimType = 2
	ClaimType_CLAIM_TYPE_GOOGLE_ID    ClaimType = 3
	ClaimType_CLAIM_TYPE_FACEBOOK_ID  ClaimType = 4
	ClaimType_CLAIM_TYPE_USERNAME     ClaimType = 5
	ClaimType_CLAIM_TYPE_PASSWORD     ClaimType = 6
)

// Enum value maps for ClaimType.
var (
	ClaimType_name = map[int32]string{
		0: "UNKNOWN_CLAIM_TYPE",
		1: "CLAIM_TYPE_EMAIL",
		2: "CLAIM_TYPE_PHONE_NUMBER",
		3: "CLAIM_TYPE_GOOGLE_ID",
		4: "CLAIM_TYPE_FACEBOOK_ID",
		5: "CLAIM_TYPE_USERNAME",
		6: "CLAIM_TYPE_PASSWORD",
	}
	ClaimType_value = map[string]int32{
		"UNKNOWN_CLAIM_TYPE":      0,
		"CLAIM_TYPE_EMAIL":        1,
		"CLAIM_TYPE_PHONE_NUMBER": 2,
		"CLAIM_TYPE_GOOGLE_ID":    3,
		"CLAIM_TYPE_FACEBOOK_ID":  4,
		"CLAIM_TYPE_USERNAME":     5,
		"CLAIM_TYPE_PASSWORD":     6,
	}
)

func (x ClaimType) Enum() *ClaimType {
	p := new(ClaimType)
	*p = x
	return p
}

func (x ClaimType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClaimType) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[10].Descriptor()
}

func (ClaimType) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[10]
}

func (x ClaimType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClaimType.Descriptor instead.
func (ClaimType) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{10}
}

type DocumentInfoType int32

const (
	DocumentInfoType_UNKNOWN_DOCUMENT_INFO_TYPE               DocumentInfoType = 0
	DocumentInfoType_DOCUMENT_INFO_TYPE_ID_CARD               DocumentInfoType = 1
	DocumentInfoType_DOCUMENT_INFO_TYPE_DRIVING_LICENSE       DocumentInfoType = 2
	DocumentInfoType_DOCUMENT_INFO_TYPE_DRIVER_BACKGROUND     DocumentInfoType = 3
	DocumentInfoType_DOCUMENT_INFO_TYPE_RESIDENCE_CARD        DocumentInfoType = 4
	DocumentInfoType_DOCUMENT_INFO_TYPE_BANK_ACCOUNT          DocumentInfoType = 5
	DocumentInfoType_DOCUMENT_INFO_TYPE_ADDRESS               DocumentInfoType = 6
	DocumentInfoType_DOCUMENT_INFO_TYPE_INSURANCE_CERTIFICATE DocumentInfoType = 7
	DocumentInfoType_DOCUMENT_INFO_TYPE_PROFILE_PICTURE       DocumentInfoType = 8
)

// Enum value maps for DocumentInfoType.
var (
	DocumentInfoType_name = map[int32]string{
		0: "UNKNOWN_DOCUMENT_INFO_TYPE",
		1: "DOCUMENT_INFO_TYPE_ID_CARD",
		2: "DOCUMENT_INFO_TYPE_DRIVING_LICENSE",
		3: "DOCUMENT_INFO_TYPE_DRIVER_BACKGROUND",
		4: "DOCUMENT_INFO_TYPE_RESIDENCE_CARD",
		5: "DOCUMENT_INFO_TYPE_BANK_ACCOUNT",
		6: "DOCUMENT_INFO_TYPE_ADDRESS",
		7: "DOCUMENT_INFO_TYPE_INSURANCE_CERTIFICATE",
		8: "DOCUMENT_INFO_TYPE_PROFILE_PICTURE",
	}
	DocumentInfoType_value = map[string]int32{
		"UNKNOWN_DOCUMENT_INFO_TYPE":               0,
		"DOCUMENT_INFO_TYPE_ID_CARD":               1,
		"DOCUMENT_INFO_TYPE_DRIVING_LICENSE":       2,
		"DOCUMENT_INFO_TYPE_DRIVER_BACKGROUND":     3,
		"DOCUMENT_INFO_TYPE_RESIDENCE_CARD":        4,
		"DOCUMENT_INFO_TYPE_BANK_ACCOUNT":          5,
		"DOCUMENT_INFO_TYPE_ADDRESS":               6,
		"DOCUMENT_INFO_TYPE_INSURANCE_CERTIFICATE": 7,
		"DOCUMENT_INFO_TYPE_PROFILE_PICTURE":       8,
	}
)

func (x DocumentInfoType) Enum() *DocumentInfoType {
	p := new(DocumentInfoType)
	*p = x
	return p
}

func (x DocumentInfoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DocumentInfoType) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[11].Descriptor()
}

func (DocumentInfoType) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[11]
}

func (x DocumentInfoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DocumentInfoType.Descriptor instead.
func (DocumentInfoType) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{11}
}

type DocumentType int32

const (
	DocumentType_UNKNOWN_DOCUMENT_TYPE               DocumentType = 0
	DocumentType_DOCUMENT_TYPE_PASSPORT              DocumentType = 1
	DocumentType_DOCUMENT_TYPE_NATIONAL_ID_FRONT     DocumentType = 2
	DocumentType_DOCUMENT_TYPE_NATIONAL_ID_BACK      DocumentType = 3
	DocumentType_DOCUMENT_TYPE_DRIVING_LICENSE_FRONT DocumentType = 4
	DocumentType_DOCUMENT_TYPE_DRIVING_LICENSE_BACK  DocumentType = 5
	DocumentType_DOCUMENT_TYPE_RESIDENCE_CARD_FRONT  DocumentType = 6
	DocumentType_DOCUMENT_TYPE_RESIDENCE_CARD_BACK   DocumentType = 7
	DocumentType_DOCUMENT_TYPE_DBS_CERTIFICATE_FRONT DocumentType = 8
	DocumentType_DOCUMENT_TYPE_DBS_CERTIFICATE_BACK  DocumentType = 9
	DocumentType_DOCUMENT_TYPE_INSURANCE_CERTIFICATE DocumentType = 10
	DocumentType_DOCUMENT_TYPE_PROOF_OF_ADDRESS      DocumentType = 11
	DocumentType_DOCUMENT_TYPE_PROFILE_PICTURE       DocumentType = 12
)

// Enum value maps for DocumentType.
var (
	DocumentType_name = map[int32]string{
		0:  "UNKNOWN_DOCUMENT_TYPE",
		1:  "DOCUMENT_TYPE_PASSPORT",
		2:  "DOCUMENT_TYPE_NATIONAL_ID_FRONT",
		3:  "DOCUMENT_TYPE_NATIONAL_ID_BACK",
		4:  "DOCUMENT_TYPE_DRIVING_LICENSE_FRONT",
		5:  "DOCUMENT_TYPE_DRIVING_LICENSE_BACK",
		6:  "DOCUMENT_TYPE_RESIDENCE_CARD_FRONT",
		7:  "DOCUMENT_TYPE_RESIDENCE_CARD_BACK",
		8:  "DOCUMENT_TYPE_DBS_CERTIFICATE_FRONT",
		9:  "DOCUMENT_TYPE_DBS_CERTIFICATE_BACK",
		10: "DOCUMENT_TYPE_INSURANCE_CERTIFICATE",
		11: "DOCUMENT_TYPE_PROOF_OF_ADDRESS",
		12: "DOCUMENT_TYPE_PROFILE_PICTURE",
	}
	DocumentType_value = map[string]int32{
		"UNKNOWN_DOCUMENT_TYPE":               0,
		"DOCUMENT_TYPE_PASSPORT":              1,
		"DOCUMENT_TYPE_NATIONAL_ID_FRONT":     2,
		"DOCUMENT_TYPE_NATIONAL_ID_BACK":      3,
		"DOCUMENT_TYPE_DRIVING_LICENSE_FRONT": 4,
		"DOCUMENT_TYPE_DRIVING_LICENSE_BACK":  5,
		"DOCUMENT_TYPE_RESIDENCE_CARD_FRONT":  6,
		"DOCUMENT_TYPE_RESIDENCE_CARD_BACK":   7,
		"DOCUMENT_TYPE_DBS_CERTIFICATE_FRONT": 8,
		"DOCUMENT_TYPE_DBS_CERTIFICATE_BACK":  9,
		"DOCUMENT_TYPE_INSURANCE_CERTIFICATE": 10,
		"DOCUMENT_TYPE_PROOF_OF_ADDRESS":      11,
		"DOCUMENT_TYPE_PROFILE_PICTURE":       12,
	}
)

func (x DocumentType) Enum() *DocumentType {
	p := new(DocumentType)
	*p = x
	return p
}

func (x DocumentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DocumentType) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[12].Descriptor()
}

func (DocumentType) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[12]
}

func (x DocumentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DocumentType.Descriptor instead.
func (DocumentType) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{12}
}

type DocumentDataType int32

const (
	DocumentDataType_UNKNOWN_DOCUMENT_DATA_TYPE   DocumentDataType = 0
	DocumentDataType_DOCUMENT_DATA_TYPE_THUMBNAIL DocumentDataType = 1
	DocumentDataType_DOCUMENT_DATA_TYPE_DATA      DocumentDataType = 2
)

// Enum value maps for DocumentDataType.
var (
	DocumentDataType_name = map[int32]string{
		0: "UNKNOWN_DOCUMENT_DATA_TYPE",
		1: "DOCUMENT_DATA_TYPE_THUMBNAIL",
		2: "DOCUMENT_DATA_TYPE_DATA",
	}
	DocumentDataType_value = map[string]int32{
		"UNKNOWN_DOCUMENT_DATA_TYPE":   0,
		"DOCUMENT_DATA_TYPE_THUMBNAIL": 1,
		"DOCUMENT_DATA_TYPE_DATA":      2,
	}
)

func (x DocumentDataType) Enum() *DocumentDataType {
	p := new(DocumentDataType)
	*p = x
	return p
}

func (x DocumentDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DocumentDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[13].Descriptor()
}

func (DocumentDataType) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[13]
}

func (x DocumentDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DocumentDataType.Descriptor instead.
func (DocumentDataType) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{13}
}

type PaymentMethod int32

const (
	PaymentMethod_UNKNOWN_PAYMENT_METHOD     PaymentMethod = 0
	PaymentMethod_PAYMENT_METHOD_CREDIT_CARD PaymentMethod = 1
	PaymentMethod_PAYMENT_METHOD_DEBIT_CARD  PaymentMethod = 2
)

// Enum value maps for PaymentMethod.
var (
	PaymentMethod_name = map[int32]string{
		0: "UNKNOWN_PAYMENT_METHOD",
		1: "PAYMENT_METHOD_CREDIT_CARD",
		2: "PAYMENT_METHOD_DEBIT_CARD",
	}
	PaymentMethod_value = map[string]int32{
		"UNKNOWN_PAYMENT_METHOD":     0,
		"PAYMENT_METHOD_CREDIT_CARD": 1,
		"PAYMENT_METHOD_DEBIT_CARD":  2,
	}
)

func (x PaymentMethod) Enum() *PaymentMethod {
	p := new(PaymentMethod)
	*p = x
	return p
}

func (x PaymentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[14].Descriptor()
}

func (PaymentMethod) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[14]
}

func (x PaymentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentMethod.Descriptor instead.
func (PaymentMethod) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{14}
}

type UserStatus int32

const (
	UserStatus_UNKNOWN_USER_STATUS   UserStatus = 0
	UserStatus_USER_STATUS_ENABLED   UserStatus = 1
	UserStatus_USER_STATUS_DISABLED  UserStatus = 2
	UserStatus_USER_STATUS_BLOCKED   UserStatus = 3
	UserStatus_USER_STATUS_AVAILABLE UserStatus = 4
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0: "UNKNOWN_USER_STATUS",
		1: "USER_STATUS_ENABLED",
		2: "USER_STATUS_DISABLED",
		3: "USER_STATUS_BLOCKED",
		4: "USER_STATUS_AVAILABLE",
	}
	UserStatus_value = map[string]int32{
		"UNKNOWN_USER_STATUS":   0,
		"USER_STATUS_ENABLED":   1,
		"USER_STATUS_DISABLED":  2,
		"USER_STATUS_BLOCKED":   3,
		"USER_STATUS_AVAILABLE": 4,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[15].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[15]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{15}
}

type SortType int32

const (
	SortType_UNKNOWN_SORT_TYPE SortType = 0
	SortType_SORT_TYPE_ASC     SortType = 1
	SortType_SORT_TYPE_DESC    SortType = 2
)

// Enum value maps for SortType.
var (
	SortType_name = map[int32]string{
		0: "UNKNOWN_SORT_TYPE",
		1: "SORT_TYPE_ASC",
		2: "SORT_TYPE_DESC",
	}
	SortType_value = map[string]int32{
		"UNKNOWN_SORT_TYPE": 0,
		"SORT_TYPE_ASC":     1,
		"SORT_TYPE_DESC":    2,
	}
)

func (x SortType) Enum() *SortType {
	p := new(SortType)
	*p = x
	return p
}

func (x SortType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortType) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[16].Descriptor()
}

func (SortType) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[16]
}

func (x SortType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortType.Descriptor instead.
func (SortType) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{16}
}

type UserType int32

const (
	UserType_UNKNOWN_USER_TYPE   UserType = 0
	UserType_USER_TYPE_CURIOUR   UserType = 1
	UserType_USER_TYPE_PASSENGER UserType = 2
	UserType_USER_TYPE_ADMIN     UserType = 3
	UserType_USER_TYPE_ALL       UserType = 4
)

// Enum value maps for UserType.
var (
	UserType_name = map[int32]string{
		0: "UNKNOWN_USER_TYPE",
		1: "USER_TYPE_CURIOUR",
		2: "USER_TYPE_PASSENGER",
		3: "USER_TYPE_ADMIN",
		4: "USER_TYPE_ALL",
	}
	UserType_value = map[string]int32{
		"UNKNOWN_USER_TYPE":   0,
		"USER_TYPE_CURIOUR":   1,
		"USER_TYPE_PASSENGER": 2,
		"USER_TYPE_ADMIN":     3,
		"USER_TYPE_ALL":       4,
	}
)

func (x UserType) Enum() *UserType {
	p := new(UserType)
	*p = x
	return p
}

func (x UserType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserType) Descriptor() protoreflect.EnumDescriptor {
	return file_party_proto_enumTypes[17].Descriptor()
}

func (UserType) Type() protoreflect.EnumType {
	return &file_party_proto_enumTypes[17]
}

func (x UserType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserType.Descriptor instead.
func (UserType) EnumDescriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{17}
}

type SearchMotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken        string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RegistrationNumber string `protobuf:"bytes,2,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number,omitempty"`
}

func (x *SearchMotRequest) Reset() {
	*x = SearchMotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMotRequest) ProtoMessage() {}

func (x *SearchMotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMotRequest.ProtoReflect.Descriptor instead.
func (*SearchMotRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{0}
}

func (x *SearchMotRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *SearchMotRequest) GetRegistrationNumber() string {
	if x != nil {
		return x.RegistrationNumber
	}
	return ""
}

type SearchMotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mot *Mot `protobuf:"bytes,1,opt,name=mot,proto3" json:"mot,omitempty"`
}

func (x *SearchMotResponse) Reset() {
	*x = SearchMotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMotResponse) ProtoMessage() {}

func (x *SearchMotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMotResponse.ProtoReflect.Descriptor instead.
func (*SearchMotResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{1}
}

func (x *SearchMotResponse) GetMot() *Mot {
	if x != nil {
		return x.Mot
	}
	return nil
}

type GetCourierAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetCourierAccountRequest) Reset() {
	*x = GetCourierAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierAccountRequest) ProtoMessage() {}

func (x *GetCourierAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierAccountRequest.ProtoReflect.Descriptor instead.
func (*GetCourierAccountRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{2}
}

func (x *GetCourierAccountRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type GetCourierAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *CourierProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetCourierAccountResponse) Reset() {
	*x = GetCourierAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierAccountResponse) ProtoMessage() {}

func (x *GetCourierAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierAccountResponse.ProtoReflect.Descriptor instead.
func (*GetCourierAccountResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{3}
}

func (x *GetCourierAccountResponse) GetProfile() *CourierProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type FindCourierAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// Types that are assignable to Filter:
	//	*FindCourierAccountsRequest_UserId
	//	*FindCourierAccountsRequest_PhoneNumber
	//	*FindCourierAccountsRequest_Email
	//	*FindCourierAccountsRequest_Name
	Filter isFindCourierAccountsRequest_Filter `protobuf_oneof:"filter"`
}

func (x *FindCourierAccountsRequest) Reset() {
	*x = FindCourierAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCourierAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCourierAccountsRequest) ProtoMessage() {}

func (x *FindCourierAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCourierAccountsRequest.ProtoReflect.Descriptor instead.
func (*FindCourierAccountsRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{4}
}

func (x *FindCourierAccountsRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (m *FindCourierAccountsRequest) GetFilter() isFindCourierAccountsRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *FindCourierAccountsRequest) GetUserId() string {
	if x, ok := x.GetFilter().(*FindCourierAccountsRequest_UserId); ok {
		return x.UserId
	}
	return ""
}

func (x *FindCourierAccountsRequest) GetPhoneNumber() string {
	if x, ok := x.GetFilter().(*FindCourierAccountsRequest_PhoneNumber); ok {
		return x.PhoneNumber
	}
	return ""
}

func (x *FindCourierAccountsRequest) GetEmail() string {
	if x, ok := x.GetFilter().(*FindCourierAccountsRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *FindCourierAccountsRequest) GetName() string {
	if x, ok := x.GetFilter().(*FindCourierAccountsRequest_Name); ok {
		return x.Name
	}
	return ""
}

type isFindCourierAccountsRequest_Filter interface {
	isFindCourierAccountsRequest_Filter()
}

type FindCourierAccountsRequest_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

type FindCourierAccountsRequest_PhoneNumber struct {
	PhoneNumber string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3,oneof"`
}

type FindCourierAccountsRequest_Email struct {
	Email string `protobuf:"bytes,4,opt,name=email,proto3,oneof"`
}

type FindCourierAccountsRequest_Name struct {
	Name string `protobuf:"bytes,5,opt,name=name,proto3,oneof"`
}

func (*FindCourierAccountsRequest_UserId) isFindCourierAccountsRequest_Filter() {}

func (*FindCourierAccountsRequest_PhoneNumber) isFindCourierAccountsRequest_Filter() {}

func (*FindCourierAccountsRequest_Email) isFindCourierAccountsRequest_Filter() {}

func (*FindCourierAccountsRequest_Name) isFindCourierAccountsRequest_Filter() {}

type FindCourierAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*CourierProfile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *FindCourierAccountsResponse) Reset() {
	*x = FindCourierAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCourierAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCourierAccountsResponse) ProtoMessage() {}

func (x *FindCourierAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCourierAccountsResponse.ProtoReflect.Descriptor instead.
func (*FindCourierAccountsResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{5}
}

func (x *FindCourierAccountsResponse) GetProfiles() []*CourierProfile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type CourierProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string             `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FirstName        string             `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName         string             `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	PhoneNumber      string             `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Email            string             `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	BirthDate        string             `protobuf:"bytes,6,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	TransportType    TransportationType `protobuf:"varint,7,opt,name=transport_type,json=transportType,proto3,enum=party.TransportationType" json:"transport_type,omitempty"`
	Citizen          Boolean            `protobuf:"varint,8,opt,name=citizen,proto3,enum=party.Boolean" json:"citizen,omitempty"`
	TransportSize    TransportationSize `protobuf:"varint,9,opt,name=transport_size,json=transportSize,proto3,enum=party.TransportationSize" json:"transport_size,omitempty"`
	AuthorizedClaims []*AuthorizedClaim `protobuf:"bytes,10,rep,name=authorized_claims,json=authorizedClaims,proto3" json:"authorized_claims,omitempty"`
}

func (x *CourierProfile) Reset() {
	*x = CourierProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourierProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourierProfile) ProtoMessage() {}

func (x *CourierProfile) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourierProfile.ProtoReflect.Descriptor instead.
func (*CourierProfile) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{6}
}

func (x *CourierProfile) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CourierProfile) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CourierProfile) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CourierProfile) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CourierProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CourierProfile) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *CourierProfile) GetTransportType() TransportationType {
	if x != nil {
		return x.TransportType
	}
	return TransportationType_UNKNOWN_TRANSPORTATION_TYPE
}

func (x *CourierProfile) GetCitizen() Boolean {
	if x != nil {
		return x.Citizen
	}
	return Boolean_UNKNOWN_BOOLEAN
}

func (x *CourierProfile) GetTransportSize() TransportationSize {
	if x != nil {
		return x.TransportSize
	}
	return TransportationSize_UNKNOWN_TRANSPORTATION_SIZE
}

func (x *CourierProfile) GetAuthorizedClaims() []*AuthorizedClaim {
	if x != nil {
		return x.AuthorizedClaims
	}
	return nil
}

type AuthorizedClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string    `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Type       ClaimType `protobuf:"varint,2,opt,name=type,proto3,enum=party.ClaimType" json:"type,omitempty"`
}

func (x *AuthorizedClaim) Reset() {
	*x = AuthorizedClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizedClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedClaim) ProtoMessage() {}

func (x *AuthorizedClaim) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedClaim.ProtoReflect.Descriptor instead.
func (*AuthorizedClaim) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{7}
}

func (x *AuthorizedClaim) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *AuthorizedClaim) GetType() ClaimType {
	if x != nil {
		return x.Type
	}
	return ClaimType_UNKNOWN_CLAIM_TYPE
}

type CreateCourierAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// access token that is taken from uaa
	// phone number and id of the user is extracted from access_token
	AccessToken string  `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	FirstName   string  `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName    string  `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email       string  `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	BirthDate   string  `protobuf:"bytes,5,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	Citizen     Boolean `protobuf:"varint,6,opt,name=citizen,proto3,enum=party.Boolean" json:"citizen,omitempty"`
}

func (x *CreateCourierAccountRequest) Reset() {
	*x = CreateCourierAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCourierAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCourierAccountRequest) ProtoMessage() {}

func (x *CreateCourierAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCourierAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateCourierAccountRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{8}
}

func (x *CreateCourierAccountRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreateCourierAccountRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CreateCourierAccountRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CreateCourierAccountRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateCourierAccountRequest) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *CreateCourierAccountRequest) GetCitizen() Boolean {
	if x != nil {
		return x.Citizen
	}
	return Boolean_UNKNOWN_BOOLEAN
}

type CreateCourierAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateCourierAccountResponse) Reset() {
	*x = CreateCourierAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCourierAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCourierAccountResponse) ProtoMessage() {}

func (x *CreateCourierAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCourierAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateCourierAccountResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{9}
}

type UpdateCourierAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// optional
	FirstName string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// optional
	LastName string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// optional
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	// optional
	BirthDate string `protobuf:"bytes,5,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	// optional
	TransportationType TransportationType `protobuf:"varint,6,opt,name=transportation_type,json=transportationType,proto3,enum=party.TransportationType" json:"transportation_type,omitempty"`
	// optional
	Citizen Boolean `protobuf:"varint,7,opt,name=citizen,proto3,enum=party.Boolean" json:"citizen,omitempty"`
	// optional
	TransportSize TransportationSize `protobuf:"varint,8,opt,name=transport_size,json=transportSize,proto3,enum=party.TransportationSize" json:"transport_size,omitempty"`
}

func (x *UpdateCourierAccountRequest) Reset() {
	*x = UpdateCourierAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCourierAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCourierAccountRequest) ProtoMessage() {}

func (x *UpdateCourierAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCourierAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateCourierAccountRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateCourierAccountRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *UpdateCourierAccountRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UpdateCourierAccountRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UpdateCourierAccountRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateCourierAccountRequest) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *UpdateCourierAccountRequest) GetTransportationType() TransportationType {
	if x != nil {
		return x.TransportationType
	}
	return TransportationType_UNKNOWN_TRANSPORTATION_TYPE
}

func (x *UpdateCourierAccountRequest) GetCitizen() Boolean {
	if x != nil {
		return x.Citizen
	}
	return Boolean_UNKNOWN_BOOLEAN
}

func (x *UpdateCourierAccountRequest) GetTransportSize() TransportationSize {
	if x != nil {
		return x.TransportSize
	}
	return TransportationSize_UNKNOWN_TRANSPORTATION_SIZE
}

type UpdateCourierAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCourierAccountResponse) Reset() {
	*x = UpdateCourierAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCourierAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCourierAccountResponse) ProtoMessage() {}

func (x *UpdateCourierAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCourierAccountResponse.ProtoReflect.Descriptor instead.
func (*UpdateCourierAccountResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{11}
}

type UpdateCourierPhoneNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// access token containing old phone-number
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// access token containing new phone-number
	NewAccessToken string `protobuf:"bytes,2,opt,name=new_access_token,json=newAccessToken,proto3" json:"new_access_token,omitempty"`
}

func (x *UpdateCourierPhoneNumberRequest) Reset() {
	*x = UpdateCourierPhoneNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCourierPhoneNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCourierPhoneNumberRequest) ProtoMessage() {}

func (x *UpdateCourierPhoneNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCourierPhoneNumberRequest.ProtoReflect.Descriptor instead.
func (*UpdateCourierPhoneNumberRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateCourierPhoneNumberRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *UpdateCourierPhoneNumberRequest) GetNewAccessToken() string {
	if x != nil {
		return x.NewAccessToken
	}
	return ""
}

type UpdateCourierPhoneNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCourierPhoneNumberResponse) Reset() {
	*x = UpdateCourierPhoneNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCourierPhoneNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCourierPhoneNumberResponse) ProtoMessage() {}

func (x *UpdateCourierPhoneNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCourierPhoneNumberResponse.ProtoReflect.Descriptor instead.
func (*UpdateCourierPhoneNumberResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{13}
}

type IDCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName      string     `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName       string     `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Number         string     `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	ExpirationDate string     `protobuf:"bytes,4,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	IssuePlace     string     `protobuf:"bytes,5,opt,name=issue_place,json=issuePlace,proto3" json:"issue_place,omitempty"`
	Type           IDCardType `protobuf:"varint,6,opt,name=type,proto3,enum=party.IDCardType" json:"type,omitempty"`
	// list of uploaded document ids
	DocumentIds []*DocumentInfo `protobuf:"bytes,7,rep,name=document_ids,json=documentIds,proto3" json:"document_ids,omitempty"`
}

func (x *IDCard) Reset() {
	*x = IDCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDCard) ProtoMessage() {}

func (x *IDCard) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDCard.ProtoReflect.Descriptor instead.
func (*IDCard) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{14}
}

func (x *IDCard) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *IDCard) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *IDCard) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *IDCard) GetExpirationDate() string {
	if x != nil {
		return x.ExpirationDate
	}
	return ""
}

func (x *IDCard) GetIssuePlace() string {
	if x != nil {
		return x.IssuePlace
	}
	return ""
}

func (x *IDCard) GetType() IDCardType {
	if x != nil {
		return x.Type
	}
	return IDCardType_UNKNOWN_IDCARD_TYPE
}

func (x *IDCard) GetDocumentIds() []*DocumentInfo {
	if x != nil {
		return x.DocumentIds
	}
	return nil
}

type DrivingLicense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrivingLicenseNumber string `protobuf:"bytes,1,opt,name=driving_license_number,json=drivingLicenseNumber,proto3" json:"driving_license_number,omitempty"`
	ExpirationDate       string `protobuf:"bytes,2,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	// list of uploaded document ids
	DocumentIds []*DocumentInfo `protobuf:"bytes,3,rep,name=document_ids,json=documentIds,proto3" json:"document_ids,omitempty"`
}

func (x *DrivingLicense) Reset() {
	*x = DrivingLicense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrivingLicense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrivingLicense) ProtoMessage() {}

func (x *DrivingLicense) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrivingLicense.ProtoReflect.Descriptor instead.
func (*DrivingLicense) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{15}
}

func (x *DrivingLicense) GetDrivingLicenseNumber() string {
	if x != nil {
		return x.DrivingLicenseNumber
	}
	return ""
}

func (x *DrivingLicense) GetExpirationDate() string {
	if x != nil {
		return x.ExpirationDate
	}
	return ""
}

func (x *DrivingLicense) GetDocumentIds() []*DocumentInfo {
	if x != nil {
		return x.DocumentIds
	}
	return nil
}

type DriverBackground struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NationalInsuranceNumber string  `protobuf:"bytes,1,opt,name=national_insurance_number,json=nationalInsuranceNumber,proto3" json:"national_insurance_number,omitempty"`
	UploadDbsLater          Boolean `protobuf:"varint,2,opt,name=upload_dbs_later,json=uploadDbsLater,proto3,enum=party.Boolean" json:"upload_dbs_later,omitempty"`
	// list of uploaded document ids
	DocumentIds []*DocumentInfo `protobuf:"bytes,3,rep,name=document_ids,json=documentIds,proto3" json:"document_ids,omitempty"`
}

func (x *DriverBackground) Reset() {
	*x = DriverBackground{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverBackground) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverBackground) ProtoMessage() {}

func (x *DriverBackground) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverBackground.ProtoReflect.Descriptor instead.
func (*DriverBackground) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{16}
}

func (x *DriverBackground) GetNationalInsuranceNumber() string {
	if x != nil {
		return x.NationalInsuranceNumber
	}
	return ""
}

func (x *DriverBackground) GetUploadDbsLater() Boolean {
	if x != nil {
		return x.UploadDbsLater
	}
	return Boolean_UNKNOWN_BOOLEAN
}

func (x *DriverBackground) GetDocumentIds() []*DocumentInfo {
	if x != nil {
		return x.DocumentIds
	}
	return nil
}

type ResidenceCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number         string `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	ExpirationDate string `protobuf:"bytes,2,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	IssueDate      string `protobuf:"bytes,3,opt,name=issue_date,json=issueDate,proto3" json:"issue_date,omitempty"`
	// list of uploaded document ids
	DocumentIds []*DocumentInfo `protobuf:"bytes,4,rep,name=document_ids,json=documentIds,proto3" json:"document_ids,omitempty"`
}

func (x *ResidenceCard) Reset() {
	*x = ResidenceCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResidenceCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResidenceCard) ProtoMessage() {}

func (x *ResidenceCard) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResidenceCard.ProtoReflect.Descriptor instead.
func (*ResidenceCard) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{17}
}

func (x *ResidenceCard) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *ResidenceCard) GetExpirationDate() string {
	if x != nil {
		return x.ExpirationDate
	}
	return ""
}

func (x *ResidenceCard) GetIssueDate() string {
	if x != nil {
		return x.IssueDate
	}
	return ""
}

func (x *ResidenceCard) GetDocumentIds() []*DocumentInfo {
	if x != nil {
		return x.DocumentIds
	}
	return nil
}

type BankAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankName          string `protobuf:"bytes,1,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`
	AccountNumber     string `protobuf:"bytes,2,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	AccountHolderName string `protobuf:"bytes,3,opt,name=account_holder_name,json=accountHolderName,proto3" json:"account_holder_name,omitempty"`
	SortCode          string `protobuf:"bytes,4,opt,name=sort_code,json=sortCode,proto3" json:"sort_code,omitempty"`
	// list of uploaded document ids
	DocumentIds []*DocumentInfo `protobuf:"bytes,5,rep,name=document_ids,json=documentIds,proto3" json:"document_ids,omitempty"`
}

func (x *BankAccount) Reset() {
	*x = BankAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankAccount) ProtoMessage() {}

func (x *BankAccount) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankAccount.ProtoReflect.Descriptor instead.
func (*BankAccount) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{18}
}

func (x *BankAccount) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *BankAccount) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *BankAccount) GetAccountHolderName() string {
	if x != nil {
		return x.AccountHolderName
	}
	return ""
}

func (x *BankAccount) GetSortCode() string {
	if x != nil {
		return x.SortCode
	}
	return ""
}

func (x *BankAccount) GetDocumentIds() []*DocumentInfo {
	if x != nil {
		return x.DocumentIds
	}
	return nil
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Street         string `protobuf:"bytes,1,opt,name=street,proto3" json:"street,omitempty"`
	Building       string `protobuf:"bytes,2,opt,name=building,proto3" json:"building,omitempty"`
	City           string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	County         string `protobuf:"bytes,4,opt,name=county,proto3" json:"county,omitempty"`
	PostCode       string `protobuf:"bytes,5,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`
	AddressDetails string `protobuf:"bytes,6,opt,name=address_details,json=addressDetails,proto3" json:"address_details,omitempty"`
	// list of uploaded document ids
	DocumentIds []*DocumentInfo `protobuf:"bytes,7,rep,name=document_ids,json=documentIds,proto3" json:"document_ids,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{19}
}

func (x *Address) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *Address) GetBuilding() string {
	if x != nil {
		return x.Building
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetCounty() string {
	if x != nil {
		return x.County
	}
	return ""
}

func (x *Address) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *Address) GetAddressDetails() string {
	if x != nil {
		return x.AddressDetails
	}
	return ""
}

func (x *Address) GetDocumentIds() []*DocumentInfo {
	if x != nil {
		return x.DocumentIds
	}
	return nil
}

type Mot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistrationNumber       string    `protobuf:"bytes,1,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number,omitempty"`
	Co2Emissions             int32     `protobuf:"varint,2,opt,name=co2_emissions,json=co2Emissions,proto3" json:"co2_emissions,omitempty"`
	EngineCapacity           int32     `protobuf:"varint,3,opt,name=engine_capacity,json=engineCapacity,proto3" json:"engine_capacity,omitempty"`
	EuroStatus               string    `protobuf:"bytes,4,opt,name=euro_status,json=euroStatus,proto3" json:"euro_status,omitempty"`
	MarkedForExport          Boolean   `protobuf:"varint,5,opt,name=marked_for_export,json=markedForExport,proto3,enum=party.Boolean" json:"marked_for_export,omitempty"`
	FuelType                 string    `protobuf:"bytes,6,opt,name=fuel_type,json=fuelType,proto3" json:"fuel_type,omitempty"`
	MotStatus                MotStatus `protobuf:"varint,7,opt,name=mot_status,json=motStatus,proto3,enum=party.MotStatus" json:"mot_status,omitempty"`
	RevenueWeight            int32     `protobuf:"varint,8,opt,name=revenue_weight,json=revenueWeight,proto3" json:"revenue_weight,omitempty"`
	Colour                   string    `protobuf:"bytes,9,opt,name=colour,proto3" json:"colour,omitempty"`
	Make                     string    `protobuf:"bytes,10,opt,name=make,proto3" json:"make,omitempty"`
	TypeApproval             string    `protobuf:"bytes,11,opt,name=type_approval,json=typeApproval,proto3" json:"type_approval,omitempty"`
	YearOfManufacture        int32     `protobuf:"varint,12,opt,name=year_of_manufacture,json=yearOfManufacture,proto3" json:"year_of_manufacture,omitempty"`
	TaxDueDate               string    `protobuf:"bytes,13,opt,name=tax_due_date,json=taxDueDate,proto3" json:"tax_due_date,omitempty"`
	TaxStatus                TaxStatus `protobuf:"varint,14,opt,name=tax_status,json=taxStatus,proto3,enum=party.TaxStatus" json:"tax_status,omitempty"`
	DateOfLastV5CIssued      string    `protobuf:"bytes,15,opt,name=date_of_last_v5c_issued,json=dateOfLastV5cIssued,proto3" json:"date_of_last_v5c_issued,omitempty"`
	RealDrivingEmissions     string    `protobuf:"bytes,16,opt,name=real_driving_emissions,json=realDrivingEmissions,proto3" json:"real_driving_emissions,omitempty"`
	Wheelplan                string    `protobuf:"bytes,17,opt,name=wheelplan,proto3" json:"wheelplan,omitempty"`
	MonthOfFirstRegistration string    `protobuf:"bytes,18,opt,name=month_of_first_registration,json=monthOfFirstRegistration,proto3" json:"month_of_first_registration,omitempty"`
}

func (x *Mot) Reset() {
	*x = Mot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mot) ProtoMessage() {}

func (x *Mot) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mot.ProtoReflect.Descriptor instead.
func (*Mot) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{20}
}

func (x *Mot) GetRegistrationNumber() string {
	if x != nil {
		return x.RegistrationNumber
	}
	return ""
}

func (x *Mot) GetCo2Emissions() int32 {
	if x != nil {
		return x.Co2Emissions
	}
	return 0
}

func (x *Mot) GetEngineCapacity() int32 {
	if x != nil {
		return x.EngineCapacity
	}
	return 0
}

func (x *Mot) GetEuroStatus() string {
	if x != nil {
		return x.EuroStatus
	}
	return ""
}

func (x *Mot) GetMarkedForExport() Boolean {
	if x != nil {
		return x.MarkedForExport
	}
	return Boolean_UNKNOWN_BOOLEAN
}

func (x *Mot) GetFuelType() string {
	if x != nil {
		return x.FuelType
	}
	return ""
}

func (x *Mot) GetMotStatus() MotStatus {
	if x != nil {
		return x.MotStatus
	}
	return MotStatus_UNKNOWN_MOT_STATUS
}

func (x *Mot) GetRevenueWeight() int32 {
	if x != nil {
		return x.RevenueWeight
	}
	return 0
}

func (x *Mot) GetColour() string {
	if x != nil {
		return x.Colour
	}
	return ""
}

func (x *Mot) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *Mot) GetTypeApproval() string {
	if x != nil {
		return x.TypeApproval
	}
	return ""
}

func (x *Mot) GetYearOfManufacture() int32 {
	if x != nil {
		return x.YearOfManufacture
	}
	return 0
}

func (x *Mot) GetTaxDueDate() string {
	if x != nil {
		return x.TaxDueDate
	}
	return ""
}

func (x *Mot) GetTaxStatus() TaxStatus {
	if x != nil {
		return x.TaxStatus
	}
	return TaxStatus_UNKNOWN_TAX_STATUS
}

func (x *Mot) GetDateOfLastV5CIssued() string {
	if x != nil {
		return x.DateOfLastV5CIssued
	}
	return ""
}

func (x *Mot) GetRealDrivingEmissions() string {
	if x != nil {
		return x.RealDrivingEmissions
	}
	return ""
}

func (x *Mot) GetWheelplan() string {
	if x != nil {
		return x.Wheelplan
	}
	return ""
}

func (x *Mot) GetMonthOfFirstRegistration() string {
	if x != nil {
		return x.MonthOfFirstRegistration
	}
	return ""
}

type UpdateProfileAdditionalInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user id is taken from access_token
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// Types that are assignable to Info:
	//	*UpdateProfileAdditionalInfoRequest_IdCard
	//	*UpdateProfileAdditionalInfoRequest_DrivingLicense
	//	*UpdateProfileAdditionalInfoRequest_DriverBackground
	//	*UpdateProfileAdditionalInfoRequest_ResidenceCard
	//	*UpdateProfileAdditionalInfoRequest_BankAccount
	//	*UpdateProfileAdditionalInfoRequest_Address
	//	*UpdateProfileAdditionalInfoRequest_Mot
	Info isUpdateProfileAdditionalInfoRequest_Info `protobuf_oneof:"info"`
}

func (x *UpdateProfileAdditionalInfoRequest) Reset() {
	*x = UpdateProfileAdditionalInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfileAdditionalInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileAdditionalInfoRequest) ProtoMessage() {}

func (x *UpdateProfileAdditionalInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileAdditionalInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateProfileAdditionalInfoRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateProfileAdditionalInfoRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (m *UpdateProfileAdditionalInfoRequest) GetInfo() isUpdateProfileAdditionalInfoRequest_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *UpdateProfileAdditionalInfoRequest) GetIdCard() *IDCard {
	if x, ok := x.GetInfo().(*UpdateProfileAdditionalInfoRequest_IdCard); ok {
		return x.IdCard
	}
	return nil
}

func (x *UpdateProfileAdditionalInfoRequest) GetDrivingLicense() *DrivingLicense {
	if x, ok := x.GetInfo().(*UpdateProfileAdditionalInfoRequest_DrivingLicense); ok {
		return x.DrivingLicense
	}
	return nil
}

func (x *UpdateProfileAdditionalInfoRequest) GetDriverBackground() *DriverBackground {
	if x, ok := x.GetInfo().(*UpdateProfileAdditionalInfoRequest_DriverBackground); ok {
		return x.DriverBackground
	}
	return nil
}

func (x *UpdateProfileAdditionalInfoRequest) GetResidenceCard() *ResidenceCard {
	if x, ok := x.GetInfo().(*UpdateProfileAdditionalInfoRequest_ResidenceCard); ok {
		return x.ResidenceCard
	}
	return nil
}

func (x *UpdateProfileAdditionalInfoRequest) GetBankAccount() *BankAccount {
	if x, ok := x.GetInfo().(*UpdateProfileAdditionalInfoRequest_BankAccount); ok {
		return x.BankAccount
	}
	return nil
}

func (x *UpdateProfileAdditionalInfoRequest) GetAddress() *Address {
	if x, ok := x.GetInfo().(*UpdateProfileAdditionalInfoRequest_Address); ok {
		return x.Address
	}
	return nil
}

func (x *UpdateProfileAdditionalInfoRequest) GetMot() *MotConfirm {
	if x, ok := x.GetInfo().(*UpdateProfileAdditionalInfoRequest_Mot); ok {
		return x.Mot
	}
	return nil
}

type isUpdateProfileAdditionalInfoRequest_Info interface {
	isUpdateProfileAdditionalInfoRequest_Info()
}

type UpdateProfileAdditionalInfoRequest_IdCard struct {
	IdCard *IDCard `protobuf:"bytes,2,opt,name=id_card,json=idCard,proto3,oneof"`
}

type UpdateProfileAdditionalInfoRequest_DrivingLicense struct {
	DrivingLicense *DrivingLicense `protobuf:"bytes,3,opt,name=driving_license,json=drivingLicense,proto3,oneof"`
}

type UpdateProfileAdditionalInfoRequest_DriverBackground struct {
	DriverBackground *DriverBackground `protobuf:"bytes,4,opt,name=driver_background,json=driverBackground,proto3,oneof"`
}

type UpdateProfileAdditionalInfoRequest_ResidenceCard struct {
	ResidenceCard *ResidenceCard `protobuf:"bytes,5,opt,name=residence_card,json=residenceCard,proto3,oneof"`
}

type UpdateProfileAdditionalInfoRequest_BankAccount struct {
	BankAccount *BankAccount `protobuf:"bytes,6,opt,name=bank_account,json=bankAccount,proto3,oneof"`
}

type UpdateProfileAdditionalInfoRequest_Address struct {
	Address *Address `protobuf:"bytes,7,opt,name=address,proto3,oneof"`
}

type UpdateProfileAdditionalInfoRequest_Mot struct {
	Mot *MotConfirm `protobuf:"bytes,8,opt,name=mot,proto3,oneof"`
}

func (*UpdateProfileAdditionalInfoRequest_IdCard) isUpdateProfileAdditionalInfoRequest_Info() {}

func (*UpdateProfileAdditionalInfoRequest_DrivingLicense) isUpdateProfileAdditionalInfoRequest_Info() {
}

func (*UpdateProfileAdditionalInfoRequest_DriverBackground) isUpdateProfileAdditionalInfoRequest_Info() {
}

func (*UpdateProfileAdditionalInfoRequest_ResidenceCard) isUpdateProfileAdditionalInfoRequest_Info() {
}

func (*UpdateProfileAdditionalInfoRequest_BankAccount) isUpdateProfileAdditionalInfoRequest_Info() {}

func (*UpdateProfileAdditionalInfoRequest_Address) isUpdateProfileAdditionalInfoRequest_Info() {}

func (*UpdateProfileAdditionalInfoRequest_Mot) isUpdateProfileAdditionalInfoRequest_Info() {}

type UpdateProfileAdditionalInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProfileAdditionalInfoResponse) Reset() {
	*x = UpdateProfileAdditionalInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfileAdditionalInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileAdditionalInfoResponse) ProtoMessage() {}

func (x *UpdateProfileAdditionalInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileAdditionalInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdateProfileAdditionalInfoResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{22}
}

type MotConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistrationNumber string `protobuf:"bytes,2,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number,omitempty"`
}

func (x *MotConfirm) Reset() {
	*x = MotConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MotConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MotConfirm) ProtoMessage() {}

func (x *MotConfirm) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MotConfirm.ProtoReflect.Descriptor instead.
func (*MotConfirm) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{23}
}

func (x *MotConfirm) GetRegistrationNumber() string {
	if x != nil {
		return x.RegistrationNumber
	}
	return ""
}

type DeleteProfileAdditionalInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user id is taken from access_token
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// optional
	Type AdditionalInfoType `protobuf:"varint,2,opt,name=type,proto3,enum=party.AdditionalInfoType" json:"type,omitempty"`
}

func (x *DeleteProfileAdditionalInfoRequest) Reset() {
	*x = DeleteProfileAdditionalInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProfileAdditionalInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProfileAdditionalInfoRequest) ProtoMessage() {}

func (x *DeleteProfileAdditionalInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProfileAdditionalInfoRequest.ProtoReflect.Descriptor instead.
func (*DeleteProfileAdditionalInfoRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteProfileAdditionalInfoRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *DeleteProfileAdditionalInfoRequest) GetType() AdditionalInfoType {
	if x != nil {
		return x.Type
	}
	return AdditionalInfoType_UNKNOWN_ADDITIONAL_INFO_TYPE
}

type DeleteProfileAdditionalInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProfileAdditionalInfoResponse) Reset() {
	*x = DeleteProfileAdditionalInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProfileAdditionalInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProfileAdditionalInfoResponse) ProtoMessage() {}

func (x *DeleteProfileAdditionalInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProfileAdditionalInfoResponse.ProtoReflect.Descriptor instead.
func (*DeleteProfileAdditionalInfoResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{25}
}

type GetProfileAdditionalInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string             `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Type        AdditionalInfoType `protobuf:"varint,2,opt,name=type,proto3,enum=party.AdditionalInfoType" json:"type,omitempty"`
}

func (x *GetProfileAdditionalInfoRequest) Reset() {
	*x = GetProfileAdditionalInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileAdditionalInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileAdditionalInfoRequest) ProtoMessage() {}

func (x *GetProfileAdditionalInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileAdditionalInfoRequest.ProtoReflect.Descriptor instead.
func (*GetProfileAdditionalInfoRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{26}
}

func (x *GetProfileAdditionalInfoRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetProfileAdditionalInfoRequest) GetType() AdditionalInfoType {
	if x != nil {
		return x.Type
	}
	return AdditionalInfoType_UNKNOWN_ADDITIONAL_INFO_TYPE
}

type GetProfileAdditionalInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Info:
	//	*GetProfileAdditionalInfoResponse_IdCard
	//	*GetProfileAdditionalInfoResponse_DrivingLicense
	//	*GetProfileAdditionalInfoResponse_DriverBackground
	//	*GetProfileAdditionalInfoResponse_ResidenceCard
	//	*GetProfileAdditionalInfoResponse_BankAccount
	//	*GetProfileAdditionalInfoResponse_Address
	//	*GetProfileAdditionalInfoResponse_Mot
	//	*GetProfileAdditionalInfoResponse_InsuranceCertificate
	//	*GetProfileAdditionalInfoResponse_ProfilePicture
	//	*GetProfileAdditionalInfoResponse_ProfileAdditionalInfo
	Info isGetProfileAdditionalInfoResponse_Info `protobuf_oneof:"info"`
}

func (x *GetProfileAdditionalInfoResponse) Reset() {
	*x = GetProfileAdditionalInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileAdditionalInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileAdditionalInfoResponse) ProtoMessage() {}

func (x *GetProfileAdditionalInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileAdditionalInfoResponse.ProtoReflect.Descriptor instead.
func (*GetProfileAdditionalInfoResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{27}
}

func (m *GetProfileAdditionalInfoResponse) GetInfo() isGetProfileAdditionalInfoResponse_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *GetProfileAdditionalInfoResponse) GetIdCard() *IDCard {
	if x, ok := x.GetInfo().(*GetProfileAdditionalInfoResponse_IdCard); ok {
		return x.IdCard
	}
	return nil
}

func (x *GetProfileAdditionalInfoResponse) GetDrivingLicense() *DrivingLicense {
	if x, ok := x.GetInfo().(*GetProfileAdditionalInfoResponse_DrivingLicense); ok {
		return x.DrivingLicense
	}
	return nil
}

func (x *GetProfileAdditionalInfoResponse) GetDriverBackground() *DriverBackground {
	if x, ok := x.GetInfo().(*GetProfileAdditionalInfoResponse_DriverBackground); ok {
		return x.DriverBackground
	}
	return nil
}

func (x *GetProfileAdditionalInfoResponse) GetResidenceCard() *ResidenceCard {
	if x, ok := x.GetInfo().(*GetProfileAdditionalInfoResponse_ResidenceCard); ok {
		return x.ResidenceCard
	}
	return nil
}

func (x *GetProfileAdditionalInfoResponse) GetBankAccount() *BankAccount {
	if x, ok := x.GetInfo().(*GetProfileAdditionalInfoResponse_BankAccount); ok {
		return x.BankAccount
	}
	return nil
}

func (x *GetProfileAdditionalInfoResponse) GetAddress() *Address {
	if x, ok := x.GetInfo().(*GetProfileAdditionalInfoResponse_Address); ok {
		return x.Address
	}
	return nil
}

func (x *GetProfileAdditionalInfoResponse) GetMot() *Mot {
	if x, ok := x.GetInfo().(*GetProfileAdditionalInfoResponse_Mot); ok {
		return x.Mot
	}
	return nil
}

func (x *GetProfileAdditionalInfoResponse) GetInsuranceCertificate() *InsuranceCertificate {
	if x, ok := x.GetInfo().(*GetProfileAdditionalInfoResponse_InsuranceCertificate); ok {
		return x.InsuranceCertificate
	}
	return nil
}

func (x *GetProfileAdditionalInfoResponse) GetProfilePicture() *ProfilePicture {
	if x, ok := x.GetInfo().(*GetProfileAdditionalInfoResponse_ProfilePicture); ok {
		return x.ProfilePicture
	}
	return nil
}

func (x *GetProfileAdditionalInfoResponse) GetProfileAdditionalInfo() *ProfileAdditionalInfo {
	if x, ok := x.GetInfo().(*GetProfileAdditionalInfoResponse_ProfileAdditionalInfo); ok {
		return x.ProfileAdditionalInfo
	}
	return nil
}

type isGetProfileAdditionalInfoResponse_Info interface {
	isGetProfileAdditionalInfoResponse_Info()
}

type GetProfileAdditionalInfoResponse_IdCard struct {
	IdCard *IDCard `protobuf:"bytes,1,opt,name=id_card,json=idCard,proto3,oneof"`
}

type GetProfileAdditionalInfoResponse_DrivingLicense struct {
	DrivingLicense *DrivingLicense `protobuf:"bytes,2,opt,name=driving_license,json=drivingLicense,proto3,oneof"`
}

type GetProfileAdditionalInfoResponse_DriverBackground struct {
	DriverBackground *DriverBackground `protobuf:"bytes,3,opt,name=driver_background,json=driverBackground,proto3,oneof"`
}

type GetProfileAdditionalInfoResponse_ResidenceCard struct {
	ResidenceCard *ResidenceCard `protobuf:"bytes,4,opt,name=residence_card,json=residenceCard,proto3,oneof"`
}

type GetProfileAdditionalInfoResponse_BankAccount struct {
	BankAccount *BankAccount `protobuf:"bytes,5,opt,name=bank_account,json=bankAccount,proto3,oneof"`
}

type GetProfileAdditionalInfoResponse_Address struct {
	Address *Address `protobuf:"bytes,6,opt,name=address,proto3,oneof"`
}

type GetProfileAdditionalInfoResponse_Mot struct {
	Mot *Mot `protobuf:"bytes,7,opt,name=mot,proto3,oneof"`
}

type GetProfileAdditionalInfoResponse_InsuranceCertificate struct {
	InsuranceCertificate *InsuranceCertificate `protobuf:"bytes,8,opt,name=insurance_certificate,json=insuranceCertificate,proto3,oneof"`
}

type GetProfileAdditionalInfoResponse_ProfilePicture struct {
	ProfilePicture *ProfilePicture `protobuf:"bytes,9,opt,name=profile_picture,json=profilePicture,proto3,oneof"`
}

type GetProfileAdditionalInfoResponse_ProfileAdditionalInfo struct {
	ProfileAdditionalInfo *ProfileAdditionalInfo `protobuf:"bytes,10,opt,name=profile_additional_info,json=profileAdditionalInfo,proto3,oneof"`
}

func (*GetProfileAdditionalInfoResponse_IdCard) isGetProfileAdditionalInfoResponse_Info() {}

func (*GetProfileAdditionalInfoResponse_DrivingLicense) isGetProfileAdditionalInfoResponse_Info() {}

func (*GetProfileAdditionalInfoResponse_DriverBackground) isGetProfileAdditionalInfoResponse_Info() {}

func (*GetProfileAdditionalInfoResponse_ResidenceCard) isGetProfileAdditionalInfoResponse_Info() {}

func (*GetProfileAdditionalInfoResponse_BankAccount) isGetProfileAdditionalInfoResponse_Info() {}

func (*GetProfileAdditionalInfoResponse_Address) isGetProfileAdditionalInfoResponse_Info() {}

func (*GetProfileAdditionalInfoResponse_Mot) isGetProfileAdditionalInfoResponse_Info() {}

func (*GetProfileAdditionalInfoResponse_InsuranceCertificate) isGetProfileAdditionalInfoResponse_Info() {
}

func (*GetProfileAdditionalInfoResponse_ProfilePicture) isGetProfileAdditionalInfoResponse_Info() {}

func (*GetProfileAdditionalInfoResponse_ProfileAdditionalInfo) isGetProfileAdditionalInfoResponse_Info() {
}

type ProfileAdditionalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdCard               *IDCard               `protobuf:"bytes,1,opt,name=id_card,json=idCard,proto3" json:"id_card,omitempty"`
	DrivingLicense       *DrivingLicense       `protobuf:"bytes,2,opt,name=driving_license,json=drivingLicense,proto3" json:"driving_license,omitempty"`
	DriverBackground     *DriverBackground     `protobuf:"bytes,3,opt,name=driver_background,json=driverBackground,proto3" json:"driver_background,omitempty"`
	ResidenceCard        *ResidenceCard        `protobuf:"bytes,4,opt,name=residence_card,json=residenceCard,proto3" json:"residence_card,omitempty"`
	BankAccount          *BankAccount          `protobuf:"bytes,5,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account,omitempty"`
	Address              *Address              `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Mot                  *Mot                  `protobuf:"bytes,7,opt,name=mot,proto3" json:"mot,omitempty"`
	InsuranceCertificate *InsuranceCertificate `protobuf:"bytes,8,opt,name=insurance_certificate,json=insuranceCertificate,proto3" json:"insurance_certificate,omitempty"`
	ProfilePicture       *ProfilePicture       `protobuf:"bytes,9,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
}

func (x *ProfileAdditionalInfo) Reset() {
	*x = ProfileAdditionalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileAdditionalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileAdditionalInfo) ProtoMessage() {}

func (x *ProfileAdditionalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileAdditionalInfo.ProtoReflect.Descriptor instead.
func (*ProfileAdditionalInfo) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{28}
}

func (x *ProfileAdditionalInfo) GetIdCard() *IDCard {
	if x != nil {
		return x.IdCard
	}
	return nil
}

func (x *ProfileAdditionalInfo) GetDrivingLicense() *DrivingLicense {
	if x != nil {
		return x.DrivingLicense
	}
	return nil
}

func (x *ProfileAdditionalInfo) GetDriverBackground() *DriverBackground {
	if x != nil {
		return x.DriverBackground
	}
	return nil
}

func (x *ProfileAdditionalInfo) GetResidenceCard() *ResidenceCard {
	if x != nil {
		return x.ResidenceCard
	}
	return nil
}

func (x *ProfileAdditionalInfo) GetBankAccount() *BankAccount {
	if x != nil {
		return x.BankAccount
	}
	return nil
}

func (x *ProfileAdditionalInfo) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *ProfileAdditionalInfo) GetMot() *Mot {
	if x != nil {
		return x.Mot
	}
	return nil
}

func (x *ProfileAdditionalInfo) GetInsuranceCertificate() *InsuranceCertificate {
	if x != nil {
		return x.InsuranceCertificate
	}
	return nil
}

func (x *ProfileAdditionalInfo) GetProfilePicture() *ProfilePicture {
	if x != nil {
		return x.ProfilePicture
	}
	return nil
}

type InsuranceCertificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Data     []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *InsuranceCertificate) Reset() {
	*x = InsuranceCertificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsuranceCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsuranceCertificate) ProtoMessage() {}

func (x *InsuranceCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsuranceCertificate.ProtoReflect.Descriptor instead.
func (*InsuranceCertificate) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{29}
}

func (x *InsuranceCertificate) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *InsuranceCertificate) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProfilePicture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Data     []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ProfilePicture) Reset() {
	*x = ProfilePicture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfilePicture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfilePicture) ProtoMessage() {}

func (x *ProfilePicture) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfilePicture.ProtoReflect.Descriptor instead.
func (*ProfilePicture) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{30}
}

func (x *ProfilePicture) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *ProfilePicture) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetProfileAdditionalInfoStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetProfileAdditionalInfoStatusRequest) Reset() {
	*x = GetProfileAdditionalInfoStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileAdditionalInfoStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileAdditionalInfoStatusRequest) ProtoMessage() {}

func (x *GetProfileAdditionalInfoStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileAdditionalInfoStatusRequest.ProtoReflect.Descriptor instead.
func (*GetProfileAdditionalInfoStatusRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{31}
}

func (x *GetProfileAdditionalInfoStatusRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type GetProfileAdditionalInfoStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GetProfileAdditionalInfoStatusResponseItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetProfileAdditionalInfoStatusResponse) Reset() {
	*x = GetProfileAdditionalInfoStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileAdditionalInfoStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileAdditionalInfoStatusResponse) ProtoMessage() {}

func (x *GetProfileAdditionalInfoStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileAdditionalInfoStatusResponse.ProtoReflect.Descriptor instead.
func (*GetProfileAdditionalInfoStatusResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{32}
}

func (x *GetProfileAdditionalInfoStatusResponse) GetItems() []*GetProfileAdditionalInfoStatusResponseItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetProfileAdditionalInfoStatusResponseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    AdditionalInfoType          `protobuf:"varint,1,opt,name=type,proto3,enum=party.AdditionalInfoType" json:"type,omitempty"`
	Status  ProfileAdditionalInfoStatus `protobuf:"varint,2,opt,name=status,proto3,enum=party.ProfileAdditionalInfoStatus" json:"status,omitempty"`
	Message string                      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetProfileAdditionalInfoStatusResponseItem) Reset() {
	*x = GetProfileAdditionalInfoStatusResponseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileAdditionalInfoStatusResponseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileAdditionalInfoStatusResponseItem) ProtoMessage() {}

func (x *GetProfileAdditionalInfoStatusResponseItem) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileAdditionalInfoStatusResponseItem.ProtoReflect.Descriptor instead.
func (*GetProfileAdditionalInfoStatusResponseItem) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{33}
}

func (x *GetProfileAdditionalInfoStatusResponseItem) GetType() AdditionalInfoType {
	if x != nil {
		return x.Type
	}
	return AdditionalInfoType_UNKNOWN_ADDITIONAL_INFO_TYPE
}

func (x *GetProfileAdditionalInfoStatusResponseItem) GetStatus() ProfileAdditionalInfoStatus {
	if x != nil {
		return x.Status
	}
	return ProfileAdditionalInfoStatus_UNKNOWN_PROFILE_ADDITIONAL_INFO_STATUS
}

func (x *GetProfileAdditionalInfoStatusResponseItem) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateProfileAdditionalInfoStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string                            `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Type        AdditionalInfoType                `protobuf:"varint,2,opt,name=type,proto3,enum=party.AdditionalInfoType" json:"type,omitempty"`
	Status      UpdateProfileAdditionalInfoStatus `protobuf:"varint,3,opt,name=status,proto3,enum=party.UpdateProfileAdditionalInfoStatus" json:"status,omitempty"`
	Message     string                            `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateProfileAdditionalInfoStatusRequest) Reset() {
	*x = UpdateProfileAdditionalInfoStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfileAdditionalInfoStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileAdditionalInfoStatusRequest) ProtoMessage() {}

func (x *UpdateProfileAdditionalInfoStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileAdditionalInfoStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateProfileAdditionalInfoStatusRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateProfileAdditionalInfoStatusRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *UpdateProfileAdditionalInfoStatusRequest) GetType() AdditionalInfoType {
	if x != nil {
		return x.Type
	}
	return AdditionalInfoType_UNKNOWN_ADDITIONAL_INFO_TYPE
}

func (x *UpdateProfileAdditionalInfoStatusRequest) GetStatus() UpdateProfileAdditionalInfoStatus {
	if x != nil {
		return x.Status
	}
	return UpdateProfileAdditionalInfoStatus_UNKNOWN_UPDATE_PROFILE_ADDITIONAL_INFO_STATUS
}

func (x *UpdateProfileAdditionalInfoStatusRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateProfileAdditionalInfoStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProfileAdditionalInfoStatusResponse) Reset() {
	*x = UpdateProfileAdditionalInfoStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfileAdditionalInfoStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileAdditionalInfoStatusResponse) ProtoMessage() {}

func (x *UpdateProfileAdditionalInfoStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileAdditionalInfoStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateProfileAdditionalInfoStatusResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{35}
}

type GetProfileStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetProfileStatusRequest) Reset() {
	*x = GetProfileStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileStatusRequest) ProtoMessage() {}

func (x *GetProfileStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileStatusRequest.ProtoReflect.Descriptor instead.
func (*GetProfileStatusRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{36}
}

func (x *GetProfileStatusRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type GetProfileStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ProfileStatus `protobuf:"varint,1,opt,name=status,proto3,enum=party.ProfileStatus" json:"status,omitempty"`
}

func (x *GetProfileStatusResponse) Reset() {
	*x = GetProfileStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileStatusResponse) ProtoMessage() {}

func (x *GetProfileStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileStatusResponse.ProtoReflect.Descriptor instead.
func (*GetProfileStatusResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{37}
}

func (x *GetProfileStatusResponse) GetStatus() ProfileStatus {
	if x != nil {
		return x.Status
	}
	return ProfileStatus_UNKNOWN_PROFILE_STATUS
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// for update request is required, for upload is optional
	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	// specifies that document is passport, or driver's license, and so on
	InfoType DocumentInfoType `protobuf:"varint,2,opt,name=info_type,json=infoType,proto3,enum=party.DocumentInfoType" json:"info_type,omitempty"`
	// specifies that document is driver's license photo, or private hire driver's license photo
	DocType DocumentType `protobuf:"varint,3,opt,name=doc_type,json=docType,proto3,enum=party.DocumentType" json:"doc_type,omitempty"`
	// optional
	// example: jpeg, png, pdf, doc
	FileType string `protobuf:"bytes,4,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	// content of document in byte array
	Data []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{38}
}

func (x *Document) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *Document) GetInfoType() DocumentInfoType {
	if x != nil {
		return x.InfoType
	}
	return DocumentInfoType_UNKNOWN_DOCUMENT_INFO_TYPE
}

func (x *Document) GetDocType() DocumentType {
	if x != nil {
		return x.DocType
	}
	return DocumentType_UNKNOWN_DOCUMENT_TYPE
}

func (x *Document) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *Document) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DocumentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoType     DocumentInfoType `protobuf:"varint,1,opt,name=info_type,json=infoType,proto3,enum=party.DocumentInfoType" json:"info_type,omitempty"`
	DocType      DocumentType     `protobuf:"varint,2,opt,name=doc_type,json=docType,proto3,enum=party.DocumentType" json:"doc_type,omitempty"`
	FileType     string           `protobuf:"bytes,3,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	ObjectId     string           `protobuf:"bytes,4,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Data         []byte           `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	CreationDate string           `protobuf:"bytes,6,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
}

func (x *DocumentInfo) Reset() {
	*x = DocumentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentInfo) ProtoMessage() {}

func (x *DocumentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentInfo.ProtoReflect.Descriptor instead.
func (*DocumentInfo) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{39}
}

func (x *DocumentInfo) GetInfoType() DocumentInfoType {
	if x != nil {
		return x.InfoType
	}
	return DocumentInfoType_UNKNOWN_DOCUMENT_INFO_TYPE
}

func (x *DocumentInfo) GetDocType() DocumentType {
	if x != nil {
		return x.DocType
	}
	return DocumentType_UNKNOWN_DOCUMENT_TYPE
}

func (x *DocumentInfo) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *DocumentInfo) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *DocumentInfo) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DocumentInfo) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

type UploadDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string    `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Document    *Document `protobuf:"bytes,2,opt,name=document,proto3" json:"document,omitempty"`
}

func (x *UploadDocumentRequest) Reset() {
	*x = UploadDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDocumentRequest) ProtoMessage() {}

func (x *UploadDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDocumentRequest.ProtoReflect.Descriptor instead.
func (*UploadDocumentRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{40}
}

func (x *UploadDocumentRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *UploadDocumentRequest) GetDocument() *Document {
	if x != nil {
		return x.Document
	}
	return nil
}

type UploadDocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *UploadDocumentResponse) Reset() {
	*x = UploadDocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDocumentResponse) ProtoMessage() {}

func (x *UploadDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDocumentResponse.ProtoReflect.Descriptor instead.
func (*UploadDocumentResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{41}
}

func (x *UploadDocumentResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type GetDocumentsOfUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// optional
	Type DocumentInfoType `protobuf:"varint,2,opt,name=type,proto3,enum=party.DocumentInfoType" json:"type,omitempty"`
	// optional
	DataType DocumentDataType `protobuf:"varint,3,opt,name=data_type,json=dataType,proto3,enum=party.DocumentDataType" json:"data_type,omitempty"`
}

func (x *GetDocumentsOfUserRequest) Reset() {
	*x = GetDocumentsOfUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocumentsOfUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentsOfUserRequest) ProtoMessage() {}

func (x *GetDocumentsOfUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentsOfUserRequest.ProtoReflect.Descriptor instead.
func (*GetDocumentsOfUserRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{42}
}

func (x *GetDocumentsOfUserRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetDocumentsOfUserRequest) GetType() DocumentInfoType {
	if x != nil {
		return x.Type
	}
	return DocumentInfoType_UNKNOWN_DOCUMENT_INFO_TYPE
}

func (x *GetDocumentsOfUserRequest) GetDataType() DocumentDataType {
	if x != nil {
		return x.DataType
	}
	return DocumentDataType_UNKNOWN_DOCUMENT_DATA_TYPE
}

type GetDocumentsOfUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Documents []*DocumentInfo `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
}

func (x *GetDocumentsOfUserResponse) Reset() {
	*x = GetDocumentsOfUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocumentsOfUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentsOfUserResponse) ProtoMessage() {}

func (x *GetDocumentsOfUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentsOfUserResponse.ProtoReflect.Descriptor instead.
func (*GetDocumentsOfUserResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{43}
}

func (x *GetDocumentsOfUserResponse) GetDocuments() []*DocumentInfo {
	if x != nil {
		return x.Documents
	}
	return nil
}

type GetDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ObjectId    string `protobuf:"bytes,2,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *GetDocumentRequest) Reset() {
	*x = GetDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentRequest) ProtoMessage() {}

func (x *GetDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentRequest.ProtoReflect.Descriptor instead.
func (*GetDocumentRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{44}
}

func (x *GetDocumentRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetDocumentRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type GetDocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// how long is the link downloadable
	DownloadLinkExpiration int64 `protobuf:"varint,1,opt,name=download_link_expiration,json=downloadLinkExpiration,proto3" json:"download_link_expiration,omitempty"`
	// a short lasting link to download file without token
	DownloadLink string `protobuf:"bytes,2,opt,name=download_link,json=downloadLink,proto3" json:"download_link,omitempty"`
}

func (x *GetDocumentResponse) Reset() {
	*x = GetDocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentResponse) ProtoMessage() {}

func (x *GetDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentResponse.ProtoReflect.Descriptor instead.
func (*GetDocumentResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{45}
}

func (x *GetDocumentResponse) GetDownloadLinkExpiration() int64 {
	if x != nil {
		return x.DownloadLinkExpiration
	}
	return 0
}

func (x *GetDocumentResponse) GetDownloadLink() string {
	if x != nil {
		return x.DownloadLink
	}
	return ""
}

type DownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadLink string `protobuf:"bytes,1,opt,name=download_link,json=downloadLink,proto3" json:"download_link,omitempty"`
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{46}
}

func (x *DownloadRequest) GetDownloadLink() string {
	if x != nil {
		return x.DownloadLink
	}
	return ""
}

type DownloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DownloadResponse) Reset() {
	*x = DownloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadResponse) ProtoMessage() {}

func (x *DownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadResponse.ProtoReflect.Descriptor instead.
func (*DownloadResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{47}
}

func (x *DownloadResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DirectDownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ObjectId    string `protobuf:"bytes,2,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *DirectDownloadRequest) Reset() {
	*x = DirectDownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectDownloadRequest) ProtoMessage() {}

func (x *DirectDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectDownloadRequest.ProtoReflect.Descriptor instead.
func (*DirectDownloadRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{48}
}

func (x *DirectDownloadRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *DirectDownloadRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type DirectDownloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoType DocumentInfoType `protobuf:"varint,1,opt,name=info_type,json=infoType,proto3,enum=party.DocumentInfoType" json:"info_type,omitempty"`
	DocType  DocumentType     `protobuf:"varint,2,opt,name=doc_type,json=docType,proto3,enum=party.DocumentType" json:"doc_type,omitempty"`
	FileType string           `protobuf:"bytes,3,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	Data     []byte           `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DirectDownloadResponse) Reset() {
	*x = DirectDownloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectDownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectDownloadResponse) ProtoMessage() {}

func (x *DirectDownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectDownloadResponse.ProtoReflect.Descriptor instead.
func (*DirectDownloadResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{49}
}

func (x *DirectDownloadResponse) GetInfoType() DocumentInfoType {
	if x != nil {
		return x.InfoType
	}
	return DocumentInfoType_UNKNOWN_DOCUMENT_INFO_TYPE
}

func (x *DirectDownloadResponse) GetDocType() DocumentType {
	if x != nil {
		return x.DocType
	}
	return DocumentType_UNKNOWN_DOCUMENT_TYPE
}

func (x *DirectDownloadResponse) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *DirectDownloadResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetUserAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetUserAddressRequest) Reset() {
	*x = GetUserAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAddressRequest) ProtoMessage() {}

func (x *GetUserAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAddressRequest.ProtoReflect.Descriptor instead.
func (*GetUserAddressRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{50}
}

func (x *GetUserAddressRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type GetUserAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *UserAddress `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetUserAddressResponse) Reset() {
	*x = GetUserAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAddressResponse) ProtoMessage() {}

func (x *GetUserAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAddressResponse.ProtoReflect.Descriptor instead.
func (*GetUserAddressResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{51}
}

func (x *GetUserAddressResponse) GetAddress() *UserAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

type UpdateUserAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string       `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Address     *UserAddress `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *UpdateUserAddressRequest) Reset() {
	*x = UpdateUserAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserAddressRequest) ProtoMessage() {}

func (x *UpdateUserAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserAddressRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserAddressRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{52}
}

func (x *UpdateUserAddressRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *UpdateUserAddressRequest) GetAddress() *UserAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

type UpdateUserAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserAddressResponse) Reset() {
	*x = UpdateUserAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserAddressResponse) ProtoMessage() {}

func (x *UpdateUserAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserAddressResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserAddressResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{53}
}

type UserAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Street         string `protobuf:"bytes,1,opt,name=street,proto3" json:"street,omitempty"`
	Building       string `protobuf:"bytes,2,opt,name=building,proto3" json:"building,omitempty"`
	City           string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	County         string `protobuf:"bytes,4,opt,name=county,proto3" json:"county,omitempty"`
	PostCode       string `protobuf:"bytes,5,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`
	AddressDetails string `protobuf:"bytes,6,opt,name=address_details,json=addressDetails,proto3" json:"address_details,omitempty"`
}

func (x *UserAddress) Reset() {
	*x = UserAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddress) ProtoMessage() {}

func (x *UserAddress) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddress.ProtoReflect.Descriptor instead.
func (*UserAddress) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{54}
}

func (x *UserAddress) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *UserAddress) GetBuilding() string {
	if x != nil {
		return x.Building
	}
	return ""
}

func (x *UserAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UserAddress) GetCounty() string {
	if x != nil {
		return x.County
	}
	return ""
}

func (x *UserAddress) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *UserAddress) GetAddressDetails() string {
	if x != nil {
		return x.AddressDetails
	}
	return ""
}

type CreateUserAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// access token that is taken from uaa
	// phone number and id of the user is extracted from access_token
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	FirstName   string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName    string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email       string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	// optional
	BirthDate string `protobuf:"bytes,5,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	// optional
	Referral string `protobuf:"bytes,6,opt,name=referral,proto3" json:"referral,omitempty"`
}

func (x *CreateUserAccountRequest) Reset() {
	*x = CreateUserAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserAccountRequest) ProtoMessage() {}

func (x *CreateUserAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateUserAccountRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{55}
}

func (x *CreateUserAccountRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreateUserAccountRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CreateUserAccountRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CreateUserAccountRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserAccountRequest) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *CreateUserAccountRequest) GetReferral() string {
	if x != nil {
		return x.Referral
	}
	return ""
}

type CreateUserAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateUserAccountResponse) Reset() {
	*x = CreateUserAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserAccountResponse) ProtoMessage() {}

func (x *CreateUserAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateUserAccountResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{56}
}

type UpdateUserAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// optional
	FirstName string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// optional
	LastName string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// optional
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	// optional
	PaymentMethod PaymentMethod `protobuf:"varint,5,opt,name=payment_method,json=paymentMethod,proto3,enum=party.PaymentMethod" json:"payment_method,omitempty"`
	// optional
	BirthDate string `protobuf:"bytes,6,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
}

func (x *UpdateUserAccountRequest) Reset() {
	*x = UpdateUserAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserAccountRequest) ProtoMessage() {}

func (x *UpdateUserAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserAccountRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{57}
}

func (x *UpdateUserAccountRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *UpdateUserAccountRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UpdateUserAccountRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UpdateUserAccountRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserAccountRequest) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_UNKNOWN_PAYMENT_METHOD
}

func (x *UpdateUserAccountRequest) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

type UpdateUserAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserAccountResponse) Reset() {
	*x = UpdateUserAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserAccountResponse) ProtoMessage() {}

func (x *UpdateUserAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserAccountResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserAccountResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{58}
}

type UpdateUserPhoneNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// access token containing old phone-number
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// access token containing new phone-number
	NewAccessToken string `protobuf:"bytes,2,opt,name=new_access_token,json=newAccessToken,proto3" json:"new_access_token,omitempty"`
}

func (x *UpdateUserPhoneNumberRequest) Reset() {
	*x = UpdateUserPhoneNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserPhoneNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserPhoneNumberRequest) ProtoMessage() {}

func (x *UpdateUserPhoneNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserPhoneNumberRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserPhoneNumberRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{59}
}

func (x *UpdateUserPhoneNumberRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *UpdateUserPhoneNumberRequest) GetNewAccessToken() string {
	if x != nil {
		return x.NewAccessToken
	}
	return ""
}

type UpdateUserPhoneNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserPhoneNumberResponse) Reset() {
	*x = UpdateUserPhoneNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserPhoneNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserPhoneNumberResponse) ProtoMessage() {}

func (x *UpdateUserPhoneNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserPhoneNumberResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserPhoneNumberResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{60}
}

type GetUserAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetUserAccountRequest) Reset() {
	*x = GetUserAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAccountRequest) ProtoMessage() {}

func (x *GetUserAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAccountRequest.ProtoReflect.Descriptor instead.
func (*GetUserAccountRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{61}
}

func (x *GetUserAccountRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type GetUserAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile *UserProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetUserAccountResponse) Reset() {
	*x = GetUserAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAccountResponse) ProtoMessage() {}

func (x *GetUserAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAccountResponse.ProtoReflect.Descriptor instead.
func (*GetUserAccountResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{62}
}

func (x *GetUserAccountResponse) GetProfile() *UserProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type FindUserAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// Types that are assignable to Filter:
	//	*FindUserAccountsRequest_UserId
	//	*FindUserAccountsRequest_PhoneNumber
	//	*FindUserAccountsRequest_Email
	//	*FindUserAccountsRequest_Name
	Filter isFindUserAccountsRequest_Filter `protobuf_oneof:"filter"`
}

func (x *FindUserAccountsRequest) Reset() {
	*x = FindUserAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserAccountsRequest) ProtoMessage() {}

func (x *FindUserAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserAccountsRequest.ProtoReflect.Descriptor instead.
func (*FindUserAccountsRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{63}
}

func (x *FindUserAccountsRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (m *FindUserAccountsRequest) GetFilter() isFindUserAccountsRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *FindUserAccountsRequest) GetUserId() string {
	if x, ok := x.GetFilter().(*FindUserAccountsRequest_UserId); ok {
		return x.UserId
	}
	return ""
}

func (x *FindUserAccountsRequest) GetPhoneNumber() string {
	if x, ok := x.GetFilter().(*FindUserAccountsRequest_PhoneNumber); ok {
		return x.PhoneNumber
	}
	return ""
}

func (x *FindUserAccountsRequest) GetEmail() string {
	if x, ok := x.GetFilter().(*FindUserAccountsRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *FindUserAccountsRequest) GetName() string {
	if x, ok := x.GetFilter().(*FindUserAccountsRequest_Name); ok {
		return x.Name
	}
	return ""
}

type isFindUserAccountsRequest_Filter interface {
	isFindUserAccountsRequest_Filter()
}

type FindUserAccountsRequest_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

type FindUserAccountsRequest_PhoneNumber struct {
	PhoneNumber string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3,oneof"`
}

type FindUserAccountsRequest_Email struct {
	Email string `protobuf:"bytes,4,opt,name=email,proto3,oneof"`
}

type FindUserAccountsRequest_Name struct {
	Name string `protobuf:"bytes,5,opt,name=name,proto3,oneof"`
}

func (*FindUserAccountsRequest_UserId) isFindUserAccountsRequest_Filter() {}

func (*FindUserAccountsRequest_PhoneNumber) isFindUserAccountsRequest_Filter() {}

func (*FindUserAccountsRequest_Email) isFindUserAccountsRequest_Filter() {}

func (*FindUserAccountsRequest_Name) isFindUserAccountsRequest_Filter() {}

type FindUserAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*UserProfile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *FindUserAccountsResponse) Reset() {
	*x = FindUserAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserAccountsResponse) ProtoMessage() {}

func (x *FindUserAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserAccountsResponse.ProtoReflect.Descriptor instead.
func (*FindUserAccountsResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{64}
}

func (x *FindUserAccountsResponse) GetProfiles() []*UserProfile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type UserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string             `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FirstName        string             `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName         string             `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	PhoneNumber      string             `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Email            string             `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	PaymentMethod    PaymentMethod      `protobuf:"varint,6,opt,name=payment_method,json=paymentMethod,proto3,enum=party.PaymentMethod" json:"payment_method,omitempty"`
	BirthDate        string             `protobuf:"bytes,7,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	Code             string             `protobuf:"bytes,8,opt,name=code,proto3" json:"code,omitempty"`
	AuthorizedClaims []*AuthorizedClaim `protobuf:"bytes,9,rep,name=authorized_claims,json=authorizedClaims,proto3" json:"authorized_claims,omitempty"`
}

func (x *UserProfile) Reset() {
	*x = UserProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfile) ProtoMessage() {}

func (x *UserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfile.ProtoReflect.Descriptor instead.
func (*UserProfile) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{65}
}

func (x *UserProfile) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserProfile) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserProfile) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UserProfile) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UserProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserProfile) GetPaymentMethod() PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return PaymentMethod_UNKNOWN_PAYMENT_METHOD
}

func (x *UserProfile) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *UserProfile) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserProfile) GetAuthorizedClaims() []*AuthorizedClaim {
	if x != nil {
		return x.AuthorizedClaims
	}
	return nil
}

type UpdateUserCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	CardNumber  string `protobuf:"bytes,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	IssueDate   string `protobuf:"bytes,3,opt,name=issue_date,json=issueDate,proto3" json:"issue_date,omitempty"`
	Cvv         string `protobuf:"bytes,4,opt,name=cvv,proto3" json:"cvv,omitempty"`
	ZipCode     string `protobuf:"bytes,5,opt,name=zip_code,json=zipCode,proto3" json:"zip_code,omitempty"`
	Country     string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *UpdateUserCardRequest) Reset() {
	*x = UpdateUserCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserCardRequest) ProtoMessage() {}

func (x *UpdateUserCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserCardRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserCardRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{66}
}

func (x *UpdateUserCardRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *UpdateUserCardRequest) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *UpdateUserCardRequest) GetIssueDate() string {
	if x != nil {
		return x.IssueDate
	}
	return ""
}

func (x *UpdateUserCardRequest) GetCvv() string {
	if x != nil {
		return x.Cvv
	}
	return ""
}

func (x *UpdateUserCardRequest) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *UpdateUserCardRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type UpdateUserCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserCardResponse) Reset() {
	*x = UpdateUserCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserCardResponse) ProtoMessage() {}

func (x *UpdateUserCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserCardResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserCardResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{67}
}

type GetUserCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetUserCardRequest) Reset() {
	*x = GetUserCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCardRequest) ProtoMessage() {}

func (x *GetUserCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCardRequest.ProtoReflect.Descriptor instead.
func (*GetUserCardRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{68}
}

func (x *GetUserCardRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type GetUserCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards []*UserCard `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *GetUserCardResponse) Reset() {
	*x = GetUserCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCardResponse) ProtoMessage() {}

func (x *GetUserCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCardResponse.ProtoReflect.Descriptor instead.
func (*GetUserCardResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{69}
}

func (x *GetUserCardResponse) GetCards() []*UserCard {
	if x != nil {
		return x.Cards
	}
	return nil
}

type DeleteUserCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	CardNumber  string `protobuf:"bytes,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
}

func (x *DeleteUserCardRequest) Reset() {
	*x = DeleteUserCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserCardRequest) ProtoMessage() {}

func (x *DeleteUserCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserCardRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserCardRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{70}
}

func (x *DeleteUserCardRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *DeleteUserCardRequest) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

type DeleteUserCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteUserCardResponse) Reset() {
	*x = DeleteUserCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserCardResponse) ProtoMessage() {}

func (x *DeleteUserCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserCardResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserCardResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{71}
}

type UserCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CardNumber string `protobuf:"bytes,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	IssueDate  string `protobuf:"bytes,3,opt,name=issue_date,json=issueDate,proto3" json:"issue_date,omitempty"`
	Cvv        string `protobuf:"bytes,4,opt,name=cvv,proto3" json:"cvv,omitempty"`
	ZipCode    string `protobuf:"bytes,5,opt,name=zip_code,json=zipCode,proto3" json:"zip_code,omitempty"`
	Country    string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *UserCard) Reset() {
	*x = UserCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCard) ProtoMessage() {}

func (x *UserCard) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCard.ProtoReflect.Descriptor instead.
func (*UserCard) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{72}
}

func (x *UserCard) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserCard) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *UserCard) GetIssueDate() string {
	if x != nil {
		return x.IssueDate
	}
	return ""
}

func (x *UserCard) GetCvv() string {
	if x != nil {
		return x.Cvv
	}
	return ""
}

func (x *UserCard) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *UserCard) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type GetCourierUserStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetCourierUserStatusRequest) Reset() {
	*x = GetCourierUserStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierUserStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierUserStatusRequest) ProtoMessage() {}

func (x *GetCourierUserStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierUserStatusRequest.ProtoReflect.Descriptor instead.
func (*GetCourierUserStatusRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{73}
}

func (x *GetCourierUserStatusRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetCourierUserStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status UserStatus `protobuf:"varint,1,opt,name=status,proto3,enum=party.UserStatus" json:"status,omitempty"`
}

func (x *GetCourierUserStatusResponse) Reset() {
	*x = GetCourierUserStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierUserStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierUserStatusResponse) ProtoMessage() {}

func (x *GetCourierUserStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierUserStatusResponse.ProtoReflect.Descriptor instead.
func (*GetCourierUserStatusResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{74}
}

func (x *GetCourierUserStatusResponse) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_UNKNOWN_USER_STATUS
}

type UpdateCourierUserStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string     `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Status UserStatus `protobuf:"varint,2,opt,name=status,proto3,enum=party.UserStatus" json:"status,omitempty"`
}

func (x *UpdateCourierUserStatusRequest) Reset() {
	*x = UpdateCourierUserStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCourierUserStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCourierUserStatusRequest) ProtoMessage() {}

func (x *UpdateCourierUserStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCourierUserStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateCourierUserStatusRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{75}
}

func (x *UpdateCourierUserStatusRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateCourierUserStatusRequest) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_UNKNOWN_USER_STATUS
}

type UpdateCourierUserStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCourierUserStatusResponse) Reset() {
	*x = UpdateCourierUserStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCourierUserStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCourierUserStatusResponse) ProtoMessage() {}

func (x *UpdateCourierUserStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCourierUserStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateCourierUserStatusResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{76}
}

type GetClientUserStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetClientUserStatusRequest) Reset() {
	*x = GetClientUserStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientUserStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientUserStatusRequest) ProtoMessage() {}

func (x *GetClientUserStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientUserStatusRequest.ProtoReflect.Descriptor instead.
func (*GetClientUserStatusRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{77}
}

func (x *GetClientUserStatusRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetClientUserStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status UserStatus `protobuf:"varint,1,opt,name=status,proto3,enum=party.UserStatus" json:"status,omitempty"`
}

func (x *GetClientUserStatusResponse) Reset() {
	*x = GetClientUserStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientUserStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientUserStatusResponse) ProtoMessage() {}

func (x *GetClientUserStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientUserStatusResponse.ProtoReflect.Descriptor instead.
func (*GetClientUserStatusResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{78}
}

func (x *GetClientUserStatusResponse) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_UNKNOWN_USER_STATUS
}

type UpdateClientUserStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string     `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Status UserStatus `protobuf:"varint,2,opt,name=status,proto3,enum=party.UserStatus" json:"status,omitempty"`
}

func (x *UpdateClientUserStatusRequest) Reset() {
	*x = UpdateClientUserStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClientUserStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClientUserStatusRequest) ProtoMessage() {}

func (x *UpdateClientUserStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClientUserStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateClientUserStatusRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{79}
}

func (x *UpdateClientUserStatusRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateClientUserStatusRequest) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_UNKNOWN_USER_STATUS
}

type UpdateClientUserStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateClientUserStatusResponse) Reset() {
	*x = UpdateClientUserStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClientUserStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClientUserStatusResponse) ProtoMessage() {}

func (x *UpdateClientUserStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClientUserStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateClientUserStatusResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{80}
}

type GetCourierUserStatusByTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetCourierUserStatusByTokenRequest) Reset() {
	*x = GetCourierUserStatusByTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierUserStatusByTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierUserStatusByTokenRequest) ProtoMessage() {}

func (x *GetCourierUserStatusByTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierUserStatusByTokenRequest.ProtoReflect.Descriptor instead.
func (*GetCourierUserStatusByTokenRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{81}
}

func (x *GetCourierUserStatusByTokenRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type UpdateCourierUserStatusByTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string     `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Status      UserStatus `protobuf:"varint,2,opt,name=status,proto3,enum=party.UserStatus" json:"status,omitempty"`
}

func (x *UpdateCourierUserStatusByTokenRequest) Reset() {
	*x = UpdateCourierUserStatusByTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCourierUserStatusByTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCourierUserStatusByTokenRequest) ProtoMessage() {}

func (x *UpdateCourierUserStatusByTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCourierUserStatusByTokenRequest.ProtoReflect.Descriptor instead.
func (*UpdateCourierUserStatusByTokenRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{82}
}

func (x *UpdateCourierUserStatusByTokenRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *UpdateCourierUserStatusByTokenRequest) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_UNKNOWN_USER_STATUS
}

type GetClientUserStatusByTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetClientUserStatusByTokenRequest) Reset() {
	*x = GetClientUserStatusByTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientUserStatusByTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientUserStatusByTokenRequest) ProtoMessage() {}

func (x *GetClientUserStatusByTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientUserStatusByTokenRequest.ProtoReflect.Descriptor instead.
func (*GetClientUserStatusByTokenRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{83}
}

func (x *GetClientUserStatusByTokenRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type UpdateClientUserStatusByTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string     `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Status      UserStatus `protobuf:"varint,2,opt,name=status,proto3,enum=party.UserStatus" json:"status,omitempty"`
}

func (x *UpdateClientUserStatusByTokenRequest) Reset() {
	*x = UpdateClientUserStatusByTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClientUserStatusByTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClientUserStatusByTokenRequest) ProtoMessage() {}

func (x *UpdateClientUserStatusByTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClientUserStatusByTokenRequest.ProtoReflect.Descriptor instead.
func (*UpdateClientUserStatusByTokenRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{84}
}

func (x *UpdateClientUserStatusByTokenRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *UpdateClientUserStatusByTokenRequest) GetStatus() UserStatus {
	if x != nil {
		return x.Status
	}
	return UserStatus_UNKNOWN_USER_STATUS
}

type ServiceGetCourierRegistrationStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	DateFrom    string `protobuf:"bytes,2,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo      string `protobuf:"bytes,3,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
}

func (x *ServiceGetCourierRegistrationStatRequest) Reset() {
	*x = ServiceGetCourierRegistrationStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGetCourierRegistrationStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGetCourierRegistrationStatRequest) ProtoMessage() {}

func (x *ServiceGetCourierRegistrationStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGetCourierRegistrationStatRequest.ProtoReflect.Descriptor instead.
func (*ServiceGetCourierRegistrationStatRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{85}
}

func (x *ServiceGetCourierRegistrationStatRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ServiceGetCourierRegistrationStatRequest) GetDateFrom() string {
	if x != nil {
		return x.DateFrom
	}
	return ""
}

func (x *ServiceGetCourierRegistrationStatRequest) GetDateTo() string {
	if x != nil {
		return x.DateTo
	}
	return ""
}

type ServiceGetClientRegistrationStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	DateFrom    string `protobuf:"bytes,2,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo      string `protobuf:"bytes,3,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
}

func (x *ServiceGetClientRegistrationStatRequest) Reset() {
	*x = ServiceGetClientRegistrationStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGetClientRegistrationStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGetClientRegistrationStatRequest) ProtoMessage() {}

func (x *ServiceGetClientRegistrationStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGetClientRegistrationStatRequest.ProtoReflect.Descriptor instead.
func (*ServiceGetClientRegistrationStatRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{86}
}

func (x *ServiceGetClientRegistrationStatRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ServiceGetClientRegistrationStatRequest) GetDateFrom() string {
	if x != nil {
		return x.DateFrom
	}
	return ""
}

func (x *ServiceGetClientRegistrationStatRequest) GetDateTo() string {
	if x != nil {
		return x.DateTo
	}
	return ""
}

type GetRegistrationStatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GetRegistrationStatItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetRegistrationStatResponse) Reset() {
	*x = GetRegistrationStatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegistrationStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegistrationStatResponse) ProtoMessage() {}

func (x *GetRegistrationStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegistrationStatResponse.ProtoReflect.Descriptor instead.
func (*GetRegistrationStatResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{87}
}

func (x *GetRegistrationStatResponse) GetItems() []*GetRegistrationStatItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetRegistrationStatItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date  string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Count int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetRegistrationStatItem) Reset() {
	*x = GetRegistrationStatItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegistrationStatItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegistrationStatItem) ProtoMessage() {}

func (x *GetRegistrationStatItem) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegistrationStatItem.ProtoReflect.Descriptor instead.
func (*GetRegistrationStatItem) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{88}
}

func (x *GetRegistrationStatItem) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *GetRegistrationStatItem) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ServiceGetCourierRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string      `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Pagination  *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// Types that are assignable to Filter:
	//	*ServiceGetCourierRegistrationRequest_UserId
	//	*ServiceGetCourierRegistrationRequest_PhoneNumber
	//	*ServiceGetCourierRegistrationRequest_Email
	//	*ServiceGetCourierRegistrationRequest_Name
	Filter isServiceGetCourierRegistrationRequest_Filter `protobuf_oneof:"filter"`
}

func (x *ServiceGetCourierRegistrationRequest) Reset() {
	*x = ServiceGetCourierRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGetCourierRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGetCourierRegistrationRequest) ProtoMessage() {}

func (x *ServiceGetCourierRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGetCourierRegistrationRequest.ProtoReflect.Descriptor instead.
func (*ServiceGetCourierRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{89}
}

func (x *ServiceGetCourierRegistrationRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ServiceGetCourierRegistrationRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (m *ServiceGetCourierRegistrationRequest) GetFilter() isServiceGetCourierRegistrationRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ServiceGetCourierRegistrationRequest) GetUserId() string {
	if x, ok := x.GetFilter().(*ServiceGetCourierRegistrationRequest_UserId); ok {
		return x.UserId
	}
	return ""
}

func (x *ServiceGetCourierRegistrationRequest) GetPhoneNumber() string {
	if x, ok := x.GetFilter().(*ServiceGetCourierRegistrationRequest_PhoneNumber); ok {
		return x.PhoneNumber
	}
	return ""
}

func (x *ServiceGetCourierRegistrationRequest) GetEmail() string {
	if x, ok := x.GetFilter().(*ServiceGetCourierRegistrationRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *ServiceGetCourierRegistrationRequest) GetName() string {
	if x, ok := x.GetFilter().(*ServiceGetCourierRegistrationRequest_Name); ok {
		return x.Name
	}
	return ""
}

type isServiceGetCourierRegistrationRequest_Filter interface {
	isServiceGetCourierRegistrationRequest_Filter()
}

type ServiceGetCourierRegistrationRequest_UserId struct {
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3,oneof"`
}

type ServiceGetCourierRegistrationRequest_PhoneNumber struct {
	PhoneNumber string `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3,oneof"`
}

type ServiceGetCourierRegistrationRequest_Email struct {
	Email string `protobuf:"bytes,5,opt,name=email,proto3,oneof"`
}

type ServiceGetCourierRegistrationRequest_Name struct {
	Name string `protobuf:"bytes,6,opt,name=name,proto3,oneof"`
}

func (*ServiceGetCourierRegistrationRequest_UserId) isServiceGetCourierRegistrationRequest_Filter() {}

func (*ServiceGetCourierRegistrationRequest_PhoneNumber) isServiceGetCourierRegistrationRequest_Filter() {
}

func (*ServiceGetCourierRegistrationRequest_Email) isServiceGetCourierRegistrationRequest_Filter() {}

func (*ServiceGetCourierRegistrationRequest_Name) isServiceGetCourierRegistrationRequest_Filter() {}

type GetCourierRegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CourierProfileAndStatus `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetCourierRegistrationResponse) Reset() {
	*x = GetCourierRegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierRegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierRegistrationResponse) ProtoMessage() {}

func (x *GetCourierRegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierRegistrationResponse.ProtoReflect.Descriptor instead.
func (*GetCourierRegistrationResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{90}
}

func (x *GetCourierRegistrationResponse) GetItems() []*CourierProfileAndStatus {
	if x != nil {
		return x.Items
	}
	return nil
}

type ServiceGetClientRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string      `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Pagination  *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// Types that are assignable to Filter:
	//	*ServiceGetClientRegistrationRequest_UserId
	//	*ServiceGetClientRegistrationRequest_PhoneNumber
	//	*ServiceGetClientRegistrationRequest_Email
	//	*ServiceGetClientRegistrationRequest_Name
	Filter isServiceGetClientRegistrationRequest_Filter `protobuf_oneof:"filter"`
}

func (x *ServiceGetClientRegistrationRequest) Reset() {
	*x = ServiceGetClientRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGetClientRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGetClientRegistrationRequest) ProtoMessage() {}

func (x *ServiceGetClientRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGetClientRegistrationRequest.ProtoReflect.Descriptor instead.
func (*ServiceGetClientRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{91}
}

func (x *ServiceGetClientRegistrationRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ServiceGetClientRegistrationRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (m *ServiceGetClientRegistrationRequest) GetFilter() isServiceGetClientRegistrationRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ServiceGetClientRegistrationRequest) GetUserId() string {
	if x, ok := x.GetFilter().(*ServiceGetClientRegistrationRequest_UserId); ok {
		return x.UserId
	}
	return ""
}

func (x *ServiceGetClientRegistrationRequest) GetPhoneNumber() string {
	if x, ok := x.GetFilter().(*ServiceGetClientRegistrationRequest_PhoneNumber); ok {
		return x.PhoneNumber
	}
	return ""
}

func (x *ServiceGetClientRegistrationRequest) GetEmail() string {
	if x, ok := x.GetFilter().(*ServiceGetClientRegistrationRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *ServiceGetClientRegistrationRequest) GetName() string {
	if x, ok := x.GetFilter().(*ServiceGetClientRegistrationRequest_Name); ok {
		return x.Name
	}
	return ""
}

type isServiceGetClientRegistrationRequest_Filter interface {
	isServiceGetClientRegistrationRequest_Filter()
}

type ServiceGetClientRegistrationRequest_UserId struct {
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3,oneof"`
}

type ServiceGetClientRegistrationRequest_PhoneNumber struct {
	PhoneNumber string `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3,oneof"`
}

type ServiceGetClientRegistrationRequest_Email struct {
	Email string `protobuf:"bytes,5,opt,name=email,proto3,oneof"`
}

type ServiceGetClientRegistrationRequest_Name struct {
	Name string `protobuf:"bytes,6,opt,name=name,proto3,oneof"`
}

func (*ServiceGetClientRegistrationRequest_UserId) isServiceGetClientRegistrationRequest_Filter() {}

func (*ServiceGetClientRegistrationRequest_PhoneNumber) isServiceGetClientRegistrationRequest_Filter() {
}

func (*ServiceGetClientRegistrationRequest_Email) isServiceGetClientRegistrationRequest_Filter() {}

func (*ServiceGetClientRegistrationRequest_Name) isServiceGetClientRegistrationRequest_Filter() {}

type GetClientRegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*UserProfile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *GetClientRegistrationResponse) Reset() {
	*x = GetClientRegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientRegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientRegistrationResponse) ProtoMessage() {}

func (x *GetClientRegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientRegistrationResponse.ProtoReflect.Descriptor instead.
func (*GetClientRegistrationResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{92}
}

func (x *GetClientRegistrationResponse) GetProfiles() []*UserProfile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type ServiceGetDocumentsOfUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string           `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	UserId      string           `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type        DocumentInfoType `protobuf:"varint,3,opt,name=type,proto3,enum=party.DocumentInfoType" json:"type,omitempty"`
}

func (x *ServiceGetDocumentsOfUserRequest) Reset() {
	*x = ServiceGetDocumentsOfUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGetDocumentsOfUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGetDocumentsOfUserRequest) ProtoMessage() {}

func (x *ServiceGetDocumentsOfUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGetDocumentsOfUserRequest.ProtoReflect.Descriptor instead.
func (*ServiceGetDocumentsOfUserRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{93}
}

func (x *ServiceGetDocumentsOfUserRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ServiceGetDocumentsOfUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ServiceGetDocumentsOfUserRequest) GetType() DocumentInfoType {
	if x != nil {
		return x.Type
	}
	return DocumentInfoType_UNKNOWN_DOCUMENT_INFO_TYPE
}

type ServiceGetProfileAdditionalInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string             `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	UserId      string             `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type        AdditionalInfoType `protobuf:"varint,3,opt,name=type,proto3,enum=party.AdditionalInfoType" json:"type,omitempty"`
}

func (x *ServiceGetProfileAdditionalInfoRequest) Reset() {
	*x = ServiceGetProfileAdditionalInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGetProfileAdditionalInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGetProfileAdditionalInfoRequest) ProtoMessage() {}

func (x *ServiceGetProfileAdditionalInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGetProfileAdditionalInfoRequest.ProtoReflect.Descriptor instead.
func (*ServiceGetProfileAdditionalInfoRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{94}
}

func (x *ServiceGetProfileAdditionalInfoRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ServiceGetProfileAdditionalInfoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ServiceGetProfileAdditionalInfoRequest) GetType() AdditionalInfoType {
	if x != nil {
		return x.Type
	}
	return AdditionalInfoType_UNKNOWN_ADDITIONAL_INFO_TYPE
}

type ServiceUpdateProfileStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string                             `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	UserId      string                             `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserStatus  UserStatus                         `protobuf:"varint,3,opt,name=user_status,json=userStatus,proto3,enum=party.UserStatus" json:"user_status,omitempty"`
	StatusItems []*ProfileAdditionalInfoStatusItem `protobuf:"bytes,4,rep,name=status_items,json=statusItems,proto3" json:"status_items,omitempty"`
}

func (x *ServiceUpdateProfileStatusRequest) Reset() {
	*x = ServiceUpdateProfileStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceUpdateProfileStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceUpdateProfileStatusRequest) ProtoMessage() {}

func (x *ServiceUpdateProfileStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceUpdateProfileStatusRequest.ProtoReflect.Descriptor instead.
func (*ServiceUpdateProfileStatusRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{95}
}

func (x *ServiceUpdateProfileStatusRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ServiceUpdateProfileStatusRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ServiceUpdateProfileStatusRequest) GetUserStatus() UserStatus {
	if x != nil {
		return x.UserStatus
	}
	return UserStatus_UNKNOWN_USER_STATUS
}

func (x *ServiceUpdateProfileStatusRequest) GetStatusItems() []*ProfileAdditionalInfoStatusItem {
	if x != nil {
		return x.StatusItems
	}
	return nil
}

type CourierProfileAndStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile     *CourierProfile                    `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	UserStatus  UserStatus                         `protobuf:"varint,2,opt,name=user_status,json=userStatus,proto3,enum=party.UserStatus" json:"user_status,omitempty"`
	StatusItems []*ProfileAdditionalInfoStatusItem `protobuf:"bytes,3,rep,name=status_items,json=statusItems,proto3" json:"status_items,omitempty"`
}

func (x *CourierProfileAndStatus) Reset() {
	*x = CourierProfileAndStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourierProfileAndStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourierProfileAndStatus) ProtoMessage() {}

func (x *CourierProfileAndStatus) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourierProfileAndStatus.ProtoReflect.Descriptor instead.
func (*CourierProfileAndStatus) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{96}
}

func (x *CourierProfileAndStatus) GetProfile() *CourierProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *CourierProfileAndStatus) GetUserStatus() UserStatus {
	if x != nil {
		return x.UserStatus
	}
	return UserStatus_UNKNOWN_USER_STATUS
}

func (x *CourierProfileAndStatus) GetStatusItems() []*ProfileAdditionalInfoStatusItem {
	if x != nil {
		return x.StatusItems
	}
	return nil
}

type ProfileAdditionalInfoStatusItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    AdditionalInfoType          `protobuf:"varint,1,opt,name=type,proto3,enum=party.AdditionalInfoType" json:"type,omitempty"`
	Status  ProfileAdditionalInfoStatus `protobuf:"varint,2,opt,name=status,proto3,enum=party.ProfileAdditionalInfoStatus" json:"status,omitempty"`
	Message string                      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ProfileAdditionalInfoStatusItem) Reset() {
	*x = ProfileAdditionalInfoStatusItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileAdditionalInfoStatusItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileAdditionalInfoStatusItem) ProtoMessage() {}

func (x *ProfileAdditionalInfoStatusItem) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileAdditionalInfoStatusItem.ProtoReflect.Descriptor instead.
func (*ProfileAdditionalInfoStatusItem) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{97}
}

func (x *ProfileAdditionalInfoStatusItem) GetType() AdditionalInfoType {
	if x != nil {
		return x.Type
	}
	return AdditionalInfoType_UNKNOWN_ADDITIONAL_INFO_TYPE
}

func (x *ProfileAdditionalInfoStatusItem) GetStatus() ProfileAdditionalInfoStatus {
	if x != nil {
		return x.Status
	}
	return ProfileAdditionalInfoStatus_UNKNOWN_PROFILE_ADDITIONAL_INFO_STATUS
}

func (x *ProfileAdditionalInfoStatusItem) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit    int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Sort     string   `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
	SortType SortType `protobuf:"varint,4,opt,name=sort_type,json=sortType,proto3,enum=party.SortType" json:"sort_type,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{98}
}

func (x *Pagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *Pagination) GetSortType() SortType {
	if x != nil {
		return x.SortType
	}
	return SortType_UNKNOWN_SORT_TYPE
}

type FindAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Filter:
	//	*FindAccountRequest_UserId
	//	*FindAccountRequest_PhoneNumber
	//	*FindAccountRequest_Email
	//	*FindAccountRequest_FacebookId
	//	*FindAccountRequest_GoogleId
	//	*FindAccountRequest_Username
	Filter isFindAccountRequest_Filter `protobuf_oneof:"filter"`
	Type   UserType                    `protobuf:"varint,7,opt,name=type,proto3,enum=party.UserType" json:"type,omitempty"`
}

func (x *FindAccountRequest) Reset() {
	*x = FindAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAccountRequest) ProtoMessage() {}

func (x *FindAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAccountRequest.ProtoReflect.Descriptor instead.
func (*FindAccountRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{99}
}

func (m *FindAccountRequest) GetFilter() isFindAccountRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *FindAccountRequest) GetUserId() string {
	if x, ok := x.GetFilter().(*FindAccountRequest_UserId); ok {
		return x.UserId
	}
	return ""
}

func (x *FindAccountRequest) GetPhoneNumber() string {
	if x, ok := x.GetFilter().(*FindAccountRequest_PhoneNumber); ok {
		return x.PhoneNumber
	}
	return ""
}

func (x *FindAccountRequest) GetEmail() string {
	if x, ok := x.GetFilter().(*FindAccountRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *FindAccountRequest) GetFacebookId() string {
	if x, ok := x.GetFilter().(*FindAccountRequest_FacebookId); ok {
		return x.FacebookId
	}
	return ""
}

func (x *FindAccountRequest) GetGoogleId() string {
	if x, ok := x.GetFilter().(*FindAccountRequest_GoogleId); ok {
		return x.GoogleId
	}
	return ""
}

func (x *FindAccountRequest) GetUsername() string {
	if x, ok := x.GetFilter().(*FindAccountRequest_Username); ok {
		return x.Username
	}
	return ""
}

func (x *FindAccountRequest) GetType() UserType {
	if x != nil {
		return x.Type
	}
	return UserType_UNKNOWN_USER_TYPE
}

type isFindAccountRequest_Filter interface {
	isFindAccountRequest_Filter()
}

type FindAccountRequest_UserId struct {
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3,oneof"`
}

type FindAccountRequest_PhoneNumber struct {
	PhoneNumber string `protobuf:"bytes,2,opt,name=phoneNumber,proto3,oneof"`
}

type FindAccountRequest_Email struct {
	Email string `protobuf:"bytes,3,opt,name=email,proto3,oneof"`
}

type FindAccountRequest_FacebookId struct {
	FacebookId string `protobuf:"bytes,4,opt,name=facebookId,proto3,oneof"`
}

type FindAccountRequest_GoogleId struct {
	GoogleId string `protobuf:"bytes,5,opt,name=googleId,proto3,oneof"`
}

type FindAccountRequest_Username struct {
	Username string `protobuf:"bytes,6,opt,name=username,proto3,oneof"`
}

func (*FindAccountRequest_UserId) isFindAccountRequest_Filter() {}

func (*FindAccountRequest_PhoneNumber) isFindAccountRequest_Filter() {}

func (*FindAccountRequest_Email) isFindAccountRequest_Filter() {}

func (*FindAccountRequest_FacebookId) isFindAccountRequest_Filter() {}

func (*FindAccountRequest_GoogleId) isFindAccountRequest_Filter() {}

func (*FindAccountRequest_Username) isFindAccountRequest_Filter() {}

type FindAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*Account `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *FindAccountResponse) Reset() {
	*x = FindAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAccountResponse) ProtoMessage() {}

func (x *FindAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAccountResponse.ProtoReflect.Descriptor instead.
func (*FindAccountResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{100}
}

func (x *FindAccountResponse) GetUsers() []*Account {
	if x != nil {
		return x.Users
	}
	return nil
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PhoneNumber        string   `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	FirstName          string   `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName           string   `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email              string   `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	BirthDate          string   `protobuf:"bytes,6,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	TransportationType int32    `protobuf:"varint,7,opt,name=transportation_type,json=transportationType,proto3" json:"transportation_type,omitempty"`
	Type               UserType `protobuf:"varint,8,opt,name=type,proto3,enum=party.UserType" json:"type,omitempty"`
	Claims             []*Claim `protobuf:"bytes,9,rep,name=claims,proto3" json:"claims,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{101}
}

func (x *Account) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Account) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *Account) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Account) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Account) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Account) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

func (x *Account) GetTransportationType() int32 {
	if x != nil {
		return x.TransportationType
	}
	return 0
}

func (x *Account) GetType() UserType {
	if x != nil {
		return x.Type
	}
	return UserType_UNKNOWN_USER_TYPE
}

func (x *Account) GetClaims() []*Claim {
	if x != nil {
		return x.Claims
	}
	return nil
}

type RegisterClaimRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string    `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type       UserType  `protobuf:"varint,2,opt,name=type,proto3,enum=party.UserType" json:"type,omitempty"`
	Claim      ClaimType `protobuf:"varint,3,opt,name=claim,proto3,enum=party.ClaimType" json:"claim,omitempty"`
	Identifier string    `protobuf:"bytes,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *RegisterClaimRequest) Reset() {
	*x = RegisterClaimRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterClaimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterClaimRequest) ProtoMessage() {}

func (x *RegisterClaimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterClaimRequest.ProtoReflect.Descriptor instead.
func (*RegisterClaimRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{102}
}

func (x *RegisterClaimRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RegisterClaimRequest) GetType() UserType {
	if x != nil {
		return x.Type
	}
	return UserType_UNKNOWN_USER_TYPE
}

func (x *RegisterClaimRequest) GetClaim() ClaimType {
	if x != nil {
		return x.Claim
	}
	return ClaimType_UNKNOWN_CLAIM_TYPE
}

func (x *RegisterClaimRequest) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type RegisterClaimResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterClaimResponse) Reset() {
	*x = RegisterClaimResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterClaimResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterClaimResponse) ProtoMessage() {}

func (x *RegisterClaimResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterClaimResponse.ProtoReflect.Descriptor instead.
func (*RegisterClaimResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{103}
}

type Claim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClaimType  ClaimType `protobuf:"varint,1,opt,name=claim_type,json=claimType,proto3,enum=party.ClaimType" json:"claim_type,omitempty"`
	Identifier string    `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *Claim) Reset() {
	*x = Claim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Claim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Claim) ProtoMessage() {}

func (x *Claim) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Claim.ProtoReflect.Descriptor instead.
func (*Claim) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{104}
}

func (x *Claim) GetClaimType() ClaimType {
	if x != nil {
		return x.ClaimType
	}
	return ClaimType_UNKNOWN_CLAIM_TYPE
}

func (x *Claim) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type InterServiceGetProfileAdditionalInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string             `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type   AdditionalInfoType `protobuf:"varint,2,opt,name=type,proto3,enum=party.AdditionalInfoType" json:"type,omitempty"`
}

func (x *InterServiceGetProfileAdditionalInfoRequest) Reset() {
	*x = InterServiceGetProfileAdditionalInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterServiceGetProfileAdditionalInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterServiceGetProfileAdditionalInfoRequest) ProtoMessage() {}

func (x *InterServiceGetProfileAdditionalInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterServiceGetProfileAdditionalInfoRequest.ProtoReflect.Descriptor instead.
func (*InterServiceGetProfileAdditionalInfoRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{105}
}

func (x *InterServiceGetProfileAdditionalInfoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *InterServiceGetProfileAdditionalInfoRequest) GetType() AdditionalInfoType {
	if x != nil {
		return x.Type
	}
	return AdditionalInfoType_UNKNOWN_ADDITIONAL_INFO_TYPE
}

type InterServiceUpdateProfileAdditionalInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Types that are assignable to Info:
	//	*InterServiceUpdateProfileAdditionalInfoRequest_IdCard
	//	*InterServiceUpdateProfileAdditionalInfoRequest_DrivingLicense
	//	*InterServiceUpdateProfileAdditionalInfoRequest_DriverBackground
	//	*InterServiceUpdateProfileAdditionalInfoRequest_ResidenceCard
	//	*InterServiceUpdateProfileAdditionalInfoRequest_BankAccount
	//	*InterServiceUpdateProfileAdditionalInfoRequest_Address
	//	*InterServiceUpdateProfileAdditionalInfoRequest_Mot
	Info isInterServiceUpdateProfileAdditionalInfoRequest_Info `protobuf_oneof:"info"`
}

func (x *InterServiceUpdateProfileAdditionalInfoRequest) Reset() {
	*x = InterServiceUpdateProfileAdditionalInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterServiceUpdateProfileAdditionalInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterServiceUpdateProfileAdditionalInfoRequest) ProtoMessage() {}

func (x *InterServiceUpdateProfileAdditionalInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterServiceUpdateProfileAdditionalInfoRequest.ProtoReflect.Descriptor instead.
func (*InterServiceUpdateProfileAdditionalInfoRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{106}
}

func (x *InterServiceUpdateProfileAdditionalInfoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (m *InterServiceUpdateProfileAdditionalInfoRequest) GetInfo() isInterServiceUpdateProfileAdditionalInfoRequest_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *InterServiceUpdateProfileAdditionalInfoRequest) GetIdCard() *IDCard {
	if x, ok := x.GetInfo().(*InterServiceUpdateProfileAdditionalInfoRequest_IdCard); ok {
		return x.IdCard
	}
	return nil
}

func (x *InterServiceUpdateProfileAdditionalInfoRequest) GetDrivingLicense() *DrivingLicense {
	if x, ok := x.GetInfo().(*InterServiceUpdateProfileAdditionalInfoRequest_DrivingLicense); ok {
		return x.DrivingLicense
	}
	return nil
}

func (x *InterServiceUpdateProfileAdditionalInfoRequest) GetDriverBackground() *DriverBackground {
	if x, ok := x.GetInfo().(*InterServiceUpdateProfileAdditionalInfoRequest_DriverBackground); ok {
		return x.DriverBackground
	}
	return nil
}

func (x *InterServiceUpdateProfileAdditionalInfoRequest) GetResidenceCard() *ResidenceCard {
	if x, ok := x.GetInfo().(*InterServiceUpdateProfileAdditionalInfoRequest_ResidenceCard); ok {
		return x.ResidenceCard
	}
	return nil
}

func (x *InterServiceUpdateProfileAdditionalInfoRequest) GetBankAccount() *BankAccount {
	if x, ok := x.GetInfo().(*InterServiceUpdateProfileAdditionalInfoRequest_BankAccount); ok {
		return x.BankAccount
	}
	return nil
}

func (x *InterServiceUpdateProfileAdditionalInfoRequest) GetAddress() *Address {
	if x, ok := x.GetInfo().(*InterServiceUpdateProfileAdditionalInfoRequest_Address); ok {
		return x.Address
	}
	return nil
}

func (x *InterServiceUpdateProfileAdditionalInfoRequest) GetMot() *MotConfirm {
	if x, ok := x.GetInfo().(*InterServiceUpdateProfileAdditionalInfoRequest_Mot); ok {
		return x.Mot
	}
	return nil
}

type isInterServiceUpdateProfileAdditionalInfoRequest_Info interface {
	isInterServiceUpdateProfileAdditionalInfoRequest_Info()
}

type InterServiceUpdateProfileAdditionalInfoRequest_IdCard struct {
	IdCard *IDCard `protobuf:"bytes,2,opt,name=id_card,json=idCard,proto3,oneof"`
}

type InterServiceUpdateProfileAdditionalInfoRequest_DrivingLicense struct {
	DrivingLicense *DrivingLicense `protobuf:"bytes,3,opt,name=driving_license,json=drivingLicense,proto3,oneof"`
}

type InterServiceUpdateProfileAdditionalInfoRequest_DriverBackground struct {
	DriverBackground *DriverBackground `protobuf:"bytes,4,opt,name=driver_background,json=driverBackground,proto3,oneof"`
}

type InterServiceUpdateProfileAdditionalInfoRequest_ResidenceCard struct {
	ResidenceCard *ResidenceCard `protobuf:"bytes,5,opt,name=residence_card,json=residenceCard,proto3,oneof"`
}

type InterServiceUpdateProfileAdditionalInfoRequest_BankAccount struct {
	BankAccount *BankAccount `protobuf:"bytes,6,opt,name=bank_account,json=bankAccount,proto3,oneof"`
}

type InterServiceUpdateProfileAdditionalInfoRequest_Address struct {
	Address *Address `protobuf:"bytes,7,opt,name=address,proto3,oneof"`
}

type InterServiceUpdateProfileAdditionalInfoRequest_Mot struct {
	Mot *MotConfirm `protobuf:"bytes,8,opt,name=mot,proto3,oneof"`
}

func (*InterServiceUpdateProfileAdditionalInfoRequest_IdCard) isInterServiceUpdateProfileAdditionalInfoRequest_Info() {
}

func (*InterServiceUpdateProfileAdditionalInfoRequest_DrivingLicense) isInterServiceUpdateProfileAdditionalInfoRequest_Info() {
}

func (*InterServiceUpdateProfileAdditionalInfoRequest_DriverBackground) isInterServiceUpdateProfileAdditionalInfoRequest_Info() {
}

func (*InterServiceUpdateProfileAdditionalInfoRequest_ResidenceCard) isInterServiceUpdateProfileAdditionalInfoRequest_Info() {
}

func (*InterServiceUpdateProfileAdditionalInfoRequest_BankAccount) isInterServiceUpdateProfileAdditionalInfoRequest_Info() {
}

func (*InterServiceUpdateProfileAdditionalInfoRequest_Address) isInterServiceUpdateProfileAdditionalInfoRequest_Info() {
}

func (*InterServiceUpdateProfileAdditionalInfoRequest_Mot) isInterServiceUpdateProfileAdditionalInfoRequest_Info() {
}

type InterServiceFindCourierAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Filter:
	//	*InterServiceFindCourierAccountsRequest_UserId
	//	*InterServiceFindCourierAccountsRequest_PhoneNumber
	//	*InterServiceFindCourierAccountsRequest_Email
	//	*InterServiceFindCourierAccountsRequest_Name
	Filter isInterServiceFindCourierAccountsRequest_Filter `protobuf_oneof:"filter"`
}

func (x *InterServiceFindCourierAccountsRequest) Reset() {
	*x = InterServiceFindCourierAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterServiceFindCourierAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterServiceFindCourierAccountsRequest) ProtoMessage() {}

func (x *InterServiceFindCourierAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterServiceFindCourierAccountsRequest.ProtoReflect.Descriptor instead.
func (*InterServiceFindCourierAccountsRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{107}
}

func (m *InterServiceFindCourierAccountsRequest) GetFilter() isInterServiceFindCourierAccountsRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *InterServiceFindCourierAccountsRequest) GetUserId() string {
	if x, ok := x.GetFilter().(*InterServiceFindCourierAccountsRequest_UserId); ok {
		return x.UserId
	}
	return ""
}

func (x *InterServiceFindCourierAccountsRequest) GetPhoneNumber() string {
	if x, ok := x.GetFilter().(*InterServiceFindCourierAccountsRequest_PhoneNumber); ok {
		return x.PhoneNumber
	}
	return ""
}

func (x *InterServiceFindCourierAccountsRequest) GetEmail() string {
	if x, ok := x.GetFilter().(*InterServiceFindCourierAccountsRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *InterServiceFindCourierAccountsRequest) GetName() string {
	if x, ok := x.GetFilter().(*InterServiceFindCourierAccountsRequest_Name); ok {
		return x.Name
	}
	return ""
}

type isInterServiceFindCourierAccountsRequest_Filter interface {
	isInterServiceFindCourierAccountsRequest_Filter()
}

type InterServiceFindCourierAccountsRequest_UserId struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof"`
}

type InterServiceFindCourierAccountsRequest_PhoneNumber struct {
	PhoneNumber string `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3,oneof"`
}

type InterServiceFindCourierAccountsRequest_Email struct {
	Email string `protobuf:"bytes,3,opt,name=email,proto3,oneof"`
}

type InterServiceFindCourierAccountsRequest_Name struct {
	Name string `protobuf:"bytes,4,opt,name=name,proto3,oneof"`
}

func (*InterServiceFindCourierAccountsRequest_UserId) isInterServiceFindCourierAccountsRequest_Filter() {
}

func (*InterServiceFindCourierAccountsRequest_PhoneNumber) isInterServiceFindCourierAccountsRequest_Filter() {
}

func (*InterServiceFindCourierAccountsRequest_Email) isInterServiceFindCourierAccountsRequest_Filter() {
}

func (*InterServiceFindCourierAccountsRequest_Name) isInterServiceFindCourierAccountsRequest_Filter() {
}

type InterServiceGetDocumentsOfUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// optional
	Type DocumentInfoType `protobuf:"varint,2,opt,name=type,proto3,enum=party.DocumentInfoType" json:"type,omitempty"`
	// optional
	DataType DocumentDataType `protobuf:"varint,3,opt,name=data_type,json=dataType,proto3,enum=party.DocumentDataType" json:"data_type,omitempty"`
}

func (x *InterServiceGetDocumentsOfUserRequest) Reset() {
	*x = InterServiceGetDocumentsOfUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterServiceGetDocumentsOfUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterServiceGetDocumentsOfUserRequest) ProtoMessage() {}

func (x *InterServiceGetDocumentsOfUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterServiceGetDocumentsOfUserRequest.ProtoReflect.Descriptor instead.
func (*InterServiceGetDocumentsOfUserRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{108}
}

func (x *InterServiceGetDocumentsOfUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *InterServiceGetDocumentsOfUserRequest) GetType() DocumentInfoType {
	if x != nil {
		return x.Type
	}
	return DocumentInfoType_UNKNOWN_DOCUMENT_INFO_TYPE
}

func (x *InterServiceGetDocumentsOfUserRequest) GetDataType() DocumentDataType {
	if x != nil {
		return x.DataType
	}
	return DocumentDataType_UNKNOWN_DOCUMENT_DATA_TYPE
}

type OpenGetCourierAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *OpenGetCourierAccountRequest) Reset() {
	*x = OpenGetCourierAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenGetCourierAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenGetCourierAccountRequest) ProtoMessage() {}

func (x *OpenGetCourierAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenGetCourierAccountRequest.ProtoReflect.Descriptor instead.
func (*OpenGetCourierAccountRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{109}
}

func (x *OpenGetCourierAccountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type OpenGetProfileAdditionalInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string             `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type   AdditionalInfoType `protobuf:"varint,2,opt,name=type,proto3,enum=party.AdditionalInfoType" json:"type,omitempty"`
}

func (x *OpenGetProfileAdditionalInfoRequest) Reset() {
	*x = OpenGetProfileAdditionalInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenGetProfileAdditionalInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenGetProfileAdditionalInfoRequest) ProtoMessage() {}

func (x *OpenGetProfileAdditionalInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenGetProfileAdditionalInfoRequest.ProtoReflect.Descriptor instead.
func (*OpenGetProfileAdditionalInfoRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{110}
}

func (x *OpenGetProfileAdditionalInfoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OpenGetProfileAdditionalInfoRequest) GetType() AdditionalInfoType {
	if x != nil {
		return x.Type
	}
	return AdditionalInfoType_UNKNOWN_ADDITIONAL_INFO_TYPE
}

type OpenGetDocumentsOfUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// optional
	Type DocumentInfoType `protobuf:"varint,2,opt,name=type,proto3,enum=party.DocumentInfoType" json:"type,omitempty"`
	// optional
	DataType DocumentDataType `protobuf:"varint,3,opt,name=data_type,json=dataType,proto3,enum=party.DocumentDataType" json:"data_type,omitempty"`
}

func (x *OpenGetDocumentsOfUserRequest) Reset() {
	*x = OpenGetDocumentsOfUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenGetDocumentsOfUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenGetDocumentsOfUserRequest) ProtoMessage() {}

func (x *OpenGetDocumentsOfUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenGetDocumentsOfUserRequest.ProtoReflect.Descriptor instead.
func (*OpenGetDocumentsOfUserRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{111}
}

func (x *OpenGetDocumentsOfUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OpenGetDocumentsOfUserRequest) GetType() DocumentInfoType {
	if x != nil {
		return x.Type
	}
	return DocumentInfoType_UNKNOWN_DOCUMENT_INFO_TYPE
}

func (x *OpenGetDocumentsOfUserRequest) GetDataType() DocumentDataType {
	if x != nil {
		return x.DataType
	}
	return DocumentDataType_UNKNOWN_DOCUMENT_DATA_TYPE
}

type OpenGetUserAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *OpenGetUserAccountRequest) Reset() {
	*x = OpenGetUserAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenGetUserAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenGetUserAccountRequest) ProtoMessage() {}

func (x *OpenGetUserAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenGetUserAccountRequest.ProtoReflect.Descriptor instead.
func (*OpenGetUserAccountRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{112}
}

func (x *OpenGetUserAccountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type OpenGetCourierPublicInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierId string `protobuf:"bytes,1,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
}

func (x *OpenGetCourierPublicInfoRequest) Reset() {
	*x = OpenGetCourierPublicInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenGetCourierPublicInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenGetCourierPublicInfoRequest) ProtoMessage() {}

func (x *OpenGetCourierPublicInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenGetCourierPublicInfoRequest.ProtoReflect.Descriptor instead.
func (*OpenGetCourierPublicInfoRequest) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{113}
}

func (x *OpenGetCourierPublicInfoRequest) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

type OpenGetCourierPublicInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile            *CourierProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	RegistrationNumber string          `protobuf:"bytes,2,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number,omitempty"`
	ProfilePicture     *ProfilePicture `protobuf:"bytes,3,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
}

func (x *OpenGetCourierPublicInfoResponse) Reset() {
	*x = OpenGetCourierPublicInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_party_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenGetCourierPublicInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenGetCourierPublicInfoResponse) ProtoMessage() {}

func (x *OpenGetCourierPublicInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_party_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenGetCourierPublicInfoResponse.ProtoReflect.Descriptor instead.
func (*OpenGetCourierPublicInfoResponse) Descriptor() ([]byte, []int) {
	return file_party_proto_rawDescGZIP(), []int{114}
}

func (x *OpenGetCourierPublicInfoResponse) GetProfile() *CourierProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *OpenGetCourierPublicInfoResponse) GetRegistrationNumber() string {
	if x != nil {
		return x.RegistrationNumber
	}
	return ""
}

func (x *OpenGetCourierPublicInfoResponse) GetProfilePicture() *ProfilePicture {
	if x != nil {
		return x.ProfilePicture
	}
	return nil
}

var File_party_proto protoreflect.FileDescriptor

var file_party_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x22, 0x66, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f, 0x0a, 0x13, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x31, 0x0a, 0x11,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x03, 0x6d, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x4d, 0x6f, 0x74, 0x52, 0x03, 0x6d, 0x6f, 0x74, 0x22,
	0x3d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4c,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xb7, 0x01, 0x0a,
	0x1a, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x50, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0xb0, 0x03, 0x0a, 0x0e, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x69,
	0x74, 0x69, 0x7a, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x07, 0x63, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x12, 0x40, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x43, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x10, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x22, 0x57, 0x0a, 0x0f, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x24,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x07, 0x63, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x22, 0x1e, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xe9, 0x02, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
	0x65, 0x61, 0x6e, 0x52, 0x07, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x12, 0x40, 0x0a, 0x0e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x1e,
	0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6e,
	0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x22,
	0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x85, 0x02, 0x0a, 0x06, 0x49, 0x44, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x49, 0x44, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x0e, 0x44,
	0x72, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x16, 0x64, 0x72, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64,
	0x72, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x0c,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x10, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x10, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x64, 0x62, 0x73, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52,
	0x0e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x62, 0x73, 0x4c, 0x61, 0x74, 0x65, 0x72, 0x12,
	0x36, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x73, 0x22, 0xd6, 0x01, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0xe7, 0x01, 0x0a, 0x07, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x36, 0x0a, 0x0c,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x73, 0x22, 0xf3, 0x05, 0x0a, 0x03, 0x4d, 0x6f, 0x74, 0x12, 0x2f, 0x0a, 0x13,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x32, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x32, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x75, 0x72, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x75, 0x72, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x11,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x0f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x46,
	0x6f, 0x72, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x65, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x65,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x6d, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x4d, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x6d, 0x6f, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x79, 0x70, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x2e,
	0x0a, 0x13, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x79, 0x65, 0x61,
	0x72, 0x4f, 0x66, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x20,
	0x0a, 0x0c, 0x74, 0x61, 0x78, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x78, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x61, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x54, 0x61, 0x78,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x74, 0x61, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x34, 0x0a, 0x17, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x76, 0x35, 0x63, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x4c, 0x61, 0x73, 0x74, 0x56, 0x35,
	0x63, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x65, 0x61, 0x6c, 0x5f,
	0x64, 0x72, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x61, 0x6c, 0x44, 0x72, 0x69,
	0x76, 0x69, 0x6e, 0x67, 0x45, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x3d, 0x0a, 0x1b, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x6f, 0x66, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x18, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x4f, 0x66, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xce, 0x03, 0x0a, 0x22, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x49, 0x44,
	0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x40,
	0x0a, 0x0f, 0x64, 0x72, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x44, 0x72, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0e, 0x64, 0x72, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x11, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x10, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x42, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x3d, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x37, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x03,
	0x6d, 0x6f, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x4d, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x48, 0x00, 0x52, 0x03,
	0x6d, 0x6f, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x25, 0x0a, 0x23, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3d, 0x0a, 0x0a, 0x4d, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x76, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x25, 0x0a, 0x23, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x73, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x90, 0x05, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x69, 0x64,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x49, 0x44, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x06, 0x69, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x40, 0x0a, 0x0f, 0x64, 0x72, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x5f,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x72, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x10, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x3d,
	0x0a, 0x0e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x52,
	0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0d,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x37, 0x0a,
	0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x42, 0x61, 0x6e, 0x6b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1e, 0x0a, 0x03, 0x6d, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x4d, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x03, 0x6d,
	0x6f, 0x74, 0x12, 0x52, 0x0a, 0x15, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x49, 0x6e, 0x73, 0x75, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x14, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x56, 0x0a, 0x17, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x06, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x93, 0x04, 0x0a, 0x15, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x26, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x49, 0x44, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x3e, 0x0a, 0x0f, 0x64, 0x72,
	0x69, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x72, 0x69, 0x76,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x64, 0x72, 0x69, 0x76,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x11, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x10,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x3b, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0d,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x35, 0x0a,
	0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x42, 0x61, 0x6e, 0x6b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c,
	0x0a, 0x03, 0x6d, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x4d, 0x6f, 0x74, 0x52, 0x03, 0x6d, 0x6f, 0x74, 0x12, 0x50, 0x0a, 0x15,
	0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x49, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x14, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x3e,
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x22, 0x47,
	0x0a, 0x14, 0x49, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4a, 0x0a, 0x25, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x71, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x2a, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x41,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd8, 0x01,
	0x0a, 0x28, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2b, 0x0a, 0x29, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x48, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xbe, 0x01,
	0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a,
	0x08, 0x64, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe7,
	0x01, 0x0a, 0x0c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x34, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x66,
	0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x64, 0x6f,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x67, 0x0a, 0x15, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x35, 0x0a, 0x16, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4f, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x66, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x54, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x36, 0x0a, 0x0f, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e,
	0x6b, 0x22, 0x26, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x57, 0x0a, 0x15, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x16, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x46, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x6b, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2c, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x61, 0x6c, 0x22, 0x1b, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x3b, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65,
	0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6b, 0x0a,
	0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x1f, 0x0a, 0x1d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x46, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22,
	0xb4, 0x01, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x22, 0xd0, 0x02, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x3b, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x43, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x52, 0x10, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x76, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x76, 0x76, 0x12, 0x19, 0x0a, 0x08, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x37, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3c, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x22, 0x5b, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72,
	0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xaa, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61,
	0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x76, 0x76, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x76, 0x76, 0x12, 0x19, 0x0a, 0x08, 0x7a, 0x69, 0x70,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x35,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x63, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x21, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x48,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x62, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x20, 0x0a, 0x1e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47,
	0x0a, 0x22, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x75, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x46,
	0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x74, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x83, 0x01, 0x0a,
	0x28, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x27, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17,
	0x0a, 0x07, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x22, 0x53, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x43, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xf4, 0x01, 0x0a, 0x24, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x31, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x56, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0xf3, 0x01, 0x0a, 0x23, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x31, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x4f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x20, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f,
	0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x26, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x21,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x49, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xc9, 0x01, 0x0a,
	0x17, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x49, 0x0a,
	0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x1f, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2d, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x78, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf7, 0x01, 0x0a, 0x12,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0a, 0x66, 0x61, 0x63, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a,
	0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x08, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x3b, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x22, 0xb1, 0x02, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x24, 0x0a, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x06,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a,
	0x05, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58,
	0x0a, 0x05, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x75, 0x0a, 0x2b, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0xd0, 0x03, 0x0a, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x07, 0x69,
	0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x49, 0x44, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x06, 0x69,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x40, 0x0a, 0x0f, 0x64, 0x72, 0x69, 0x76, 0x69, 0x6e, 0x67,
	0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x72, 0x69, 0x76, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x10, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12,
	0x3d, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52,
	0x0d, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x37,
	0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x42, 0x61, 0x6e,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x03, 0x6d, 0x6f, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x4d, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x6f, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x26, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xa3, 0x01, 0x0a, 0x25, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x37, 0x0a, 0x1c, 0x4f,
	0x70, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x23, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x1d, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x34, 0x0a, 0x19, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x1f, 0x4f, 0x70, 0x65, 0x6e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x20, 0x4f, 0x70,
	0x65, 0x6e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x2f, 0x0a, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x3e, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x2a, 0xab, 0x02, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2a, 0x0a, 0x26, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x46,
	0x49, 0x4c, 0x45, 0x5f, 0x41, 0x44, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x28, 0x0a, 0x24,
	0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x41, 0x44, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45,
	0x4d, 0x50, 0x54, 0x59, 0x10, 0x01, 0x12, 0x2e, 0x0a, 0x2a, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c,
	0x45, 0x5f, 0x41, 0x44, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46,
	0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4d, 0x50, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x2c, 0x0a, 0x28, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c,
	0x45, 0x5f, 0x41, 0x44, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46,
	0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x2b, 0x0a, 0x27, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f,
	0x41, 0x44, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10,
	0x04, 0x12, 0x2b, 0x0a, 0x27, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x41, 0x44, 0x44,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x05, 0x2a, 0xbe,
	0x01, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x2d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x41,
	0x44, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x32, 0x0a, 0x2e, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x41, 0x44, 0x44, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x32, 0x0a, 0x2e, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x41, 0x44,
	0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x02, 0x2a,
	0xad, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x50, 0x52, 0x4f,
	0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x1e, 0x0a,
	0x1a, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x25, 0x0a,
	0x21, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x56, 0x45, 0x52, 0x49,
	0x46, 0x59, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10,
	0x03, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x04, 0x2a,
	0x98, 0x03, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x41, 0x44, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46,
	0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x28, 0x0a, 0x24, 0x41, 0x44, 0x44, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45,
	0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x44, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c,
	0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x43, 0x41,
	0x52, 0x44, 0x10, 0x02, 0x12, 0x28, 0x0a, 0x24, 0x41, 0x44, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x52, 0x49,
	0x56, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x10, 0x03, 0x12, 0x2a,
	0x0a, 0x26, 0x41, 0x44, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46,
	0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52, 0x5f, 0x42, 0x41,
	0x43, 0x4b, 0x47, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x04, 0x12, 0x27, 0x0a, 0x23, 0x41, 0x44,
	0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x49, 0x44, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x52,
	0x44, 0x10, 0x05, 0x12, 0x25, 0x0a, 0x21, 0x41, 0x44, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41,
	0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x41, 0x4e, 0x4b,
	0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x06, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x44,
	0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x4f, 0x54, 0x10, 0x07, 0x12, 0x2e, 0x0a, 0x2a, 0x41, 0x44, 0x44, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x49, 0x4e, 0x53, 0x55, 0x52, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x45, 0x52, 0x54, 0x49,
	0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x10, 0x08, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x44, 0x44, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x09, 0x2a, 0xb3, 0x01, 0x0a, 0x12, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x10, 0x01, 0x12,
	0x1f, 0x0a, 0x1b, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x49, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x10, 0x02,
	0x12, 0x21, 0x0a, 0x1d, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x4f, 0x54, 0x4f, 0x52, 0x42, 0x49, 0x4b,
	0x45, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x41, 0x4e, 0x10, 0x04,
	0x2a, 0x93, 0x01, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x50, 0x4f, 0x52, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f,
	0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x50, 0x4f, 0x52, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x4d,
	0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x50, 0x4f, 0x52, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x4c,
	0x41, 0x52, 0x47, 0x45, 0x10, 0x03, 0x2a, 0x61, 0x0a, 0x0a, 0x49, 0x44, 0x43, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x49, 0x44, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x18, 0x0a,
	0x14, 0x49, 0x44, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x53,
	0x53, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x49, 0x44, 0x43, 0x41, 0x52,
	0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f,
	0x49, 0x44, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x02, 0x2a, 0x9f, 0x01, 0x0a, 0x09, 0x4d, 0x6f,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x4d, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12,
	0x26, 0x0a, 0x22, 0x4d, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f,
	0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x53, 0x5f, 0x48, 0x45, 0x4c, 0x44, 0x5f, 0x42, 0x59,
	0x5f, 0x44, 0x56, 0x4c, 0x41, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x4d, 0x4f, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x53,
	0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x4d,
	0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x04, 0x2a, 0x90, 0x01, 0x0a, 0x09,
	0x54, 0x61, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x54, 0x41, 0x58, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10,
	0x00, 0x12, 0x28, 0x0a, 0x24, 0x54, 0x41, 0x58, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x54, 0x41, 0x58, 0x45, 0x44, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x4f, 0x4e,
	0x5f, 0x52, 0x4f, 0x41, 0x44, 0x5f, 0x55, 0x53, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x54,
	0x41, 0x58, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x4f, 0x52, 0x4e, 0x10, 0x02,
	0x12, 0x14, 0x0a, 0x10, 0x54, 0x41, 0x58, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54,
	0x41, 0x58, 0x45, 0x44, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x41, 0x58, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x54, 0x41, 0x58, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x43,
	0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x5f, 0x54, 0x52, 0x55,
	0x45, 0x10, 0x02, 0x2a, 0xbe, 0x01, 0x0a, 0x09, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x4c, 0x41,
	0x49, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4c, 0x41,
	0x49, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12,
	0x1b, 0x0a, 0x17, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x48,
	0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14,
	0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x4f, 0x4f, 0x47, 0x4c,
	0x45, 0x5f, 0x49, 0x44, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x41, 0x43, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x49, 0x44,
	0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x43,
	0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f,
	0x52, 0x44, 0x10, 0x06, 0x2a, 0xe6, 0x02, 0x0a, 0x10, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x44, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x01, 0x12, 0x26, 0x0a, 0x22, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x44, 0x52, 0x49, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x10,
	0x02, 0x12, 0x28, 0x0a, 0x24, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52, 0x5f, 0x42,
	0x41, 0x43, 0x4b, 0x47, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x25, 0x0a, 0x21, 0x44,
	0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x52, 0x45, 0x53, 0x49, 0x44, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44,
	0x10, 0x04, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x41, 0x4e, 0x4b, 0x5f, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x05, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x44,
	0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x06, 0x12, 0x2c, 0x0a, 0x28, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e,
	0x53, 0x55, 0x52, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43,
	0x41, 0x54, 0x45, 0x10, 0x07, 0x12, 0x26, 0x0a, 0x22, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x46,
	0x49, 0x4c, 0x45, 0x5f, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45, 0x10, 0x08, 0x2a, 0xef, 0x03,
	0x0a, 0x0c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x15, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x50,
	0x4f, 0x52, 0x54, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f,
	0x49, 0x44, 0x5f, 0x46, 0x52, 0x4f, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x44, 0x4f,
	0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x49, 0x44, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x03, 0x12, 0x27,
	0x0a, 0x23, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x44, 0x52, 0x49, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x5f,
	0x46, 0x52, 0x4f, 0x4e, 0x54, 0x10, 0x04, 0x12, 0x26, 0x0a, 0x22, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x52, 0x49, 0x56, 0x49, 0x4e, 0x47,
	0x5f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x05, 0x12,
	0x26, 0x0a, 0x22, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x52, 0x45, 0x53, 0x49, 0x44, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f,
	0x46, 0x52, 0x4f, 0x4e, 0x54, 0x10, 0x06, 0x12, 0x25, 0x0a, 0x21, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x49, 0x44, 0x45, 0x4e,
	0x43, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x07, 0x12, 0x27,
	0x0a, 0x23, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x44, 0x42, 0x53, 0x5f, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f,
	0x46, 0x52, 0x4f, 0x4e, 0x54, 0x10, 0x08, 0x12, 0x26, 0x0a, 0x22, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x42, 0x53, 0x5f, 0x43, 0x45, 0x52,
	0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x09, 0x12,
	0x27, 0x0a, 0x23, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x49, 0x4e, 0x53, 0x55, 0x52, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x45, 0x52, 0x54, 0x49,
	0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x10, 0x0a, 0x12, 0x22, 0x0a, 0x1e, 0x44, 0x4f, 0x43, 0x55,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x4f, 0x46, 0x5f,
	0x4f, 0x46, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x0b, 0x12, 0x21, 0x0a, 0x1d,
	0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52,
	0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45, 0x10, 0x0c, 0x2a,
	0x71, 0x0a, 0x10, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x44,
	0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x48, 0x55, 0x4d, 0x42, 0x4e,
	0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x10, 0x02, 0x2a, 0x6a, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x50,
	0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x10, 0x00, 0x12,
	0x1e, 0x0a, 0x1a, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f,
	0x44, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x01, 0x12,
	0x1d, 0x0a, 0x19, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f,
	0x44, 0x5f, 0x44, 0x45, 0x42, 0x49, 0x54, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x02, 0x2a, 0x8c,
	0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a,
	0x13, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x18, 0x0a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44,
	0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x2a, 0x48, 0x0a,
	0x08, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x53,
	0x43, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x02, 0x2a, 0x79, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x55, 0x52, 0x49, 0x4f, 0x55, 0x52, 0x10,
	0x01, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50,
	0x41, 0x53, 0x53, 0x45, 0x4e, 0x47, 0x45, 0x52, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x03, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c, 0x4c,
	0x10, 0x04, 0x32, 0x8a, 0x0a, 0x0a, 0x15, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x58, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x46, 0x69, 0x6e,
	0x64, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x12, 0x21, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x1b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x29, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a,
	0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2f, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40,
	0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4d, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6d, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32,
	0x8f, 0x03, 0x0a, 0x0f, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x66, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x20, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3d, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x0e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x32, 0xeb, 0x06, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1f, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x61, 0x72, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32,
	0xab, 0x03, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xea, 0x03,
	0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x29, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x1e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2c, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x28, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xd8, 0x06, 0x0a, 0x11, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x7a, 0x0a, 0x21, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x12, 0x2f, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x20,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x12, 0x2e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x1d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a,
	0x1c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x69, 0x0a, 0x19, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x12, 0x27,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x66, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x1f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x2d, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x1a, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xa2, 0x01, 0x0a, 0x0a, 0x55, 0x61, 0x61, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0d,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x1b, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x9a, 0x08, 0x0a, 0x0c, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x24,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x27, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x35, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x1f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x1e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f,
	0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x60, 0x0a, 0x15, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x1c, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x16, 0x4f, 0x70,
	0x65, 0x6e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x66,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x66, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f,
	0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x57, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x18, 0x4f, 0x70, 0x65, 0x6e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x22, 0x5a, 0x20, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_party_proto_rawDescOnce sync.Once
	file_party_proto_rawDescData = file_party_proto_rawDesc
)

func file_party_proto_rawDescGZIP() []byte {
	file_party_proto_rawDescOnce.Do(func() {
		file_party_proto_rawDescData = protoimpl.X.CompressGZIP(file_party_proto_rawDescData)
	})
	return file_party_proto_rawDescData
}

var file_party_proto_enumTypes = make([]protoimpl.EnumInfo, 18)
var file_party_proto_msgTypes = make([]protoimpl.MessageInfo, 115)
var file_party_proto_goTypes = []interface{}{
	(ProfileAdditionalInfoStatus)(0),                       // 0: party.ProfileAdditionalInfoStatus
	(UpdateProfileAdditionalInfoStatus)(0),                 // 1: party.UpdateProfileAdditionalInfoStatus
	(ProfileStatus)(0),                                     // 2: party.ProfileStatus
	(AdditionalInfoType)(0),                                // 3: party.AdditionalInfoType
	(TransportationType)(0),                                // 4: party.TransportationType
	(TransportationSize)(0),                                // 5: party.TransportationSize
	(IDCardType)(0),                                        // 6: party.IDCardType
	(MotStatus)(0),                                         // 7: party.MotStatus
	(TaxStatus)(0),                                         // 8: party.TaxStatus
	(Boolean)(0),                                           // 9: party.Boolean
	(ClaimType)(0),                                         // 10: party.ClaimType
	(DocumentInfoType)(0),                                  // 11: party.DocumentInfoType
	(DocumentType)(0),                                      // 12: party.DocumentType
	(DocumentDataType)(0),                                  // 13: party.DocumentDataType
	(PaymentMethod)(0),                                     // 14: party.PaymentMethod
	(UserStatus)(0),                                        // 15: party.UserStatus
	(SortType)(0),                                          // 16: party.SortType
	(UserType)(0),                                          // 17: party.UserType
	(*SearchMotRequest)(nil),                               // 18: party.SearchMotRequest
	(*SearchMotResponse)(nil),                              // 19: party.SearchMotResponse
	(*GetCourierAccountRequest)(nil),                       // 20: party.GetCourierAccountRequest
	(*GetCourierAccountResponse)(nil),                      // 21: party.GetCourierAccountResponse
	(*FindCourierAccountsRequest)(nil),                     // 22: party.FindCourierAccountsRequest
	(*FindCourierAccountsResponse)(nil),                    // 23: party.FindCourierAccountsResponse
	(*CourierProfile)(nil),                                 // 24: party.CourierProfile
	(*AuthorizedClaim)(nil),                                // 25: party.AuthorizedClaim
	(*CreateCourierAccountRequest)(nil),                    // 26: party.CreateCourierAccountRequest
	(*CreateCourierAccountResponse)(nil),                   // 27: party.CreateCourierAccountResponse
	(*UpdateCourierAccountRequest)(nil),                    // 28: party.UpdateCourierAccountRequest
	(*UpdateCourierAccountResponse)(nil),                   // 29: party.UpdateCourierAccountResponse
	(*UpdateCourierPhoneNumberRequest)(nil),                // 30: party.UpdateCourierPhoneNumberRequest
	(*UpdateCourierPhoneNumberResponse)(nil),               // 31: party.UpdateCourierPhoneNumberResponse
	(*IDCard)(nil),                                         // 32: party.IDCard
	(*DrivingLicense)(nil),                                 // 33: party.DrivingLicense
	(*DriverBackground)(nil),                               // 34: party.DriverBackground
	(*ResidenceCard)(nil),                                  // 35: party.ResidenceCard
	(*BankAccount)(nil),                                    // 36: party.BankAccount
	(*Address)(nil),                                        // 37: party.Address
	(*Mot)(nil),                                            // 38: party.Mot
	(*UpdateProfileAdditionalInfoRequest)(nil),             // 39: party.UpdateProfileAdditionalInfoRequest
	(*UpdateProfileAdditionalInfoResponse)(nil),            // 40: party.UpdateProfileAdditionalInfoResponse
	(*MotConfirm)(nil),                                     // 41: party.MotConfirm
	(*DeleteProfileAdditionalInfoRequest)(nil),             // 42: party.DeleteProfileAdditionalInfoRequest
	(*DeleteProfileAdditionalInfoResponse)(nil),            // 43: party.DeleteProfileAdditionalInfoResponse
	(*GetProfileAdditionalInfoRequest)(nil),                // 44: party.GetProfileAdditionalInfoRequest
	(*GetProfileAdditionalInfoResponse)(nil),               // 45: party.GetProfileAdditionalInfoResponse
	(*ProfileAdditionalInfo)(nil),                          // 46: party.ProfileAdditionalInfo
	(*InsuranceCertificate)(nil),                           // 47: party.InsuranceCertificate
	(*ProfilePicture)(nil),                                 // 48: party.ProfilePicture
	(*GetProfileAdditionalInfoStatusRequest)(nil),          // 49: party.GetProfileAdditionalInfoStatusRequest
	(*GetProfileAdditionalInfoStatusResponse)(nil),         // 50: party.GetProfileAdditionalInfoStatusResponse
	(*GetProfileAdditionalInfoStatusResponseItem)(nil),     // 51: party.GetProfileAdditionalInfoStatusResponseItem
	(*UpdateProfileAdditionalInfoStatusRequest)(nil),       // 52: party.UpdateProfileAdditionalInfoStatusRequest
	(*UpdateProfileAdditionalInfoStatusResponse)(nil),      // 53: party.UpdateProfileAdditionalInfoStatusResponse
	(*GetProfileStatusRequest)(nil),                        // 54: party.GetProfileStatusRequest
	(*GetProfileStatusResponse)(nil),                       // 55: party.GetProfileStatusResponse
	(*Document)(nil),                                       // 56: party.Document
	(*DocumentInfo)(nil),                                   // 57: party.DocumentInfo
	(*UploadDocumentRequest)(nil),                          // 58: party.UploadDocumentRequest
	(*UploadDocumentResponse)(nil),                         // 59: party.UploadDocumentResponse
	(*GetDocumentsOfUserRequest)(nil),                      // 60: party.GetDocumentsOfUserRequest
	(*GetDocumentsOfUserResponse)(nil),                     // 61: party.GetDocumentsOfUserResponse
	(*GetDocumentRequest)(nil),                             // 62: party.GetDocumentRequest
	(*GetDocumentResponse)(nil),                            // 63: party.GetDocumentResponse
	(*DownloadRequest)(nil),                                // 64: party.DownloadRequest
	(*DownloadResponse)(nil),                               // 65: party.DownloadResponse
	(*DirectDownloadRequest)(nil),                          // 66: party.DirectDownloadRequest
	(*DirectDownloadResponse)(nil),                         // 67: party.DirectDownloadResponse
	(*GetUserAddressRequest)(nil),                          // 68: party.GetUserAddressRequest
	(*GetUserAddressResponse)(nil),                         // 69: party.GetUserAddressResponse
	(*UpdateUserAddressRequest)(nil),                       // 70: party.UpdateUserAddressRequest
	(*UpdateUserAddressResponse)(nil),                      // 71: party.UpdateUserAddressResponse
	(*UserAddress)(nil),                                    // 72: party.UserAddress
	(*CreateUserAccountRequest)(nil),                       // 73: party.CreateUserAccountRequest
	(*CreateUserAccountResponse)(nil),                      // 74: party.CreateUserAccountResponse
	(*UpdateUserAccountRequest)(nil),                       // 75: party.UpdateUserAccountRequest
	(*UpdateUserAccountResponse)(nil),                      // 76: party.UpdateUserAccountResponse
	(*UpdateUserPhoneNumberRequest)(nil),                   // 77: party.UpdateUserPhoneNumberRequest
	(*UpdateUserPhoneNumberResponse)(nil),                  // 78: party.UpdateUserPhoneNumberResponse
	(*GetUserAccountRequest)(nil),                          // 79: party.GetUserAccountRequest
	(*GetUserAccountResponse)(nil),                         // 80: party.GetUserAccountResponse
	(*FindUserAccountsRequest)(nil),                        // 81: party.FindUserAccountsRequest
	(*FindUserAccountsResponse)(nil),                       // 82: party.FindUserAccountsResponse
	(*UserProfile)(nil),                                    // 83: party.UserProfile
	(*UpdateUserCardRequest)(nil),                          // 84: party.UpdateUserCardRequest
	(*UpdateUserCardResponse)(nil),                         // 85: party.UpdateUserCardResponse
	(*GetUserCardRequest)(nil),                             // 86: party.GetUserCardRequest
	(*GetUserCardResponse)(nil),                            // 87: party.GetUserCardResponse
	(*DeleteUserCardRequest)(nil),                          // 88: party.DeleteUserCardRequest
	(*DeleteUserCardResponse)(nil),                         // 89: party.DeleteUserCardResponse
	(*UserCard)(nil),                                       // 90: party.UserCard
	(*GetCourierUserStatusRequest)(nil),                    // 91: party.GetCourierUserStatusRequest
	(*GetCourierUserStatusResponse)(nil),                   // 92: party.GetCourierUserStatusResponse
	(*UpdateCourierUserStatusRequest)(nil),                 // 93: party.UpdateCourierUserStatusRequest
	(*UpdateCourierUserStatusResponse)(nil),                // 94: party.UpdateCourierUserStatusResponse
	(*GetClientUserStatusRequest)(nil),                     // 95: party.GetClientUserStatusRequest
	(*GetClientUserStatusResponse)(nil),                    // 96: party.GetClientUserStatusResponse
	(*UpdateClientUserStatusRequest)(nil),                  // 97: party.UpdateClientUserStatusRequest
	(*UpdateClientUserStatusResponse)(nil),                 // 98: party.UpdateClientUserStatusResponse
	(*GetCourierUserStatusByTokenRequest)(nil),             // 99: party.GetCourierUserStatusByTokenRequest
	(*UpdateCourierUserStatusByTokenRequest)(nil),          // 100: party.UpdateCourierUserStatusByTokenRequest
	(*GetClientUserStatusByTokenRequest)(nil),              // 101: party.GetClientUserStatusByTokenRequest
	(*UpdateClientUserStatusByTokenRequest)(nil),           // 102: party.UpdateClientUserStatusByTokenRequest
	(*ServiceGetCourierRegistrationStatRequest)(nil),       // 103: party.ServiceGetCourierRegistrationStatRequest
	(*ServiceGetClientRegistrationStatRequest)(nil),        // 104: party.ServiceGetClientRegistrationStatRequest
	(*GetRegistrationStatResponse)(nil),                    // 105: party.GetRegistrationStatResponse
	(*GetRegistrationStatItem)(nil),                        // 106: party.GetRegistrationStatItem
	(*ServiceGetCourierRegistrationRequest)(nil),           // 107: party.ServiceGetCourierRegistrationRequest
	(*GetCourierRegistrationResponse)(nil),                 // 108: party.GetCourierRegistrationResponse
	(*ServiceGetClientRegistrationRequest)(nil),            // 109: party.ServiceGetClientRegistrationRequest
	(*GetClientRegistrationResponse)(nil),                  // 110: party.GetClientRegistrationResponse
	(*ServiceGetDocumentsOfUserRequest)(nil),               // 111: party.ServiceGetDocumentsOfUserRequest
	(*ServiceGetProfileAdditionalInfoRequest)(nil),         // 112: party.ServiceGetProfileAdditionalInfoRequest
	(*ServiceUpdateProfileStatusRequest)(nil),              // 113: party.ServiceUpdateProfileStatusRequest
	(*CourierProfileAndStatus)(nil),                        // 114: party.CourierProfileAndStatus
	(*ProfileAdditionalInfoStatusItem)(nil),                // 115: party.ProfileAdditionalInfoStatusItem
	(*Pagination)(nil),                                     // 116: party.Pagination
	(*FindAccountRequest)(nil),                             // 117: party.FindAccountRequest
	(*FindAccountResponse)(nil),                            // 118: party.FindAccountResponse
	(*Account)(nil),                                        // 119: party.Account
	(*RegisterClaimRequest)(nil),                           // 120: party.RegisterClaimRequest
	(*RegisterClaimResponse)(nil),                          // 121: party.RegisterClaimResponse
	(*Claim)(nil),                                          // 122: party.Claim
	(*InterServiceGetProfileAdditionalInfoRequest)(nil),    // 123: party.InterServiceGetProfileAdditionalInfoRequest
	(*InterServiceUpdateProfileAdditionalInfoRequest)(nil), // 124: party.InterServiceUpdateProfileAdditionalInfoRequest
	(*InterServiceFindCourierAccountsRequest)(nil),         // 125: party.InterServiceFindCourierAccountsRequest
	(*InterServiceGetDocumentsOfUserRequest)(nil),          // 126: party.InterServiceGetDocumentsOfUserRequest
	(*OpenGetCourierAccountRequest)(nil),                   // 127: party.OpenGetCourierAccountRequest
	(*OpenGetProfileAdditionalInfoRequest)(nil),            // 128: party.OpenGetProfileAdditionalInfoRequest
	(*OpenGetDocumentsOfUserRequest)(nil),                  // 129: party.OpenGetDocumentsOfUserRequest
	(*OpenGetUserAccountRequest)(nil),                      // 130: party.OpenGetUserAccountRequest
	(*OpenGetCourierPublicInfoRequest)(nil),                // 131: party.OpenGetCourierPublicInfoRequest
	(*OpenGetCourierPublicInfoResponse)(nil),               // 132: party.OpenGetCourierPublicInfoResponse
}
var file_party_proto_depIdxs = []int32{
	38,  // 0: party.SearchMotResponse.mot:type_name -> party.Mot
	24,  // 1: party.GetCourierAccountResponse.profile:type_name -> party.CourierProfile
	24,  // 2: party.FindCourierAccountsResponse.profiles:type_name -> party.CourierProfile
	4,   // 3: party.CourierProfile.transport_type:type_name -> party.TransportationType
	9,   // 4: party.CourierProfile.citizen:type_name -> party.Boolean
	5,   // 5: party.CourierProfile.transport_size:type_name -> party.TransportationSize
	25,  // 6: party.CourierProfile.authorized_claims:type_name -> party.AuthorizedClaim
	10,  // 7: party.AuthorizedClaim.type:type_name -> party.ClaimType
	9,   // 8: party.CreateCourierAccountRequest.citizen:type_name -> party.Boolean
	4,   // 9: party.UpdateCourierAccountRequest.transportation_type:type_name -> party.TransportationType
	9,   // 10: party.UpdateCourierAccountRequest.citizen:type_name -> party.Boolean
	5,   // 11: party.UpdateCourierAccountRequest.transport_size:type_name -> party.TransportationSize
	6,   // 12: party.IDCard.type:type_name -> party.IDCardType
	57,  // 13: party.IDCard.document_ids:type_name -> party.DocumentInfo
	57,  // 14: party.DrivingLicense.document_ids:type_name -> party.DocumentInfo
	9,   // 15: party.DriverBackground.upload_dbs_later:type_name -> party.Boolean
	57,  // 16: party.DriverBackground.document_ids:type_name -> party.DocumentInfo
	57,  // 17: party.ResidenceCard.document_ids:type_name -> party.DocumentInfo
	57,  // 18: party.BankAccount.document_ids:type_name -> party.DocumentInfo
	57,  // 19: party.Address.document_ids:type_name -> party.DocumentInfo
	9,   // 20: party.Mot.marked_for_export:type_name -> party.Boolean
	7,   // 21: party.Mot.mot_status:type_name -> party.MotStatus
	8,   // 22: party.Mot.tax_status:type_name -> party.TaxStatus
	32,  // 23: party.UpdateProfileAdditionalInfoRequest.id_card:type_name -> party.IDCard
	33,  // 24: party.UpdateProfileAdditionalInfoRequest.driving_license:type_name -> party.DrivingLicense
	34,  // 25: party.UpdateProfileAdditionalInfoRequest.driver_background:type_name -> party.DriverBackground
	35,  // 26: party.UpdateProfileAdditionalInfoRequest.residence_card:type_name -> party.ResidenceCard
	36,  // 27: party.UpdateProfileAdditionalInfoRequest.bank_account:type_name -> party.BankAccount
	37,  // 28: party.UpdateProfileAdditionalInfoRequest.address:type_name -> party.Address
	41,  // 29: party.UpdateProfileAdditionalInfoRequest.mot:type_name -> party.MotConfirm
	3,   // 30: party.DeleteProfileAdditionalInfoRequest.type:type_name -> party.AdditionalInfoType
	3,   // 31: party.GetProfileAdditionalInfoRequest.type:type_name -> party.AdditionalInfoType
	32,  // 32: party.GetProfileAdditionalInfoResponse.id_card:type_name -> party.IDCard
	33,  // 33: party.GetProfileAdditionalInfoResponse.driving_license:type_name -> party.DrivingLicense
	34,  // 34: party.GetProfileAdditionalInfoResponse.driver_background:type_name -> party.DriverBackground
	35,  // 35: party.GetProfileAdditionalInfoResponse.residence_card:type_name -> party.ResidenceCard
	36,  // 36: party.GetProfileAdditionalInfoResponse.bank_account:type_name -> party.BankAccount
	37,  // 37: party.GetProfileAdditionalInfoResponse.address:type_name -> party.Address
	38,  // 38: party.GetProfileAdditionalInfoResponse.mot:type_name -> party.Mot
	47,  // 39: party.GetProfileAdditionalInfoResponse.insurance_certificate:type_name -> party.InsuranceCertificate
	48,  // 40: party.GetProfileAdditionalInfoResponse.profile_picture:type_name -> party.ProfilePicture
	46,  // 41: party.GetProfileAdditionalInfoResponse.profile_additional_info:type_name -> party.ProfileAdditionalInfo
	32,  // 42: party.ProfileAdditionalInfo.id_card:type_name -> party.IDCard
	33,  // 43: party.ProfileAdditionalInfo.driving_license:type_name -> party.DrivingLicense
	34,  // 44: party.ProfileAdditionalInfo.driver_background:type_name -> party.DriverBackground
	35,  // 45: party.ProfileAdditionalInfo.residence_card:type_name -> party.ResidenceCard
	36,  // 46: party.ProfileAdditionalInfo.bank_account:type_name -> party.BankAccount
	37,  // 47: party.ProfileAdditionalInfo.address:type_name -> party.Address
	38,  // 48: party.ProfileAdditionalInfo.mot:type_name -> party.Mot
	47,  // 49: party.ProfileAdditionalInfo.insurance_certificate:type_name -> party.InsuranceCertificate
	48,  // 50: party.ProfileAdditionalInfo.profile_picture:type_name -> party.ProfilePicture
	51,  // 51: party.GetProfileAdditionalInfoStatusResponse.items:type_name -> party.GetProfileAdditionalInfoStatusResponseItem
	3,   // 52: party.GetProfileAdditionalInfoStatusResponseItem.type:type_name -> party.AdditionalInfoType
	0,   // 53: party.GetProfileAdditionalInfoStatusResponseItem.status:type_name -> party.ProfileAdditionalInfoStatus
	3,   // 54: party.UpdateProfileAdditionalInfoStatusRequest.type:type_name -> party.AdditionalInfoType
	1,   // 55: party.UpdateProfileAdditionalInfoStatusRequest.status:type_name -> party.UpdateProfileAdditionalInfoStatus
	2,   // 56: party.GetProfileStatusResponse.status:type_name -> party.ProfileStatus
	11,  // 57: party.Document.info_type:type_name -> party.DocumentInfoType
	12,  // 58: party.Document.doc_type:type_name -> party.DocumentType
	11,  // 59: party.DocumentInfo.info_type:type_name -> party.DocumentInfoType
	12,  // 60: party.DocumentInfo.doc_type:type_name -> party.DocumentType
	56,  // 61: party.UploadDocumentRequest.document:type_name -> party.Document
	11,  // 62: party.GetDocumentsOfUserRequest.type:type_name -> party.DocumentInfoType
	13,  // 63: party.GetDocumentsOfUserRequest.data_type:type_name -> party.DocumentDataType
	57,  // 64: party.GetDocumentsOfUserResponse.documents:type_name -> party.DocumentInfo
	11,  // 65: party.DirectDownloadResponse.info_type:type_name -> party.DocumentInfoType
	12,  // 66: party.DirectDownloadResponse.doc_type:type_name -> party.DocumentType
	72,  // 67: party.GetUserAddressResponse.address:type_name -> party.UserAddress
	72,  // 68: party.UpdateUserAddressRequest.address:type_name -> party.UserAddress
	14,  // 69: party.UpdateUserAccountRequest.payment_method:type_name -> party.PaymentMethod
	83,  // 70: party.GetUserAccountResponse.profile:type_name -> party.UserProfile
	83,  // 71: party.FindUserAccountsResponse.profiles:type_name -> party.UserProfile
	14,  // 72: party.UserProfile.payment_method:type_name -> party.PaymentMethod
	25,  // 73: party.UserProfile.authorized_claims:type_name -> party.AuthorizedClaim
	90,  // 74: party.GetUserCardResponse.cards:type_name -> party.UserCard
	15,  // 75: party.GetCourierUserStatusResponse.status:type_name -> party.UserStatus
	15,  // 76: party.UpdateCourierUserStatusRequest.status:type_name -> party.UserStatus
	15,  // 77: party.GetClientUserStatusResponse.status:type_name -> party.UserStatus
	15,  // 78: party.UpdateClientUserStatusRequest.status:type_name -> party.UserStatus
	15,  // 79: party.UpdateCourierUserStatusByTokenRequest.status:type_name -> party.UserStatus
	15,  // 80: party.UpdateClientUserStatusByTokenRequest.status:type_name -> party.UserStatus
	106, // 81: party.GetRegistrationStatResponse.items:type_name -> party.GetRegistrationStatItem
	116, // 82: party.ServiceGetCourierRegistrationRequest.pagination:type_name -> party.Pagination
	114, // 83: party.GetCourierRegistrationResponse.items:type_name -> party.CourierProfileAndStatus
	116, // 84: party.ServiceGetClientRegistrationRequest.pagination:type_name -> party.Pagination
	83,  // 85: party.GetClientRegistrationResponse.profiles:type_name -> party.UserProfile
	11,  // 86: party.ServiceGetDocumentsOfUserRequest.type:type_name -> party.DocumentInfoType
	3,   // 87: party.ServiceGetProfileAdditionalInfoRequest.type:type_name -> party.AdditionalInfoType
	15,  // 88: party.ServiceUpdateProfileStatusRequest.user_status:type_name -> party.UserStatus
	115, // 89: party.ServiceUpdateProfileStatusRequest.status_items:type_name -> party.ProfileAdditionalInfoStatusItem
	24,  // 90: party.CourierProfileAndStatus.profile:type_name -> party.CourierProfile
	15,  // 91: party.CourierProfileAndStatus.user_status:type_name -> party.UserStatus
	115, // 92: party.CourierProfileAndStatus.status_items:type_name -> party.ProfileAdditionalInfoStatusItem
	3,   // 93: party.ProfileAdditionalInfoStatusItem.type:type_name -> party.AdditionalInfoType
	0,   // 94: party.ProfileAdditionalInfoStatusItem.status:type_name -> party.ProfileAdditionalInfoStatus
	16,  // 95: party.Pagination.sort_type:type_name -> party.SortType
	17,  // 96: party.FindAccountRequest.type:type_name -> party.UserType
	119, // 97: party.FindAccountResponse.users:type_name -> party.Account
	17,  // 98: party.Account.type:type_name -> party.UserType
	122, // 99: party.Account.claims:type_name -> party.Claim
	17,  // 100: party.RegisterClaimRequest.type:type_name -> party.UserType
	10,  // 101: party.RegisterClaimRequest.claim:type_name -> party.ClaimType
	10,  // 102: party.Claim.claim_type:type_name -> party.ClaimType
	3,   // 103: party.InterServiceGetProfileAdditionalInfoRequest.type:type_name -> party.AdditionalInfoType
	32,  // 104: party.InterServiceUpdateProfileAdditionalInfoRequest.id_card:type_name -> party.IDCard
	33,  // 105: party.InterServiceUpdateProfileAdditionalInfoRequest.driving_license:type_name -> party.DrivingLicense
	34,  // 106: party.InterServiceUpdateProfileAdditionalInfoRequest.driver_background:type_name -> party.DriverBackground
	35,  // 107: party.InterServiceUpdateProfileAdditionalInfoRequest.residence_card:type_name -> party.ResidenceCard
	36,  // 108: party.InterServiceUpdateProfileAdditionalInfoRequest.bank_account:type_name -> party.BankAccount
	37,  // 109: party.InterServiceUpdateProfileAdditionalInfoRequest.address:type_name -> party.Address
	41,  // 110: party.InterServiceUpdateProfileAdditionalInfoRequest.mot:type_name -> party.MotConfirm
	11,  // 111: party.InterServiceGetDocumentsOfUserRequest.type:type_name -> party.DocumentInfoType
	13,  // 112: party.InterServiceGetDocumentsOfUserRequest.data_type:type_name -> party.DocumentDataType
	3,   // 113: party.OpenGetProfileAdditionalInfoRequest.type:type_name -> party.AdditionalInfoType
	11,  // 114: party.OpenGetDocumentsOfUserRequest.type:type_name -> party.DocumentInfoType
	13,  // 115: party.OpenGetDocumentsOfUserRequest.data_type:type_name -> party.DocumentDataType
	24,  // 116: party.OpenGetCourierPublicInfoResponse.profile:type_name -> party.CourierProfile
	48,  // 117: party.OpenGetCourierPublicInfoResponse.profile_picture:type_name -> party.ProfilePicture
	26,  // 118: party.CourierAccountService.CreateCourierAccount:input_type -> party.CreateCourierAccountRequest
	20,  // 119: party.CourierAccountService.GetCourierAccount:input_type -> party.GetCourierAccountRequest
	22,  // 120: party.CourierAccountService.FindCourierAccounts:input_type -> party.FindCourierAccountsRequest
	28,  // 121: party.CourierAccountService.UpdateCourierAccount:input_type -> party.UpdateCourierAccountRequest
	39,  // 122: party.CourierAccountService.UpdateProfileAdditionalInfo:input_type -> party.UpdateProfileAdditionalInfoRequest
	42,  // 123: party.CourierAccountService.DeleteProfileAdditionalInfo:input_type -> party.DeleteProfileAdditionalInfoRequest
	44,  // 124: party.CourierAccountService.GetProfileAdditionalInfo:input_type -> party.GetProfileAdditionalInfoRequest
	49,  // 125: party.CourierAccountService.GetProfileAdditionalInfoStatus:input_type -> party.GetProfileAdditionalInfoStatusRequest
	52,  // 126: party.CourierAccountService.UpdateProfileAdditionalInfoStatus:input_type -> party.UpdateProfileAdditionalInfoStatusRequest
	54,  // 127: party.CourierAccountService.GetProfileStatus:input_type -> party.GetProfileStatusRequest
	18,  // 128: party.CourierAccountService.SearchMot:input_type -> party.SearchMotRequest
	30,  // 129: party.CourierAccountService.UpdateCourierPhoneNumber:input_type -> party.UpdateCourierPhoneNumberRequest
	58,  // 130: party.DocumentService.Upload:input_type -> party.UploadDocumentRequest
	60,  // 131: party.DocumentService.GetDocumentsOfUser:input_type -> party.GetDocumentsOfUserRequest
	62,  // 132: party.DocumentService.GetDocument:input_type -> party.GetDocumentRequest
	64,  // 133: party.DocumentService.Download:input_type -> party.DownloadRequest
	66,  // 134: party.DocumentService.DirectDownload:input_type -> party.DirectDownloadRequest
	73,  // 135: party.UserAccountService.CreateUserAccount:input_type -> party.CreateUserAccountRequest
	79,  // 136: party.UserAccountService.GetUserAccount:input_type -> party.GetUserAccountRequest
	81,  // 137: party.UserAccountService.FindUserAccounts:input_type -> party.FindUserAccountsRequest
	75,  // 138: party.UserAccountService.UpdateUserAccount:input_type -> party.UpdateUserAccountRequest
	84,  // 139: party.UserAccountService.UpdateUserCard:input_type -> party.UpdateUserCardRequest
	88,  // 140: party.UserAccountService.DeleteUserCard:input_type -> party.DeleteUserCardRequest
	86,  // 141: party.UserAccountService.GetUserCard:input_type -> party.GetUserCardRequest
	77,  // 142: party.UserAccountService.UpdateUserPhoneNumber:input_type -> party.UpdateUserPhoneNumberRequest
	68,  // 143: party.UserAccountService.GetUserAddress:input_type -> party.GetUserAddressRequest
	70,  // 144: party.UserAccountService.UpdateUserAddress:input_type -> party.UpdateUserAddressRequest
	91,  // 145: party.UserStatusService.GetCourierUserStatus:input_type -> party.GetCourierUserStatusRequest
	93,  // 146: party.UserStatusService.UpdateCourierUserStatus:input_type -> party.UpdateCourierUserStatusRequest
	95,  // 147: party.UserStatusService.GetClientUserStatus:input_type -> party.GetClientUserStatusRequest
	97,  // 148: party.UserStatusService.UpdateClientUserStatus:input_type -> party.UpdateClientUserStatusRequest
	99,  // 149: party.UserStatusByTokenService.GetCourierUserStatusByToken:input_type -> party.GetCourierUserStatusByTokenRequest
	100, // 150: party.UserStatusByTokenService.UpdateCourierUserStatusByToken:input_type -> party.UpdateCourierUserStatusByTokenRequest
	101, // 151: party.UserStatusByTokenService.GetClientUserStatusByToken:input_type -> party.GetClientUserStatusByTokenRequest
	102, // 152: party.UserStatusByTokenService.UpdateClientUserStatusByToken:input_type -> party.UpdateClientUserStatusByTokenRequest
	103, // 153: party.PartyAdminService.ServiceGetCourierRegistrationStat:input_type -> party.ServiceGetCourierRegistrationStatRequest
	104, // 154: party.PartyAdminService.ServiceGetClientRegistrationStat:input_type -> party.ServiceGetClientRegistrationStatRequest
	107, // 155: party.PartyAdminService.ServiceGetCourierRegistration:input_type -> party.ServiceGetCourierRegistrationRequest
	109, // 156: party.PartyAdminService.ServiceGetClientRegistration:input_type -> party.ServiceGetClientRegistrationRequest
	111, // 157: party.PartyAdminService.ServiceGetDocumentsOfUser:input_type -> party.ServiceGetDocumentsOfUserRequest
	112, // 158: party.PartyAdminService.ServiceGetProfileAdditionalInfo:input_type -> party.ServiceGetProfileAdditionalInfoRequest
	113, // 159: party.PartyAdminService.ServiceUpdateProfileStatus:input_type -> party.ServiceUpdateProfileStatusRequest
	117, // 160: party.UaaService.FindAccount:input_type -> party.FindAccountRequest
	120, // 161: party.UaaService.RegisterClaim:input_type -> party.RegisterClaimRequest
	123, // 162: party.InterService.InterServiceGetProfileAdditionalInfo:input_type -> party.InterServiceGetProfileAdditionalInfoRequest
	124, // 163: party.InterService.InterServiceUpdateProfileAdditionalInfo:input_type -> party.InterServiceUpdateProfileAdditionalInfoRequest
	125, // 164: party.InterService.InterServiceFindCourierAccounts:input_type -> party.InterServiceFindCourierAccountsRequest
	126, // 165: party.InterService.InterServiceGetDocumentsOfUser:input_type -> party.InterServiceGetDocumentsOfUserRequest
	127, // 166: party.InterService.OpenGetCourierAccount:input_type -> party.OpenGetCourierAccountRequest
	128, // 167: party.InterService.OpenGetProfileAdditionalInfo:input_type -> party.OpenGetProfileAdditionalInfoRequest
	129, // 168: party.InterService.OpenGetDocumentsOfUser:input_type -> party.OpenGetDocumentsOfUserRequest
	130, // 169: party.InterService.OpenGetUserAccount:input_type -> party.OpenGetUserAccountRequest
	131, // 170: party.InterService.OpenGetCourierPublicInfo:input_type -> party.OpenGetCourierPublicInfoRequest
	27,  // 171: party.CourierAccountService.CreateCourierAccount:output_type -> party.CreateCourierAccountResponse
	21,  // 172: party.CourierAccountService.GetCourierAccount:output_type -> party.GetCourierAccountResponse
	23,  // 173: party.CourierAccountService.FindCourierAccounts:output_type -> party.FindCourierAccountsResponse
	29,  // 174: party.CourierAccountService.UpdateCourierAccount:output_type -> party.UpdateCourierAccountResponse
	40,  // 175: party.CourierAccountService.UpdateProfileAdditionalInfo:output_type -> party.UpdateProfileAdditionalInfoResponse
	43,  // 176: party.CourierAccountService.DeleteProfileAdditionalInfo:output_type -> party.DeleteProfileAdditionalInfoResponse
	45,  // 177: party.CourierAccountService.GetProfileAdditionalInfo:output_type -> party.GetProfileAdditionalInfoResponse
	50,  // 178: party.CourierAccountService.GetProfileAdditionalInfoStatus:output_type -> party.GetProfileAdditionalInfoStatusResponse
	53,  // 179: party.CourierAccountService.UpdateProfileAdditionalInfoStatus:output_type -> party.UpdateProfileAdditionalInfoStatusResponse
	55,  // 180: party.CourierAccountService.GetProfileStatus:output_type -> party.GetProfileStatusResponse
	19,  // 181: party.CourierAccountService.SearchMot:output_type -> party.SearchMotResponse
	31,  // 182: party.CourierAccountService.UpdateCourierPhoneNumber:output_type -> party.UpdateCourierPhoneNumberResponse
	59,  // 183: party.DocumentService.Upload:output_type -> party.UploadDocumentResponse
	61,  // 184: party.DocumentService.GetDocumentsOfUser:output_type -> party.GetDocumentsOfUserResponse
	63,  // 185: party.DocumentService.GetDocument:output_type -> party.GetDocumentResponse
	65,  // 186: party.DocumentService.Download:output_type -> party.DownloadResponse
	67,  // 187: party.DocumentService.DirectDownload:output_type -> party.DirectDownloadResponse
	74,  // 188: party.UserAccountService.CreateUserAccount:output_type -> party.CreateUserAccountResponse
	80,  // 189: party.UserAccountService.GetUserAccount:output_type -> party.GetUserAccountResponse
	82,  // 190: party.UserAccountService.FindUserAccounts:output_type -> party.FindUserAccountsResponse
	76,  // 191: party.UserAccountService.UpdateUserAccount:output_type -> party.UpdateUserAccountResponse
	85,  // 192: party.UserAccountService.UpdateUserCard:output_type -> party.UpdateUserCardResponse
	89,  // 193: party.UserAccountService.DeleteUserCard:output_type -> party.DeleteUserCardResponse
	87,  // 194: party.UserAccountService.GetUserCard:output_type -> party.GetUserCardResponse
	78,  // 195: party.UserAccountService.UpdateUserPhoneNumber:output_type -> party.UpdateUserPhoneNumberResponse
	69,  // 196: party.UserAccountService.GetUserAddress:output_type -> party.GetUserAddressResponse
	71,  // 197: party.UserAccountService.UpdateUserAddress:output_type -> party.UpdateUserAddressResponse
	92,  // 198: party.UserStatusService.GetCourierUserStatus:output_type -> party.GetCourierUserStatusResponse
	94,  // 199: party.UserStatusService.UpdateCourierUserStatus:output_type -> party.UpdateCourierUserStatusResponse
	96,  // 200: party.UserStatusService.GetClientUserStatus:output_type -> party.GetClientUserStatusResponse
	98,  // 201: party.UserStatusService.UpdateClientUserStatus:output_type -> party.UpdateClientUserStatusResponse
	92,  // 202: party.UserStatusByTokenService.GetCourierUserStatusByToken:output_type -> party.GetCourierUserStatusResponse
	94,  // 203: party.UserStatusByTokenService.UpdateCourierUserStatusByToken:output_type -> party.UpdateCourierUserStatusResponse
	96,  // 204: party.UserStatusByTokenService.GetClientUserStatusByToken:output_type -> party.GetClientUserStatusResponse
	98,  // 205: party.UserStatusByTokenService.UpdateClientUserStatusByToken:output_type -> party.UpdateClientUserStatusResponse
	105, // 206: party.PartyAdminService.ServiceGetCourierRegistrationStat:output_type -> party.GetRegistrationStatResponse
	105, // 207: party.PartyAdminService.ServiceGetClientRegistrationStat:output_type -> party.GetRegistrationStatResponse
	108, // 208: party.PartyAdminService.ServiceGetCourierRegistration:output_type -> party.GetCourierRegistrationResponse
	110, // 209: party.PartyAdminService.ServiceGetClientRegistration:output_type -> party.GetClientRegistrationResponse
	61,  // 210: party.PartyAdminService.ServiceGetDocumentsOfUser:output_type -> party.GetDocumentsOfUserResponse
	45,  // 211: party.PartyAdminService.ServiceGetProfileAdditionalInfo:output_type -> party.GetProfileAdditionalInfoResponse
	53,  // 212: party.PartyAdminService.ServiceUpdateProfileStatus:output_type -> party.UpdateProfileAdditionalInfoStatusResponse
	118, // 213: party.UaaService.FindAccount:output_type -> party.FindAccountResponse
	121, // 214: party.UaaService.RegisterClaim:output_type -> party.RegisterClaimResponse
	45,  // 215: party.InterService.InterServiceGetProfileAdditionalInfo:output_type -> party.GetProfileAdditionalInfoResponse
	40,  // 216: party.InterService.InterServiceUpdateProfileAdditionalInfo:output_type -> party.UpdateProfileAdditionalInfoResponse
	23,  // 217: party.InterService.InterServiceFindCourierAccounts:output_type -> party.FindCourierAccountsResponse
	61,  // 218: party.InterService.InterServiceGetDocumentsOfUser:output_type -> party.GetDocumentsOfUserResponse
	21,  // 219: party.InterService.OpenGetCourierAccount:output_type -> party.GetCourierAccountResponse
	45,  // 220: party.InterService.OpenGetProfileAdditionalInfo:output_type -> party.GetProfileAdditionalInfoResponse
	61,  // 221: party.InterService.OpenGetDocumentsOfUser:output_type -> party.GetDocumentsOfUserResponse
	80,  // 222: party.InterService.OpenGetUserAccount:output_type -> party.GetUserAccountResponse
	132, // 223: party.InterService.OpenGetCourierPublicInfo:output_type -> party.OpenGetCourierPublicInfoResponse
	171, // [171:224] is the sub-list for method output_type
	118, // [118:171] is the sub-list for method input_type
	118, // [118:118] is the sub-list for extension type_name
	118, // [118:118] is the sub-list for extension extendee
	0,   // [0:118] is the sub-list for field type_name
}

func init() { file_party_proto_init() }
func file_party_proto_init() {
	if File_party_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_party_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCourierAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCourierAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourierProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizedClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCourierAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCourierAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCourierAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCourierAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCourierPhoneNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCourierPhoneNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrivingLicense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverBackground); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResidenceCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProfileAdditionalInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProfileAdditionalInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MotConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProfileAdditionalInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProfileAdditionalInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileAdditionalInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileAdditionalInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileAdditionalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsuranceCertificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfilePicture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileAdditionalInfoStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileAdditionalInfoStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileAdditionalInfoStatusResponseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProfileAdditionalInfoStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProfileAdditionalInfoStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocumentsOfUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocumentsOfUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectDownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectDownloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserPhoneNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserPhoneNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierUserStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierUserStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCourierUserStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCourierUserStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientUserStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientUserStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClientUserStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClientUserStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierUserStatusByTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCourierUserStatusByTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientUserStatusByTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClientUserStatusByTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGetCourierRegistrationStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGetClientRegistrationStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegistrationStatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegistrationStatItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGetCourierRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierRegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGetClientRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientRegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGetDocumentsOfUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGetProfileAdditionalInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceUpdateProfileStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourierProfileAndStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileAdditionalInfoStatusItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterClaimRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterClaimResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Claim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterServiceGetProfileAdditionalInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterServiceUpdateProfileAdditionalInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterServiceFindCourierAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterServiceGetDocumentsOfUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenGetCourierAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenGetProfileAdditionalInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenGetDocumentsOfUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenGetUserAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenGetCourierPublicInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_party_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenGetCourierPublicInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_party_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*FindCourierAccountsRequest_UserId)(nil),
		(*FindCourierAccountsRequest_PhoneNumber)(nil),
		(*FindCourierAccountsRequest_Email)(nil),
		(*FindCourierAccountsRequest_Name)(nil),
	}
	file_party_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*UpdateProfileAdditionalInfoRequest_IdCard)(nil),
		(*UpdateProfileAdditionalInfoRequest_DrivingLicense)(nil),
		(*UpdateProfileAdditionalInfoRequest_DriverBackground)(nil),
		(*UpdateProfileAdditionalInfoRequest_ResidenceCard)(nil),
		(*UpdateProfileAdditionalInfoRequest_BankAccount)(nil),
		(*UpdateProfileAdditionalInfoRequest_Address)(nil),
		(*UpdateProfileAdditionalInfoRequest_Mot)(nil),
	}
	file_party_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*GetProfileAdditionalInfoResponse_IdCard)(nil),
		(*GetProfileAdditionalInfoResponse_DrivingLicense)(nil),
		(*GetProfileAdditionalInfoResponse_DriverBackground)(nil),
		(*GetProfileAdditionalInfoResponse_ResidenceCard)(nil),
		(*GetProfileAdditionalInfoResponse_BankAccount)(nil),
		(*GetProfileAdditionalInfoResponse_Address)(nil),
		(*GetProfileAdditionalInfoResponse_Mot)(nil),
		(*GetProfileAdditionalInfoResponse_InsuranceCertificate)(nil),
		(*GetProfileAdditionalInfoResponse_ProfilePicture)(nil),
		(*GetProfileAdditionalInfoResponse_ProfileAdditionalInfo)(nil),
	}
	file_party_proto_msgTypes[63].OneofWrappers = []interface{}{
		(*FindUserAccountsRequest_UserId)(nil),
		(*FindUserAccountsRequest_PhoneNumber)(nil),
		(*FindUserAccountsRequest_Email)(nil),
		(*FindUserAccountsRequest_Name)(nil),
	}
	file_party_proto_msgTypes[89].OneofWrappers = []interface{}{
		(*ServiceGetCourierRegistrationRequest_UserId)(nil),
		(*ServiceGetCourierRegistrationRequest_PhoneNumber)(nil),
		(*ServiceGetCourierRegistrationRequest_Email)(nil),
		(*ServiceGetCourierRegistrationRequest_Name)(nil),
	}
	file_party_proto_msgTypes[91].OneofWrappers = []interface{}{
		(*ServiceGetClientRegistrationRequest_UserId)(nil),
		(*ServiceGetClientRegistrationRequest_PhoneNumber)(nil),
		(*ServiceGetClientRegistrationRequest_Email)(nil),
		(*ServiceGetClientRegistrationRequest_Name)(nil),
	}
	file_party_proto_msgTypes[99].OneofWrappers = []interface{}{
		(*FindAccountRequest_UserId)(nil),
		(*FindAccountRequest_PhoneNumber)(nil),
		(*FindAccountRequest_Email)(nil),
		(*FindAccountRequest_FacebookId)(nil),
		(*FindAccountRequest_GoogleId)(nil),
		(*FindAccountRequest_Username)(nil),
	}
	file_party_proto_msgTypes[106].OneofWrappers = []interface{}{
		(*InterServiceUpdateProfileAdditionalInfoRequest_IdCard)(nil),
		(*InterServiceUpdateProfileAdditionalInfoRequest_DrivingLicense)(nil),
		(*InterServiceUpdateProfileAdditionalInfoRequest_DriverBackground)(nil),
		(*InterServiceUpdateProfileAdditionalInfoRequest_ResidenceCard)(nil),
		(*InterServiceUpdateProfileAdditionalInfoRequest_BankAccount)(nil),
		(*InterServiceUpdateProfileAdditionalInfoRequest_Address)(nil),
		(*InterServiceUpdateProfileAdditionalInfoRequest_Mot)(nil),
	}
	file_party_proto_msgTypes[107].OneofWrappers = []interface{}{
		(*InterServiceFindCourierAccountsRequest_UserId)(nil),
		(*InterServiceFindCourierAccountsRequest_PhoneNumber)(nil),
		(*InterServiceFindCourierAccountsRequest_Email)(nil),
		(*InterServiceFindCourierAccountsRequest_Name)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_party_proto_rawDesc,
			NumEnums:      18,
			NumMessages:   115,
			NumExtensions: 0,
			NumServices:   8,
		},
		GoTypes:           file_party_proto_goTypes,
		DependencyIndexes: file_party_proto_depIdxs,
		EnumInfos:         file_party_proto_enumTypes,
		MessageInfos:      file_party_proto_msgTypes,
	}.Build()
	File_party_proto = out.File
	file_party_proto_rawDesc = nil
	file_party_proto_goTypes = nil
	file_party_proto_depIdxs = nil
}
