// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: rating.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CourierRatingPositiveFeedback int32

const (
	CourierRatingPositiveFeedback_UNKNOWN_COURIER_RATING_POSITIVE_FEEDBACK              CourierRatingPositiveFeedback = 0
	CourierRatingPositiveFeedback_COURIER_RATING_POSITIVE_FEEDBACK_GOOD_BEHAVIOUR       CourierRatingPositiveFeedback = 1
	CourierRatingPositiveFeedback_COURIER_RATING_POSITIVE_FEEDBACK_DRIVE_CAREFULLY      CourierRatingPositiveFeedback = 2
	CourierRatingPositiveFeedback_COURIER_RATING_POSITIVE_FEEDBACK_FAMILIAR_WITH_ROUTES CourierRatingPositiveFeedback = 3
)

// Enum value maps for CourierRatingPositiveFeedback.
var (
	CourierRatingPositiveFeedback_name = map[int32]string{
		0: "UNKNOWN_COURIER_RATING_POSITIVE_FEEDBACK",
		1: "COURIER_RATING_POSITIVE_FEEDBACK_GOOD_BEHAVIOUR",
		2: "COURIER_RATING_POSITIVE_FEEDBACK_DRIVE_CAREFULLY",
		3: "COURIER_RATING_POSITIVE_FEEDBACK_FAMILIAR_WITH_ROUTES",
	}
	CourierRatingPositiveFeedback_value = map[string]int32{
		"UNKNOWN_COURIER_RATING_POSITIVE_FEEDBACK":              0,
		"COURIER_RATING_POSITIVE_FEEDBACK_GOOD_BEHAVIOUR":       1,
		"COURIER_RATING_POSITIVE_FEEDBACK_DRIVE_CAREFULLY":      2,
		"COURIER_RATING_POSITIVE_FEEDBACK_FAMILIAR_WITH_ROUTES": 3,
	}
)

func (x CourierRatingPositiveFeedback) Enum() *CourierRatingPositiveFeedback {
	p := new(CourierRatingPositiveFeedback)
	*p = x
	return p
}

func (x CourierRatingPositiveFeedback) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CourierRatingPositiveFeedback) Descriptor() protoreflect.EnumDescriptor {
	return file_rating_proto_enumTypes[0].Descriptor()
}

func (CourierRatingPositiveFeedback) Type() protoreflect.EnumType {
	return &file_rating_proto_enumTypes[0]
}

func (x CourierRatingPositiveFeedback) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CourierRatingPositiveFeedback.Descriptor instead.
func (CourierRatingPositiveFeedback) EnumDescriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{0}
}

type CourierRatingNegativeFeedback int32

const (
	CourierRatingNegativeFeedback_UNKNOWN_COURIER_RATING_NEGATIVE_FEEDBACK                CourierRatingNegativeFeedback = 0
	CourierRatingNegativeFeedback_COURIER_RATING_NEGATIVE_FEEDBACK_BEHAVE_BADLY           CourierRatingNegativeFeedback = 1
	CourierRatingNegativeFeedback_COURIER_RATING_NEGATIVE_FEEDBACK_DRIVE_CARELESSLY       CourierRatingNegativeFeedback = 2
	CourierRatingNegativeFeedback_COURIER_RATING_NEGATIVE_FEEDBACK_UNFAMILIAR_WITH_ROUTES CourierRatingNegativeFeedback = 3
	CourierRatingNegativeFeedback_COURIER_RATING_NEGATIVE_FEEDBACK_REQUEST_FOR_EXTRA_PAY  CourierRatingNegativeFeedback = 4
)

// Enum value maps for CourierRatingNegativeFeedback.
var (
	CourierRatingNegativeFeedback_name = map[int32]string{
		0: "UNKNOWN_COURIER_RATING_NEGATIVE_FEEDBACK",
		1: "COURIER_RATING_NEGATIVE_FEEDBACK_BEHAVE_BADLY",
		2: "COURIER_RATING_NEGATIVE_FEEDBACK_DRIVE_CARELESSLY",
		3: "COURIER_RATING_NEGATIVE_FEEDBACK_UNFAMILIAR_WITH_ROUTES",
		4: "COURIER_RATING_NEGATIVE_FEEDBACK_REQUEST_FOR_EXTRA_PAY",
	}
	CourierRatingNegativeFeedback_value = map[string]int32{
		"UNKNOWN_COURIER_RATING_NEGATIVE_FEEDBACK":                0,
		"COURIER_RATING_NEGATIVE_FEEDBACK_BEHAVE_BADLY":           1,
		"COURIER_RATING_NEGATIVE_FEEDBACK_DRIVE_CARELESSLY":       2,
		"COURIER_RATING_NEGATIVE_FEEDBACK_UNFAMILIAR_WITH_ROUTES": 3,
		"COURIER_RATING_NEGATIVE_FEEDBACK_REQUEST_FOR_EXTRA_PAY":  4,
	}
)

func (x CourierRatingNegativeFeedback) Enum() *CourierRatingNegativeFeedback {
	p := new(CourierRatingNegativeFeedback)
	*p = x
	return p
}

func (x CourierRatingNegativeFeedback) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CourierRatingNegativeFeedback) Descriptor() protoreflect.EnumDescriptor {
	return file_rating_proto_enumTypes[1].Descriptor()
}

func (CourierRatingNegativeFeedback) Type() protoreflect.EnumType {
	return &file_rating_proto_enumTypes[1]
}

func (x CourierRatingNegativeFeedback) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CourierRatingNegativeFeedback.Descriptor instead.
func (CourierRatingNegativeFeedback) EnumDescriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{1}
}

type ClientRatingPositiveFeedback int32

const (
	ClientRatingPositiveFeedback_UNKNOWN_CLIENT_RATING_POSITIVE_FEEDBACK        ClientRatingPositiveFeedback = 0
	ClientRatingPositiveFeedback_CLIENT_RATING_POSITIVE_FEEDBACK_GOOD_BEHAVIOUR ClientRatingPositiveFeedback = 1
)

// Enum value maps for ClientRatingPositiveFeedback.
var (
	ClientRatingPositiveFeedback_name = map[int32]string{
		0: "UNKNOWN_CLIENT_RATING_POSITIVE_FEEDBACK",
		1: "CLIENT_RATING_POSITIVE_FEEDBACK_GOOD_BEHAVIOUR",
	}
	ClientRatingPositiveFeedback_value = map[string]int32{
		"UNKNOWN_CLIENT_RATING_POSITIVE_FEEDBACK":        0,
		"CLIENT_RATING_POSITIVE_FEEDBACK_GOOD_BEHAVIOUR": 1,
	}
)

func (x ClientRatingPositiveFeedback) Enum() *ClientRatingPositiveFeedback {
	p := new(ClientRatingPositiveFeedback)
	*p = x
	return p
}

func (x ClientRatingPositiveFeedback) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientRatingPositiveFeedback) Descriptor() protoreflect.EnumDescriptor {
	return file_rating_proto_enumTypes[2].Descriptor()
}

func (ClientRatingPositiveFeedback) Type() protoreflect.EnumType {
	return &file_rating_proto_enumTypes[2]
}

func (x ClientRatingPositiveFeedback) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientRatingPositiveFeedback.Descriptor instead.
func (ClientRatingPositiveFeedback) EnumDescriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{2}
}

type ClientRatingNegativeFeedback int32

const (
	ClientRatingNegativeFeedback_UNKNOWN_CLIENT_RATING_NEGATIVE_FEEDBACK      ClientRatingNegativeFeedback = 0
	ClientRatingNegativeFeedback_CLIENT_RATING_NEGATIVE_FEEDBACK_BEHAVE_BADLY ClientRatingNegativeFeedback = 1
	ClientRatingNegativeFeedback_CLIENT_RATING_NEGATIVE_TALKING_WITH_PHONE    ClientRatingNegativeFeedback = 2
	ClientRatingNegativeFeedback_CLIENT_RATING_NEGATIVE_NOT_PAYED             ClientRatingNegativeFeedback = 3
)

// Enum value maps for ClientRatingNegativeFeedback.
var (
	ClientRatingNegativeFeedback_name = map[int32]string{
		0: "UNKNOWN_CLIENT_RATING_NEGATIVE_FEEDBACK",
		1: "CLIENT_RATING_NEGATIVE_FEEDBACK_BEHAVE_BADLY",
		2: "CLIENT_RATING_NEGATIVE_TALKING_WITH_PHONE",
		3: "CLIENT_RATING_NEGATIVE_NOT_PAYED",
	}
	ClientRatingNegativeFeedback_value = map[string]int32{
		"UNKNOWN_CLIENT_RATING_NEGATIVE_FEEDBACK":      0,
		"CLIENT_RATING_NEGATIVE_FEEDBACK_BEHAVE_BADLY": 1,
		"CLIENT_RATING_NEGATIVE_TALKING_WITH_PHONE":    2,
		"CLIENT_RATING_NEGATIVE_NOT_PAYED":             3,
	}
)

func (x ClientRatingNegativeFeedback) Enum() *ClientRatingNegativeFeedback {
	p := new(ClientRatingNegativeFeedback)
	*p = x
	return p
}

func (x ClientRatingNegativeFeedback) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientRatingNegativeFeedback) Descriptor() protoreflect.EnumDescriptor {
	return file_rating_proto_enumTypes[3].Descriptor()
}

func (ClientRatingNegativeFeedback) Type() protoreflect.EnumType {
	return &file_rating_proto_enumTypes[3]
}

func (x ClientRatingNegativeFeedback) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientRatingNegativeFeedback.Descriptor instead.
func (ClientRatingNegativeFeedback) EnumDescriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{3}
}

type RateValue int32

const (
	RateValue_UNKNOWN_RATE_VALUE RateValue = 0
	RateValue_RATE_VALUE_1       RateValue = 1
	RateValue_RATE_VALUE_2       RateValue = 2
	RateValue_RATE_VALUE_3       RateValue = 3
	RateValue_RATE_VALUE_4       RateValue = 4
	RateValue_RATE_VALUE_5       RateValue = 5
)

// Enum value maps for RateValue.
var (
	RateValue_name = map[int32]string{
		0: "UNKNOWN_RATE_VALUE",
		1: "RATE_VALUE_1",
		2: "RATE_VALUE_2",
		3: "RATE_VALUE_3",
		4: "RATE_VALUE_4",
		5: "RATE_VALUE_5",
	}
	RateValue_value = map[string]int32{
		"UNKNOWN_RATE_VALUE": 0,
		"RATE_VALUE_1":       1,
		"RATE_VALUE_2":       2,
		"RATE_VALUE_3":       3,
		"RATE_VALUE_4":       4,
		"RATE_VALUE_5":       5,
	}
)

func (x RateValue) Enum() *RateValue {
	p := new(RateValue)
	*p = x
	return p
}

func (x RateValue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RateValue) Descriptor() protoreflect.EnumDescriptor {
	return file_rating_proto_enumTypes[4].Descriptor()
}

func (RateValue) Type() protoreflect.EnumType {
	return &file_rating_proto_enumTypes[4]
}

func (x RateValue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RateValue.Descriptor instead.
func (RateValue) EnumDescriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{4}
}

type CreateCourierRatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// client access token
	// required
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// ride id
	// required
	RideId string `protobuf:"bytes,2,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	// rate details
	// required
	Rating *CourierRating `protobuf:"bytes,3,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *CreateCourierRatingRequest) Reset() {
	*x = CreateCourierRatingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCourierRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCourierRatingRequest) ProtoMessage() {}

func (x *CreateCourierRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCourierRatingRequest.ProtoReflect.Descriptor instead.
func (*CreateCourierRatingRequest) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCourierRatingRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreateCourierRatingRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *CreateCourierRatingRequest) GetRating() *CourierRating {
	if x != nil {
		return x.Rating
	}
	return nil
}

// empty response means success
type CreateCourierRatingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateCourierRatingResponse) Reset() {
	*x = CreateCourierRatingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCourierRatingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCourierRatingResponse) ProtoMessage() {}

func (x *CreateCourierRatingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCourierRatingResponse.ProtoReflect.Descriptor instead.
func (*CreateCourierRatingResponse) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{1}
}

type CourierRating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// required
	Value RateValue `protobuf:"varint,1,opt,name=value,proto3,enum=rating.RateValue" json:"value,omitempty"`
	// custom message or note
	// optional
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// optional
	// array of positive feedbacks
	PositiveFeedbacks []CourierRatingPositiveFeedback `protobuf:"varint,3,rep,packed,name=positive_feedbacks,json=positiveFeedbacks,proto3,enum=rating.CourierRatingPositiveFeedback" json:"positive_feedbacks,omitempty"`
	// optional
	// array of negative feedbacks
	NegativeFeedbacks []CourierRatingNegativeFeedback `protobuf:"varint,4,rep,packed,name=negative_feedbacks,json=negativeFeedbacks,proto3,enum=rating.CourierRatingNegativeFeedback" json:"negative_feedbacks,omitempty"`
}

func (x *CourierRating) Reset() {
	*x = CourierRating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourierRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourierRating) ProtoMessage() {}

func (x *CourierRating) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourierRating.ProtoReflect.Descriptor instead.
func (*CourierRating) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{2}
}

func (x *CourierRating) GetValue() RateValue {
	if x != nil {
		return x.Value
	}
	return RateValue_UNKNOWN_RATE_VALUE
}

func (x *CourierRating) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CourierRating) GetPositiveFeedbacks() []CourierRatingPositiveFeedback {
	if x != nil {
		return x.PositiveFeedbacks
	}
	return nil
}

func (x *CourierRating) GetNegativeFeedbacks() []CourierRatingNegativeFeedback {
	if x != nil {
		return x.NegativeFeedbacks
	}
	return nil
}

type CreateClientRatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// courier access token
	// required
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// ride id
	// required
	RideId string `protobuf:"bytes,2,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	// rate details
	// required
	Rating *ClientRating `protobuf:"bytes,3,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *CreateClientRatingRequest) Reset() {
	*x = CreateClientRatingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClientRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClientRatingRequest) ProtoMessage() {}

func (x *CreateClientRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClientRatingRequest.ProtoReflect.Descriptor instead.
func (*CreateClientRatingRequest) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{3}
}

func (x *CreateClientRatingRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreateClientRatingRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *CreateClientRatingRequest) GetRating() *ClientRating {
	if x != nil {
		return x.Rating
	}
	return nil
}

// empty response means success
type CreateClientRatingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateClientRatingResponse) Reset() {
	*x = CreateClientRatingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClientRatingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClientRatingResponse) ProtoMessage() {}

func (x *CreateClientRatingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClientRatingResponse.ProtoReflect.Descriptor instead.
func (*CreateClientRatingResponse) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{4}
}

type ClientRating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// required
	Value RateValue `protobuf:"varint,1,opt,name=value,proto3,enum=rating.RateValue" json:"value,omitempty"`
	// custom message or note
	// optional
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// optional
	// array of positive feedbacks
	PositiveFeedbacks []ClientRatingPositiveFeedback `protobuf:"varint,3,rep,packed,name=positive_feedbacks,json=positiveFeedbacks,proto3,enum=rating.ClientRatingPositiveFeedback" json:"positive_feedbacks,omitempty"`
	// optional
	// array of negative feedbacks
	NegativeFeedbacks []ClientRatingNegativeFeedback `protobuf:"varint,4,rep,packed,name=negative_feedbacks,json=negativeFeedbacks,proto3,enum=rating.ClientRatingNegativeFeedback" json:"negative_feedbacks,omitempty"`
}

func (x *ClientRating) Reset() {
	*x = ClientRating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientRating) ProtoMessage() {}

func (x *ClientRating) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientRating.ProtoReflect.Descriptor instead.
func (*ClientRating) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{5}
}

func (x *ClientRating) GetValue() RateValue {
	if x != nil {
		return x.Value
	}
	return RateValue_UNKNOWN_RATE_VALUE
}

func (x *ClientRating) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ClientRating) GetPositiveFeedbacks() []ClientRatingPositiveFeedback {
	if x != nil {
		return x.PositiveFeedbacks
	}
	return nil
}

func (x *ClientRating) GetNegativeFeedbacks() []ClientRatingNegativeFeedback {
	if x != nil {
		return x.NegativeFeedbacks
	}
	return nil
}

type GetCourierRatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// token might be for courier or client
	// required
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// required
	CourierId string `protobuf:"bytes,2,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
}

func (x *GetCourierRatingRequest) Reset() {
	*x = GetCourierRatingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierRatingRequest) ProtoMessage() {}

func (x *GetCourierRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierRatingRequest.ProtoReflect.Descriptor instead.
func (*GetCourierRatingRequest) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{6}
}

func (x *GetCourierRatingRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetCourierRatingRequest) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

type GetCourierRatingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// array of rate details
	Rates []*CourierRated `protobuf:"bytes,1,rep,name=rates,proto3" json:"rates,omitempty"`
}

func (x *GetCourierRatingResponse) Reset() {
	*x = GetCourierRatingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierRatingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierRatingResponse) ProtoMessage() {}

func (x *GetCourierRatingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierRatingResponse.ProtoReflect.Descriptor instead.
func (*GetCourierRatingResponse) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{7}
}

func (x *GetCourierRatingResponse) GetRates() []*CourierRated {
	if x != nil {
		return x.Rates
	}
	return nil
}

type CourierRated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// client that rates to the courier
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// unique ride id
	Ride string `protobuf:"bytes,2,opt,name=ride,proto3" json:"ride,omitempty"`
	// rate details
	Rating *CourierRating `protobuf:"bytes,3,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *CourierRated) Reset() {
	*x = CourierRated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourierRated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourierRated) ProtoMessage() {}

func (x *CourierRated) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourierRated.ProtoReflect.Descriptor instead.
func (*CourierRated) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{8}
}

func (x *CourierRated) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CourierRated) GetRide() string {
	if x != nil {
		return x.Ride
	}
	return ""
}

func (x *CourierRated) GetRating() *CourierRating {
	if x != nil {
		return x.Rating
	}
	return nil
}

type GetClientRatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// token might be for courier or client
	// required
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// required
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *GetClientRatingRequest) Reset() {
	*x = GetClientRatingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientRatingRequest) ProtoMessage() {}

func (x *GetClientRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientRatingRequest.ProtoReflect.Descriptor instead.
func (*GetClientRatingRequest) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{9}
}

func (x *GetClientRatingRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetClientRatingRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type GetClientRatingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// array of rate details
	Rates []*ClientRated `protobuf:"bytes,1,rep,name=rates,proto3" json:"rates,omitempty"`
}

func (x *GetClientRatingResponse) Reset() {
	*x = GetClientRatingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientRatingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientRatingResponse) ProtoMessage() {}

func (x *GetClientRatingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientRatingResponse.ProtoReflect.Descriptor instead.
func (*GetClientRatingResponse) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{10}
}

func (x *GetClientRatingResponse) GetRates() []*ClientRated {
	if x != nil {
		return x.Rates
	}
	return nil
}

type ClientRated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// courier that rates
	CourierId string `protobuf:"bytes,1,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
	// unique ride id
	Ride string `protobuf:"bytes,2,opt,name=ride,proto3" json:"ride,omitempty"`
	// rate details
	Rating *ClientRating `protobuf:"bytes,3,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *ClientRated) Reset() {
	*x = ClientRated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientRated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientRated) ProtoMessage() {}

func (x *ClientRated) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientRated.ProtoReflect.Descriptor instead.
func (*ClientRated) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{11}
}

func (x *ClientRated) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

func (x *ClientRated) GetRide() string {
	if x != nil {
		return x.Ride
	}
	return ""
}

func (x *ClientRated) GetRating() *ClientRating {
	if x != nil {
		return x.Rating
	}
	return nil
}

type GetCourierRatingStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// required
	CourierId string `protobuf:"bytes,1,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
}

func (x *GetCourierRatingStatRequest) Reset() {
	*x = GetCourierRatingStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierRatingStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierRatingStatRequest) ProtoMessage() {}

func (x *GetCourierRatingStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierRatingStatRequest.ProtoReflect.Descriptor instead.
func (*GetCourierRatingStatRequest) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{12}
}

func (x *GetCourierRatingStatRequest) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

type GetCourierRatingStatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score *RateScore `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *GetCourierRatingStatResponse) Reset() {
	*x = GetCourierRatingStatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierRatingStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierRatingStatResponse) ProtoMessage() {}

func (x *GetCourierRatingStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierRatingStatResponse.ProtoReflect.Descriptor instead.
func (*GetCourierRatingStatResponse) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{13}
}

func (x *GetCourierRatingStatResponse) GetScore() *RateScore {
	if x != nil {
		return x.Score
	}
	return nil
}

type GetClientRatingStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// required
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *GetClientRatingStatRequest) Reset() {
	*x = GetClientRatingStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientRatingStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientRatingStatRequest) ProtoMessage() {}

func (x *GetClientRatingStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientRatingStatRequest.ProtoReflect.Descriptor instead.
func (*GetClientRatingStatRequest) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{14}
}

func (x *GetClientRatingStatRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type GetClientRatingStatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score *RateScore `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *GetClientRatingStatResponse) Reset() {
	*x = GetClientRatingStatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientRatingStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientRatingStatResponse) ProtoMessage() {}

func (x *GetClientRatingStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientRatingStatResponse.ProtoReflect.Descriptor instead.
func (*GetClientRatingStatResponse) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{15}
}

func (x *GetClientRatingStatResponse) GetScore() *RateScore {
	if x != nil {
		return x.Score
	}
	return nil
}

type GetCourierRatingStatByTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// required
	// access_token of courier
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetCourierRatingStatByTokenRequest) Reset() {
	*x = GetCourierRatingStatByTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierRatingStatByTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierRatingStatByTokenRequest) ProtoMessage() {}

func (x *GetCourierRatingStatByTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierRatingStatByTokenRequest.ProtoReflect.Descriptor instead.
func (*GetCourierRatingStatByTokenRequest) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{16}
}

func (x *GetCourierRatingStatByTokenRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type GetCourierRatingStatByTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourierId string     `protobuf:"bytes,1,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
	Score     *RateScore `protobuf:"bytes,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *GetCourierRatingStatByTokenResponse) Reset() {
	*x = GetCourierRatingStatByTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCourierRatingStatByTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourierRatingStatByTokenResponse) ProtoMessage() {}

func (x *GetCourierRatingStatByTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourierRatingStatByTokenResponse.ProtoReflect.Descriptor instead.
func (*GetCourierRatingStatByTokenResponse) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{17}
}

func (x *GetCourierRatingStatByTokenResponse) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

func (x *GetCourierRatingStatByTokenResponse) GetScore() *RateScore {
	if x != nil {
		return x.Score
	}
	return nil
}

type GetClientRatingStatByTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// required
	// access_token of client
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *GetClientRatingStatByTokenRequest) Reset() {
	*x = GetClientRatingStatByTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientRatingStatByTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientRatingStatByTokenRequest) ProtoMessage() {}

func (x *GetClientRatingStatByTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientRatingStatByTokenRequest.ProtoReflect.Descriptor instead.
func (*GetClientRatingStatByTokenRequest) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{18}
}

func (x *GetClientRatingStatByTokenRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type GetClientRatingStatByTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string     `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Score    *RateScore `protobuf:"bytes,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *GetClientRatingStatByTokenResponse) Reset() {
	*x = GetClientRatingStatByTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientRatingStatByTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientRatingStatByTokenResponse) ProtoMessage() {}

func (x *GetClientRatingStatByTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientRatingStatByTokenResponse.ProtoReflect.Descriptor instead.
func (*GetClientRatingStatByTokenResponse) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{19}
}

func (x *GetClientRatingStatByTokenResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetClientRatingStatByTokenResponse) GetScore() *RateScore {
	if x != nil {
		return x.Score
	}
	return nil
}

type RateScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// total number of users that rates a courier / client
	NumberOfRates int64 `protobuf:"varint,1,opt,name=number_of_rates,json=numberOfRates,proto3" json:"number_of_rates,omitempty"`
	// average of the rate values
	ScoreAvg float64 `protobuf:"fixed64,2,opt,name=score_avg,json=scoreAvg,proto3" json:"score_avg,omitempty"`
}

func (x *RateScore) Reset() {
	*x = RateScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateScore) ProtoMessage() {}

func (x *RateScore) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateScore.ProtoReflect.Descriptor instead.
func (*RateScore) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{20}
}

func (x *RateScore) GetNumberOfRates() int64 {
	if x != nil {
		return x.NumberOfRates
	}
	return 0
}

func (x *RateScore) GetScoreAvg() float64 {
	if x != nil {
		return x.ScoreAvg
	}
	return 0
}

var File_rating_proto protoreflect.FileDescriptor

var file_rating_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x87, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xfe, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x54, 0x0a, 0x12, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x25, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x11, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x54, 0x0a, 0x12, 0x6e, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x11, 0x6e,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73,
	0x22, 0x85, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xfb, 0x01, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x52, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x11, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x12,
	0x53, 0x0a, 0x12, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x11, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x73, 0x22, 0x5b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x46, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x05, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x05, 0x72, 0x61, 0x74, 0x65, 0x73, 0x22, 0x6e, 0x0a, 0x0c, 0x43, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x69, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x69, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x58, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x05, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x05, 0x72, 0x61, 0x74, 0x65, 0x73, 0x22, 0x6e, 0x0a, 0x0b, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x69, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x69, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x3c, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x52, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x22, 0x39, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x22, 0x47, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x42, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6d, 0x0a, 0x23,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x46, 0x0a, 0x21, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x6a, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52,
	0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22,
	0x50, 0x0a, 0x09, 0x52, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x76,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x41, 0x76,
	0x67, 0x2a, 0xf3, 0x01, 0x0a, 0x1d, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x28, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43,
	0x4f, 0x55, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x4f,
	0x53, 0x49, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x42, 0x41, 0x43, 0x4b, 0x10,
	0x00, 0x12, 0x33, 0x0a, 0x2f, 0x43, 0x4f, 0x55, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x54,
	0x49, 0x4e, 0x47, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x46, 0x45, 0x45,
	0x44, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x47, 0x4f, 0x4f, 0x44, 0x5f, 0x42, 0x45, 0x48, 0x41, 0x56,
	0x49, 0x4f, 0x55, 0x52, 0x10, 0x01, 0x12, 0x34, 0x0a, 0x30, 0x43, 0x4f, 0x55, 0x52, 0x49, 0x45,
	0x52, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x56,
	0x45, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x44, 0x52, 0x49, 0x56, 0x45,
	0x5f, 0x43, 0x41, 0x52, 0x45, 0x46, 0x55, 0x4c, 0x4c, 0x59, 0x10, 0x02, 0x12, 0x39, 0x0a, 0x35,
	0x43, 0x4f, 0x55, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50,
	0x4f, 0x53, 0x49, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x42, 0x41, 0x43, 0x4b,
	0x5f, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x49, 0x41, 0x52, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x52,
	0x4f, 0x55, 0x54, 0x45, 0x53, 0x10, 0x03, 0x2a, 0xb0, 0x02, 0x0a, 0x1d, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x28, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x4f, 0x55, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x54,
	0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x45, 0x47, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x46, 0x45, 0x45,
	0x44, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x31, 0x0a, 0x2d, 0x43, 0x4f, 0x55, 0x52, 0x49,
	0x45, 0x52, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x45, 0x47, 0x41, 0x54, 0x49,
	0x56, 0x45, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x42, 0x45, 0x48, 0x41,
	0x56, 0x45, 0x5f, 0x42, 0x41, 0x44, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x35, 0x0a, 0x31, 0x43, 0x4f,
	0x55, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x45, 0x47,
	0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x44,
	0x52, 0x49, 0x56, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x45, 0x4c, 0x45, 0x53, 0x53, 0x4c, 0x59, 0x10,
	0x02, 0x12, 0x3b, 0x0a, 0x37, 0x43, 0x4f, 0x55, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x54,
	0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x45, 0x47, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x46, 0x45, 0x45,
	0x44, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x55, 0x4e, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x49, 0x41, 0x52,
	0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x53, 0x10, 0x03, 0x12, 0x3a,
	0x0a, 0x36, 0x43, 0x4f, 0x55, 0x52, 0x49, 0x45, 0x52, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x4e, 0x45, 0x47, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x42, 0x41,
	0x43, 0x4b, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x45,
	0x58, 0x54, 0x52, 0x41, 0x5f, 0x50, 0x41, 0x59, 0x10, 0x04, 0x2a, 0x7f, 0x0a, 0x1c, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x2b, 0x0a, 0x27, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x41, 0x54,
	0x49, 0x4e, 0x47, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x46, 0x45, 0x45,
	0x44, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x32, 0x0a, 0x2e, 0x43, 0x4c, 0x49, 0x45, 0x4e,
	0x54, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x56,
	0x45, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x47, 0x4f, 0x4f, 0x44, 0x5f,
	0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f, 0x55, 0x52, 0x10, 0x01, 0x2a, 0xd2, 0x01, 0x0a, 0x1c,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x2b, 0x0a, 0x27,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x52,
	0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x45, 0x47, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x46,
	0x45, 0x45, 0x44, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x30, 0x0a, 0x2c, 0x43, 0x4c, 0x49,
	0x45, 0x4e, 0x54, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x45, 0x47, 0x41, 0x54,
	0x49, 0x56, 0x45, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x42, 0x45, 0x48,
	0x41, 0x56, 0x45, 0x5f, 0x42, 0x41, 0x44, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x2d, 0x0a, 0x29, 0x43,
	0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x45, 0x47,
	0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x54, 0x41, 0x4c, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x57, 0x49,
	0x54, 0x48, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x4c,
	0x49, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x45, 0x47, 0x41,
	0x54, 0x49, 0x56, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x50, 0x41, 0x59, 0x45, 0x44, 0x10, 0x03,
	0x2a, 0x7d, 0x0a, 0x09, 0x52, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a,
	0x12, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x41,
	0x4c, 0x55, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x41,
	0x4c, 0x55, 0x45, 0x5f, 0x31, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x41, 0x54, 0x45, 0x5f,
	0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x32, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x41, 0x54,
	0x45, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x33, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x52,
	0x41, 0x54, 0x45, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x34, 0x10, 0x04, 0x12, 0x10, 0x0a,
	0x0c, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x35, 0x10, 0x05, 0x32,
	0xb7, 0x06, 0x0a, 0x0d, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x60, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x2e, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x57, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e,
	0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x63, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x12, 0x23, 0x2e, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69,
	0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x12, 0x22, 0x2e,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2a, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x75, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x29, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x42, 0x79, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x22, 0x5a, 0x20, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rating_proto_rawDescOnce sync.Once
	file_rating_proto_rawDescData = file_rating_proto_rawDesc
)

func file_rating_proto_rawDescGZIP() []byte {
	file_rating_proto_rawDescOnce.Do(func() {
		file_rating_proto_rawDescData = protoimpl.X.CompressGZIP(file_rating_proto_rawDescData)
	})
	return file_rating_proto_rawDescData
}

var file_rating_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_rating_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_rating_proto_goTypes = []interface{}{
	(CourierRatingPositiveFeedback)(0),          // 0: rating.CourierRatingPositiveFeedback
	(CourierRatingNegativeFeedback)(0),          // 1: rating.CourierRatingNegativeFeedback
	(ClientRatingPositiveFeedback)(0),           // 2: rating.ClientRatingPositiveFeedback
	(ClientRatingNegativeFeedback)(0),           // 3: rating.ClientRatingNegativeFeedback
	(RateValue)(0),                              // 4: rating.RateValue
	(*CreateCourierRatingRequest)(nil),          // 5: rating.CreateCourierRatingRequest
	(*CreateCourierRatingResponse)(nil),         // 6: rating.CreateCourierRatingResponse
	(*CourierRating)(nil),                       // 7: rating.CourierRating
	(*CreateClientRatingRequest)(nil),           // 8: rating.CreateClientRatingRequest
	(*CreateClientRatingResponse)(nil),          // 9: rating.CreateClientRatingResponse
	(*ClientRating)(nil),                        // 10: rating.ClientRating
	(*GetCourierRatingRequest)(nil),             // 11: rating.GetCourierRatingRequest
	(*GetCourierRatingResponse)(nil),            // 12: rating.GetCourierRatingResponse
	(*CourierRated)(nil),                        // 13: rating.CourierRated
	(*GetClientRatingRequest)(nil),              // 14: rating.GetClientRatingRequest
	(*GetClientRatingResponse)(nil),             // 15: rating.GetClientRatingResponse
	(*ClientRated)(nil),                         // 16: rating.ClientRated
	(*GetCourierRatingStatRequest)(nil),         // 17: rating.GetCourierRatingStatRequest
	(*GetCourierRatingStatResponse)(nil),        // 18: rating.GetCourierRatingStatResponse
	(*GetClientRatingStatRequest)(nil),          // 19: rating.GetClientRatingStatRequest
	(*GetClientRatingStatResponse)(nil),         // 20: rating.GetClientRatingStatResponse
	(*GetCourierRatingStatByTokenRequest)(nil),  // 21: rating.GetCourierRatingStatByTokenRequest
	(*GetCourierRatingStatByTokenResponse)(nil), // 22: rating.GetCourierRatingStatByTokenResponse
	(*GetClientRatingStatByTokenRequest)(nil),   // 23: rating.GetClientRatingStatByTokenRequest
	(*GetClientRatingStatByTokenResponse)(nil),  // 24: rating.GetClientRatingStatByTokenResponse
	(*RateScore)(nil),                           // 25: rating.RateScore
}
var file_rating_proto_depIdxs = []int32{
	7,  // 0: rating.CreateCourierRatingRequest.rating:type_name -> rating.CourierRating
	4,  // 1: rating.CourierRating.value:type_name -> rating.RateValue
	0,  // 2: rating.CourierRating.positive_feedbacks:type_name -> rating.CourierRatingPositiveFeedback
	1,  // 3: rating.CourierRating.negative_feedbacks:type_name -> rating.CourierRatingNegativeFeedback
	10, // 4: rating.CreateClientRatingRequest.rating:type_name -> rating.ClientRating
	4,  // 5: rating.ClientRating.value:type_name -> rating.RateValue
	2,  // 6: rating.ClientRating.positive_feedbacks:type_name -> rating.ClientRatingPositiveFeedback
	3,  // 7: rating.ClientRating.negative_feedbacks:type_name -> rating.ClientRatingNegativeFeedback
	13, // 8: rating.GetCourierRatingResponse.rates:type_name -> rating.CourierRated
	7,  // 9: rating.CourierRated.rating:type_name -> rating.CourierRating
	16, // 10: rating.GetClientRatingResponse.rates:type_name -> rating.ClientRated
	10, // 11: rating.ClientRated.rating:type_name -> rating.ClientRating
	25, // 12: rating.GetCourierRatingStatResponse.score:type_name -> rating.RateScore
	25, // 13: rating.GetClientRatingStatResponse.score:type_name -> rating.RateScore
	25, // 14: rating.GetCourierRatingStatByTokenResponse.score:type_name -> rating.RateScore
	25, // 15: rating.GetClientRatingStatByTokenResponse.score:type_name -> rating.RateScore
	5,  // 16: rating.RatingService.CreateCourierRating:input_type -> rating.CreateCourierRatingRequest
	8,  // 17: rating.RatingService.CreateClientRating:input_type -> rating.CreateClientRatingRequest
	11, // 18: rating.RatingService.GetCourierRating:input_type -> rating.GetCourierRatingRequest
	14, // 19: rating.RatingService.GetClientRating:input_type -> rating.GetClientRatingRequest
	17, // 20: rating.RatingService.GetCourierRatingStat:input_type -> rating.GetCourierRatingStatRequest
	19, // 21: rating.RatingService.GetClientRatingStat:input_type -> rating.GetClientRatingStatRequest
	21, // 22: rating.RatingService.GetCourierRatingStatByToken:input_type -> rating.GetCourierRatingStatByTokenRequest
	23, // 23: rating.RatingService.GetClientRatingStatByToken:input_type -> rating.GetClientRatingStatByTokenRequest
	6,  // 24: rating.RatingService.CreateCourierRating:output_type -> rating.CreateCourierRatingResponse
	9,  // 25: rating.RatingService.CreateClientRating:output_type -> rating.CreateClientRatingResponse
	12, // 26: rating.RatingService.GetCourierRating:output_type -> rating.GetCourierRatingResponse
	15, // 27: rating.RatingService.GetClientRating:output_type -> rating.GetClientRatingResponse
	18, // 28: rating.RatingService.GetCourierRatingStat:output_type -> rating.GetCourierRatingStatResponse
	20, // 29: rating.RatingService.GetClientRatingStat:output_type -> rating.GetClientRatingStatResponse
	22, // 30: rating.RatingService.GetCourierRatingStatByToken:output_type -> rating.GetCourierRatingStatByTokenResponse
	24, // 31: rating.RatingService.GetClientRatingStatByToken:output_type -> rating.GetClientRatingStatByTokenResponse
	24, // [24:32] is the sub-list for method output_type
	16, // [16:24] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_rating_proto_init() }
func file_rating_proto_init() {
	if File_rating_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rating_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCourierRatingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCourierRatingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourierRating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClientRatingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClientRatingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientRating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierRatingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierRatingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourierRated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientRatingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientRatingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientRated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierRatingStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierRatingStatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientRatingStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientRatingStatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierRatingStatByTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCourierRatingStatByTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientRatingStatByTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientRatingStatByTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rating_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rating_proto_goTypes,
		DependencyIndexes: file_rating_proto_depIdxs,
		EnumInfos:         file_rating_proto_enumTypes,
		MessageInfos:      file_rating_proto_msgTypes,
	}.Build()
	File_rating_proto = out.File
	file_rating_proto_rawDesc = nil
	file_rating_proto_goTypes = nil
	file_rating_proto_depIdxs = nil
}
