// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: finance_model.proto

package financePb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OfferCancelledEvent_Reason int32

const (
	OfferCancelledEvent_BY_CLIENT                   OfferCancelledEvent_Reason = 0
	OfferCancelledEvent_TIMEOUT                     OfferCancelledEvent_Reason = 1
	OfferCancelledEvent_ACCEPTED_BY_ANOTHER_COURIER OfferCancelledEvent_Reason = 2
)

// Enum value maps for OfferCancelledEvent_Reason.
var (
	OfferCancelledEvent_Reason_name = map[int32]string{
		0: "BY_CLIENT",
		1: "TIMEOUT",
		2: "ACCEPTED_BY_ANOTHER_COURIER",
	}
	OfferCancelledEvent_Reason_value = map[string]int32{
		"BY_CLIENT":                   0,
		"TIMEOUT":                     1,
		"ACCEPTED_BY_ANOTHER_COURIER": 2,
	}
)

func (x OfferCancelledEvent_Reason) Enum() *OfferCancelledEvent_Reason {
	p := new(OfferCancelledEvent_Reason)
	*p = x
	return p
}

func (x OfferCancelledEvent_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OfferCancelledEvent_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_finance_model_proto_enumTypes[0].Descriptor()
}

func (OfferCancelledEvent_Reason) Type() protoreflect.EnumType {
	return &file_finance_model_proto_enumTypes[0]
}

func (x OfferCancelledEvent_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OfferCancelledEvent_Reason.Descriptor instead.
func (OfferCancelledEvent_Reason) EnumDescriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{0, 0}
}

type AccountRole_Status int32

const (
	AccountRole_ACTIVE  AccountRole_Status = 0
	AccountRole_DELETED AccountRole_Status = 1
	AccountRole_BLOCKED AccountRole_Status = 2
)

// Enum value maps for AccountRole_Status.
var (
	AccountRole_Status_name = map[int32]string{
		0: "ACTIVE",
		1: "DELETED",
		2: "BLOCKED",
	}
	AccountRole_Status_value = map[string]int32{
		"ACTIVE":  0,
		"DELETED": 1,
		"BLOCKED": 2,
	}
)

func (x AccountRole_Status) Enum() *AccountRole_Status {
	p := new(AccountRole_Status)
	*p = x
	return p
}

func (x AccountRole_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountRole_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_finance_model_proto_enumTypes[1].Descriptor()
}

func (AccountRole_Status) Type() protoreflect.EnumType {
	return &file_finance_model_proto_enumTypes[1]
}

func (x AccountRole_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountRole_Status.Descriptor instead.
func (AccountRole_Status) EnumDescriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{4, 0}
}

type AccountRole_Type int32

const (
	AccountRole_OWNER  AccountRole_Type = 0
	AccountRole_CLIENT AccountRole_Type = 1
	AccountRole_ADMIN  AccountRole_Type = 2
)

// Enum value maps for AccountRole_Type.
var (
	AccountRole_Type_name = map[int32]string{
		0: "OWNER",
		1: "CLIENT",
		2: "ADMIN",
	}
	AccountRole_Type_value = map[string]int32{
		"OWNER":  0,
		"CLIENT": 1,
		"ADMIN":  2,
	}
)

func (x AccountRole_Type) Enum() *AccountRole_Type {
	p := new(AccountRole_Type)
	*p = x
	return p
}

func (x AccountRole_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountRole_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_finance_model_proto_enumTypes[2].Descriptor()
}

func (AccountRole_Type) Type() protoreflect.EnumType {
	return &file_finance_model_proto_enumTypes[2]
}

func (x AccountRole_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountRole_Type.Descriptor instead.
func (AccountRole_Type) EnumDescriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{4, 1}
}

type Account_Status int32

const (
	Account_OPEN    Account_Status = 0
	Account_BLOCKED Account_Status = 1
	Account_CLOSED  Account_Status = 2
)

// Enum value maps for Account_Status.
var (
	Account_Status_name = map[int32]string{
		0: "OPEN",
		1: "BLOCKED",
		2: "CLOSED",
	}
	Account_Status_value = map[string]int32{
		"OPEN":    0,
		"BLOCKED": 1,
		"CLOSED":  2,
	}
)

func (x Account_Status) Enum() *Account_Status {
	p := new(Account_Status)
	*p = x
	return p
}

func (x Account_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Account_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_finance_model_proto_enumTypes[3].Descriptor()
}

func (Account_Status) Type() protoreflect.EnumType {
	return &file_finance_model_proto_enumTypes[3]
}

func (x Account_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Account_Status.Descriptor instead.
func (Account_Status) EnumDescriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{5, 0}
}

type Account_Type int32

const (
	Account_TAX      Account_Type = 0
	Account_REVENUE  Account_Type = 1
	Account_WALLET   Account_Type = 2
	Account_CUSTOMER Account_Type = 3
	Account_COURIER  Account_Type = 4
	Account_ARTIN    Account_Type = 5
)

// Enum value maps for Account_Type.
var (
	Account_Type_name = map[int32]string{
		0: "TAX",
		1: "REVENUE",
		2: "WALLET",
		3: "CUSTOMER",
		4: "COURIER",
		5: "ARTIN",
	}
	Account_Type_value = map[string]int32{
		"TAX":      0,
		"REVENUE":  1,
		"WALLET":   2,
		"CUSTOMER": 3,
		"COURIER":  4,
		"ARTIN":    5,
	}
)

func (x Account_Type) Enum() *Account_Type {
	p := new(Account_Type)
	*p = x
	return p
}

func (x Account_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Account_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_finance_model_proto_enumTypes[4].Descriptor()
}

func (Account_Type) Type() protoreflect.EnumType {
	return &file_finance_model_proto_enumTypes[4]
}

func (x Account_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Account_Type.Descriptor instead.
func (Account_Type) EnumDescriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{5, 1}
}

type Transaction_Status int32

const (
	Transaction_DONE      Transaction_Status = 0
	Transaction_BLOCK     Transaction_Status = 1
	Transaction_SYS_BLOCK Transaction_Status = 2
	Transaction_REJECT    Transaction_Status = 3
	Transaction_SCHEDULED Transaction_Status = 4
	Transaction_SETTLED   Transaction_Status = 5
)

// Enum value maps for Transaction_Status.
var (
	Transaction_Status_name = map[int32]string{
		0: "DONE",
		1: "BLOCK",
		2: "SYS_BLOCK",
		3: "REJECT",
		4: "SCHEDULED",
		5: "SETTLED",
	}
	Transaction_Status_value = map[string]int32{
		"DONE":      0,
		"BLOCK":     1,
		"SYS_BLOCK": 2,
		"REJECT":    3,
		"SCHEDULED": 4,
		"SETTLED":   5,
	}
)

func (x Transaction_Status) Enum() *Transaction_Status {
	p := new(Transaction_Status)
	*p = x
	return p
}

func (x Transaction_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Transaction_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_finance_model_proto_enumTypes[5].Descriptor()
}

func (Transaction_Status) Type() protoreflect.EnumType {
	return &file_finance_model_proto_enumTypes[5]
}

func (x Transaction_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Transaction_Status.Descriptor instead.
func (Transaction_Status) EnumDescriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{6, 0}
}

type Transaction_PaymentMethod int32

const (
	Transaction_acss_debit        Transaction_PaymentMethod = 0
	Transaction_afterpay_clearpay Transaction_PaymentMethod = 1
	Transaction_alipay            Transaction_PaymentMethod = 2
	Transaction_au_becs_debit     Transaction_PaymentMethod = 3
	Transaction_bacs_debit        Transaction_PaymentMethod = 4
	Transaction_bancontact        Transaction_PaymentMethod = 5
	Transaction_card              Transaction_PaymentMethod = 6
	Transaction_card_present      Transaction_PaymentMethod = 7
	Transaction_eps               Transaction_PaymentMethod = 8
	Transaction_fpx               Transaction_PaymentMethod = 9
	Transaction_giropay           Transaction_PaymentMethod = 10
	Transaction_grabpay           Transaction_PaymentMethod = 11
	Transaction_ideal             Transaction_PaymentMethod = 12
	Transaction_interac_present   Transaction_PaymentMethod = 13
	Transaction_oxxo              Transaction_PaymentMethod = 14
	Transaction_p24               Transaction_PaymentMethod = 15
	Transaction_sepa_debit        Transaction_PaymentMethod = 16
	Transaction_sofort            Transaction_PaymentMethod = 17
	Transaction_other             Transaction_PaymentMethod = 18
)

// Enum value maps for Transaction_PaymentMethod.
var (
	Transaction_PaymentMethod_name = map[int32]string{
		0:  "acss_debit",
		1:  "afterpay_clearpay",
		2:  "alipay",
		3:  "au_becs_debit",
		4:  "bacs_debit",
		5:  "bancontact",
		6:  "card",
		7:  "card_present",
		8:  "eps",
		9:  "fpx",
		10: "giropay",
		11: "grabpay",
		12: "ideal",
		13: "interac_present",
		14: "oxxo",
		15: "p24",
		16: "sepa_debit",
		17: "sofort",
		18: "other",
	}
	Transaction_PaymentMethod_value = map[string]int32{
		"acss_debit":        0,
		"afterpay_clearpay": 1,
		"alipay":            2,
		"au_becs_debit":     3,
		"bacs_debit":        4,
		"bancontact":        5,
		"card":              6,
		"card_present":      7,
		"eps":               8,
		"fpx":               9,
		"giropay":           10,
		"grabpay":           11,
		"ideal":             12,
		"interac_present":   13,
		"oxxo":              14,
		"p24":               15,
		"sepa_debit":        16,
		"sofort":            17,
		"other":             18,
	}
)

func (x Transaction_PaymentMethod) Enum() *Transaction_PaymentMethod {
	p := new(Transaction_PaymentMethod)
	*p = x
	return p
}

func (x Transaction_PaymentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Transaction_PaymentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_finance_model_proto_enumTypes[6].Descriptor()
}

func (Transaction_PaymentMethod) Type() protoreflect.EnumType {
	return &file_finance_model_proto_enumTypes[6]
}

func (x Transaction_PaymentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Transaction_PaymentMethod.Descriptor instead.
func (Transaction_PaymentMethod) EnumDescriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{6, 1}
}

type OfferCancelledEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferId      string                     `protobuf:"bytes,1,opt,name=offer_id,json=offerId,proto3" json:"offer_id,omitempty"`
	CourierId    string                     `protobuf:"bytes,2,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
	CancelReason OfferCancelledEvent_Reason `protobuf:"varint,3,opt,name=cancel_reason,json=cancelReason,proto3,enum=artin.couriermanagement.finance.OfferCancelledEvent_Reason" json:"cancel_reason,omitempty"`
}

func (x *OfferCancelledEvent) Reset() {
	*x = OfferCancelledEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferCancelledEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferCancelledEvent) ProtoMessage() {}

func (x *OfferCancelledEvent) ProtoReflect() protoreflect.Message {
	mi := &file_finance_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferCancelledEvent.ProtoReflect.Descriptor instead.
func (*OfferCancelledEvent) Descriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{0}
}

func (x *OfferCancelledEvent) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *OfferCancelledEvent) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

func (x *OfferCancelledEvent) GetCancelReason() OfferCancelledEvent_Reason {
	if x != nil {
		return x.CancelReason
	}
	return OfferCancelledEvent_BY_CLIENT
}

type OfferAcceptedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferId   string `protobuf:"bytes,1,opt,name=offer_id,json=offerId,proto3" json:"offer_id,omitempty"`
	CourierId string `protobuf:"bytes,2,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
	Desc      string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *OfferAcceptedEvent) Reset() {
	*x = OfferAcceptedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferAcceptedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferAcceptedEvent) ProtoMessage() {}

func (x *OfferAcceptedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_finance_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferAcceptedEvent.ProtoReflect.Descriptor instead.
func (*OfferAcceptedEvent) Descriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{1}
}

func (x *OfferAcceptedEvent) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *OfferAcceptedEvent) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

func (x *OfferAcceptedEvent) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type OfferRejectedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferId   string `protobuf:"bytes,1,opt,name=offer_id,json=offerId,proto3" json:"offer_id,omitempty"`
	CourierId string `protobuf:"bytes,2,opt,name=courier_id,json=courierId,proto3" json:"courier_id,omitempty"`
	Desc      string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *OfferRejectedEvent) Reset() {
	*x = OfferRejectedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferRejectedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferRejectedEvent) ProtoMessage() {}

func (x *OfferRejectedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_finance_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferRejectedEvent.ProtoReflect.Descriptor instead.
func (*OfferRejectedEvent) Descriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{2}
}

func (x *OfferRejectedEvent) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *OfferRejectedEvent) GetCourierId() string {
	if x != nil {
		return x.CourierId
	}
	return ""
}

func (x *OfferRejectedEvent) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type PaymentMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type string              `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Card *PaymentMethod_Card `protobuf:"bytes,3,opt,name=card,proto3" json:"card,omitempty"`
}

func (x *PaymentMethod) Reset() {
	*x = PaymentMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethod) ProtoMessage() {}

func (x *PaymentMethod) ProtoReflect() protoreflect.Message {
	mi := &file_finance_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethod.ProtoReflect.Descriptor instead.
func (*PaymentMethod) Descriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{3}
}

func (x *PaymentMethod) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PaymentMethod) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PaymentMethod) GetCard() *PaymentMethod_Card {
	if x != nil {
		return x.Card
	}
	return nil
}

type AccountRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FromDate  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	ToDate    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`
	Status    AccountRole_Status     `protobuf:"varint,5,opt,name=status,proto3,enum=artin.couriermanagement.finance.AccountRole_Status" json:"status,omitempty"`
	Type      AccountRole_Type       `protobuf:"varint,6,opt,name=type,proto3,enum=artin.couriermanagement.finance.AccountRole_Type" json:"type,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *AccountRole) Reset() {
	*x = AccountRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRole) ProtoMessage() {}

func (x *AccountRole) ProtoReflect() protoreflect.Message {
	mi := &file_finance_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRole.ProtoReflect.Descriptor instead.
func (*AccountRole) Descriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{4}
}

func (x *AccountRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AccountRole) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AccountRole) GetFromDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *AccountRole) GetToDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ToDate
	}
	return nil
}

func (x *AccountRole) GetStatus() AccountRole_Status {
	if x != nil {
		return x.Status
	}
	return AccountRole_ACTIVE
}

func (x *AccountRole) GetType() AccountRole_Type {
	if x != nil {
		return x.Type
	}
	return AccountRole_OWNER
}

func (x *AccountRole) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AccountRole) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountRoles         []*AccountRole         `protobuf:"bytes,2,rep,name=account_roles,json=accountRoles,proto3" json:"account_roles,omitempty"`
	Status               Account_Status         `protobuf:"varint,3,opt,name=status,proto3,enum=artin.couriermanagement.finance.Account_Status" json:"status,omitempty"`
	Type                 Account_Type           `protobuf:"varint,4,opt,name=type,proto3,enum=artin.couriermanagement.finance.Account_Type" json:"type,omitempty"`
	PaymentMethods       []*PaymentMethod       `protobuf:"bytes,5,rep,name=payment_methods,json=paymentMethods,proto3" json:"payment_methods,omitempty"`
	DefaultPaymentMethod string                 `protobuf:"bytes,6,opt,name=default_payment_method,json=defaultPaymentMethod,proto3" json:"default_payment_method,omitempty"`
	Balance              int64                  `protobuf:"varint,7,opt,name=balance,proto3" json:"balance,omitempty"`
	CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_finance_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{5}
}

func (x *Account) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Account) GetAccountRoles() []*AccountRole {
	if x != nil {
		return x.AccountRoles
	}
	return nil
}

func (x *Account) GetStatus() Account_Status {
	if x != nil {
		return x.Status
	}
	return Account_OPEN
}

func (x *Account) GetType() Account_Type {
	if x != nil {
		return x.Type
	}
	return Account_TAX
}

func (x *Account) GetPaymentMethods() []*PaymentMethod {
	if x != nil {
		return x.PaymentMethods
	}
	return nil
}

func (x *Account) GetDefaultPaymentMethod() string {
	if x != nil {
		return x.DefaultPaymentMethod
	}
	return ""
}

func (x *Account) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *Account) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Account) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount        int64                     `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency      string                    `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	Status        Transaction_Status        `protobuf:"varint,4,opt,name=status,proto3,enum=artin.couriermanagement.finance.Transaction_Status" json:"status,omitempty"`
	PaymentMethod Transaction_PaymentMethod `protobuf:"varint,5,opt,name=payment_method,json=paymentMethod,proto3,enum=artin.couriermanagement.finance.Transaction_PaymentMethod" json:"payment_method,omitempty"`
	SourceAccount *Account                  `protobuf:"bytes,6,opt,name=source_account,json=sourceAccount,proto3" json:"source_account,omitempty"`
	TargetAccount *Account                  `protobuf:"bytes,7,opt,name=target_account,json=targetAccount,proto3" json:"target_account,omitempty"`
	RequestId     string                    `protobuf:"bytes,8,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Description   string                    `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	TargetBalance int64                     `protobuf:"varint,10,opt,name=target_balance,json=targetBalance,proto3" json:"target_balance,omitempty"`
	CreatedAt     *timestamppb.Timestamp    `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp    `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_finance_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{6}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Transaction) GetStatus() Transaction_Status {
	if x != nil {
		return x.Status
	}
	return Transaction_DONE
}

func (x *Transaction) GetPaymentMethod() Transaction_PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return Transaction_acss_debit
}

func (x *Transaction) GetSourceAccount() *Account {
	if x != nil {
		return x.SourceAccount
	}
	return nil
}

func (x *Transaction) GetTargetAccount() *Account {
	if x != nil {
		return x.TargetAccount
	}
	return nil
}

func (x *Transaction) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *Transaction) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Transaction) GetTargetBalance() int64 {
	if x != nil {
		return x.TargetBalance
	}
	return 0
}

func (x *Transaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Transaction) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type OnboardingUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url        string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	RefreshUrl string                 `protobuf:"bytes,4,opt,name=refresh_url,json=refreshUrl,proto3" json:"refresh_url,omitempty"`
	ReturnUrl  string                 `protobuf:"bytes,5,opt,name=return_url,json=returnUrl,proto3" json:"return_url,omitempty"`
}

func (x *OnboardingUrl) Reset() {
	*x = OnboardingUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnboardingUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnboardingUrl) ProtoMessage() {}

func (x *OnboardingUrl) ProtoReflect() protoreflect.Message {
	mi := &file_finance_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnboardingUrl.ProtoReflect.Descriptor instead.
func (*OnboardingUrl) Descriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{7}
}

func (x *OnboardingUrl) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *OnboardingUrl) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OnboardingUrl) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *OnboardingUrl) GetRefreshUrl() string {
	if x != nil {
		return x.RefreshUrl
	}
	return ""
}

func (x *OnboardingUrl) GetReturnUrl() string {
	if x != nil {
		return x.ReturnUrl
	}
	return ""
}

type OnboardingResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successful bool   `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	Desc       string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *OnboardingResult) Reset() {
	*x = OnboardingResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnboardingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnboardingResult) ProtoMessage() {}

func (x *OnboardingResult) ProtoReflect() protoreflect.Message {
	mi := &file_finance_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnboardingResult.ProtoReflect.Descriptor instead.
func (*OnboardingResult) Descriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{8}
}

func (x *OnboardingResult) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *OnboardingResult) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type PaymentMethod_Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brand             string `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	Checks            string `protobuf:"bytes,2,opt,name=checks,proto3" json:"checks,omitempty"`
	Country           string `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	ExpMonth          string `protobuf:"bytes,4,opt,name=exp_month,json=expMonth,proto3" json:"exp_month,omitempty"`
	ExpYear           string `protobuf:"bytes,5,opt,name=exp_year,json=expYear,proto3" json:"exp_year,omitempty"`
	Fingerprint       string `protobuf:"bytes,6,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	Funding           string `protobuf:"bytes,7,opt,name=funding,proto3" json:"funding,omitempty"`
	Last4             string `protobuf:"bytes,8,opt,name=last4,proto3" json:"last4,omitempty"`
	Networks          string `protobuf:"bytes,9,opt,name=networks,proto3" json:"networks,omitempty"`
	ThreeDSecureUsage string `protobuf:"bytes,10,opt,name=three_d_secure_usage,json=threeDSecureUsage,proto3" json:"three_d_secure_usage,omitempty"`
	Wallet            string `protobuf:"bytes,11,opt,name=wallet,proto3" json:"wallet,omitempty"`
}

func (x *PaymentMethod_Card) Reset() {
	*x = PaymentMethod_Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_finance_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethod_Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethod_Card) ProtoMessage() {}

func (x *PaymentMethod_Card) ProtoReflect() protoreflect.Message {
	mi := &file_finance_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethod_Card.ProtoReflect.Descriptor instead.
func (*PaymentMethod_Card) Descriptor() ([]byte, []int) {
	return file_finance_model_proto_rawDescGZIP(), []int{3, 0}
}

func (x *PaymentMethod_Card) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *PaymentMethod_Card) GetChecks() string {
	if x != nil {
		return x.Checks
	}
	return ""
}

func (x *PaymentMethod_Card) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PaymentMethod_Card) GetExpMonth() string {
	if x != nil {
		return x.ExpMonth
	}
	return ""
}

func (x *PaymentMethod_Card) GetExpYear() string {
	if x != nil {
		return x.ExpYear
	}
	return ""
}

func (x *PaymentMethod_Card) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *PaymentMethod_Card) GetFunding() string {
	if x != nil {
		return x.Funding
	}
	return ""
}

func (x *PaymentMethod_Card) GetLast4() string {
	if x != nil {
		return x.Last4
	}
	return ""
}

func (x *PaymentMethod_Card) GetNetworks() string {
	if x != nil {
		return x.Networks
	}
	return ""
}

func (x *PaymentMethod_Card) GetThreeDSecureUsage() string {
	if x != nil {
		return x.ThreeDSecureUsage
	}
	return ""
}

func (x *PaymentMethod_Card) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

var File_finance_model_proto protoreflect.FileDescriptor

var file_finance_model_proto_rawDesc = []byte{
	0x0a, 0x13, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8c, 0x02, 0x0a, 0x13, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72,
	0x03, 0xb0, 0x01, 0x01, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0a, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x60, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x45, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x59, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x01, 0x12, 0x1f,
	0x0a, 0x1b, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x41, 0x4e,
	0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x55, 0x52, 0x49, 0x45, 0x52, 0x10, 0x02, 0x22,
	0x76, 0x0a, 0x12, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x63, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x76, 0x0a, 0x12, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x08, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x52, 0x09, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22,
	0xbc, 0x03, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x69, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x1a, 0xbd,
	0x02, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x78, 0x70, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x78, 0x70, 0x59, 0x65, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x75, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x73, 0x74, 0x34, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x73, 0x74, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x64,
	0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x68, 0x72, 0x65, 0x65, 0x44, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x22, 0x9c,
	0x04, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72,
	0x03, 0xb0, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0xb0, 0x01, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x6e, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x75,
	0x72, 0x69, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x66,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x2e, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a,
	0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45,
	0x44, 0x10, 0x02, 0x22, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x4f,
	0x57, 0x4e, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x22, 0xa8, 0x05,
	0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x5b, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02,
	0x08, 0x01, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x47, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2f, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x57, 0x0a, 0x0f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x2e, 0x63, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x2b, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x02, 0x22, 0x4e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x07, 0x0a, 0x03, 0x54, 0x41, 0x58, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x56,
	0x45, 0x4e, 0x55, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x10, 0x03,
	0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x55, 0x52, 0x49, 0x45, 0x52, 0x10, 0x04, 0x12, 0x09, 0x0a,
	0x05, 0x41, 0x52, 0x54, 0x49, 0x4e, 0x10, 0x05, 0x22, 0xfb, 0x07, 0x0a, 0x0b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x4b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x2e, 0x63,
	0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x61, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x61, 0x72,
	0x74, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x4f, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x54, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x4c,
	0x4f, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x59, 0x53, 0x5f, 0x42, 0x4c, 0x4f,
	0x43, 0x4b, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x03,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x22, 0x97, 0x02, 0x0a,
	0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0e,
	0x0a, 0x0a, 0x61, 0x63, 0x73, 0x73, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x61, 0x66, 0x74, 0x65, 0x72, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x70, 0x61, 0x79, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x10,
	0x02, 0x12, 0x11, 0x0a, 0x0d, 0x61, 0x75, 0x5f, 0x62, 0x65, 0x63, 0x73, 0x5f, 0x64, 0x65, 0x62,
	0x69, 0x74, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x73, 0x5f, 0x64, 0x65, 0x62,
	0x69, 0x74, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x10, 0x06, 0x12, 0x10,
	0x0a, 0x0c, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x10, 0x07,
	0x12, 0x07, 0x0a, 0x03, 0x65, 0x70, 0x73, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x66, 0x70, 0x78,
	0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x67, 0x69, 0x72, 0x6f, 0x70, 0x61, 0x79, 0x10, 0x0a, 0x12,
	0x0b, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x62, 0x70, 0x61, 0x79, 0x10, 0x0b, 0x12, 0x09, 0x0a, 0x05,
	0x69, 0x64, 0x65, 0x61, 0x6c, 0x10, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x10, 0x0d, 0x12, 0x08, 0x0a, 0x04,
	0x6f, 0x78, 0x78, 0x6f, 0x10, 0x0e, 0x12, 0x07, 0x0a, 0x03, 0x70, 0x32, 0x34, 0x10, 0x0f, 0x12,
	0x0e, 0x0a, 0x0a, 0x73, 0x65, 0x70, 0x61, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x10, 0x10, 0x12,
	0x0a, 0x0a, 0x06, 0x73, 0x6f, 0x66, 0x6f, 0x72, 0x74, 0x10, 0x11, 0x12, 0x09, 0x0a, 0x05, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x10, 0x12, 0x22, 0xd7, 0x01, 0x0a, 0x0d, 0x4f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x55, 0x72,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x72, 0x6c,
	0x22, 0x46, 0x0a, 0x10, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66,
	0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x66, 0x75, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x2e, 0x61, 0x69, 0x2f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x2d, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x66, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x2f, 0x67, 0x6f, 0x3b, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_finance_model_proto_rawDescOnce sync.Once
	file_finance_model_proto_rawDescData = file_finance_model_proto_rawDesc
)

func file_finance_model_proto_rawDescGZIP() []byte {
	file_finance_model_proto_rawDescOnce.Do(func() {
		file_finance_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_finance_model_proto_rawDescData)
	})
	return file_finance_model_proto_rawDescData
}

var file_finance_model_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_finance_model_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_finance_model_proto_goTypes = []interface{}{
	(OfferCancelledEvent_Reason)(0), // 0: artin.couriermanagement.finance.OfferCancelledEvent.Reason
	(AccountRole_Status)(0),         // 1: artin.couriermanagement.finance.AccountRole.Status
	(AccountRole_Type)(0),           // 2: artin.couriermanagement.finance.AccountRole.Type
	(Account_Status)(0),             // 3: artin.couriermanagement.finance.Account.Status
	(Account_Type)(0),               // 4: artin.couriermanagement.finance.Account.Type
	(Transaction_Status)(0),         // 5: artin.couriermanagement.finance.Transaction.Status
	(Transaction_PaymentMethod)(0),  // 6: artin.couriermanagement.finance.Transaction.PaymentMethod
	(*OfferCancelledEvent)(nil),     // 7: artin.couriermanagement.finance.OfferCancelledEvent
	(*OfferAcceptedEvent)(nil),      // 8: artin.couriermanagement.finance.OfferAcceptedEvent
	(*OfferRejectedEvent)(nil),      // 9: artin.couriermanagement.finance.OfferRejectedEvent
	(*PaymentMethod)(nil),           // 10: artin.couriermanagement.finance.PaymentMethod
	(*AccountRole)(nil),             // 11: artin.couriermanagement.finance.AccountRole
	(*Account)(nil),                 // 12: artin.couriermanagement.finance.Account
	(*Transaction)(nil),             // 13: artin.couriermanagement.finance.Transaction
	(*OnboardingUrl)(nil),           // 14: artin.couriermanagement.finance.OnboardingUrl
	(*OnboardingResult)(nil),        // 15: artin.couriermanagement.finance.OnboardingResult
	(*PaymentMethod_Card)(nil),      // 16: artin.couriermanagement.finance.PaymentMethod.Card
	(*timestamppb.Timestamp)(nil),   // 17: google.protobuf.Timestamp
}
var file_finance_model_proto_depIdxs = []int32{
	0,  // 0: artin.couriermanagement.finance.OfferCancelledEvent.cancel_reason:type_name -> artin.couriermanagement.finance.OfferCancelledEvent.Reason
	16, // 1: artin.couriermanagement.finance.PaymentMethod.card:type_name -> artin.couriermanagement.finance.PaymentMethod.Card
	17, // 2: artin.couriermanagement.finance.AccountRole.from_date:type_name -> google.protobuf.Timestamp
	17, // 3: artin.couriermanagement.finance.AccountRole.to_date:type_name -> google.protobuf.Timestamp
	1,  // 4: artin.couriermanagement.finance.AccountRole.status:type_name -> artin.couriermanagement.finance.AccountRole.Status
	2,  // 5: artin.couriermanagement.finance.AccountRole.type:type_name -> artin.couriermanagement.finance.AccountRole.Type
	17, // 6: artin.couriermanagement.finance.AccountRole.created_at:type_name -> google.protobuf.Timestamp
	17, // 7: artin.couriermanagement.finance.AccountRole.updated_at:type_name -> google.protobuf.Timestamp
	11, // 8: artin.couriermanagement.finance.Account.account_roles:type_name -> artin.couriermanagement.finance.AccountRole
	3,  // 9: artin.couriermanagement.finance.Account.status:type_name -> artin.couriermanagement.finance.Account.Status
	4,  // 10: artin.couriermanagement.finance.Account.type:type_name -> artin.couriermanagement.finance.Account.Type
	10, // 11: artin.couriermanagement.finance.Account.payment_methods:type_name -> artin.couriermanagement.finance.PaymentMethod
	17, // 12: artin.couriermanagement.finance.Account.created_at:type_name -> google.protobuf.Timestamp
	17, // 13: artin.couriermanagement.finance.Account.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 14: artin.couriermanagement.finance.Transaction.status:type_name -> artin.couriermanagement.finance.Transaction.Status
	6,  // 15: artin.couriermanagement.finance.Transaction.payment_method:type_name -> artin.couriermanagement.finance.Transaction.PaymentMethod
	12, // 16: artin.couriermanagement.finance.Transaction.source_account:type_name -> artin.couriermanagement.finance.Account
	12, // 17: artin.couriermanagement.finance.Transaction.target_account:type_name -> artin.couriermanagement.finance.Account
	17, // 18: artin.couriermanagement.finance.Transaction.created_at:type_name -> google.protobuf.Timestamp
	17, // 19: artin.couriermanagement.finance.Transaction.updated_at:type_name -> google.protobuf.Timestamp
	17, // 20: artin.couriermanagement.finance.OnboardingUrl.created_at:type_name -> google.protobuf.Timestamp
	17, // 21: artin.couriermanagement.finance.OnboardingUrl.expires_at:type_name -> google.protobuf.Timestamp
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_finance_model_proto_init() }
func file_finance_model_proto_init() {
	if File_finance_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_finance_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferCancelledEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferAcceptedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferRejectedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnboardingUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnboardingResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_finance_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethod_Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_finance_model_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_finance_model_proto_goTypes,
		DependencyIndexes: file_finance_model_proto_depIdxs,
		EnumInfos:         file_finance_model_proto_enumTypes,
		MessageInfos:      file_finance_model_proto_msgTypes,
	}.Build()
	File_finance_model_proto = out.File
	file_finance_model_proto_rawDesc = nil
	file_finance_model_proto_goTypes = nil
	file_finance_model_proto_depIdxs = nil
}
