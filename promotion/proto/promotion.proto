syntax = "proto3";

option go_package = "userservice/api/controller/proto";

package promotion;

import "validate/validate.proto";

// called by dashboard admin
service PromotionAdminService{

  rpc CreatePromotion(CreatePromotionRequest) returns (CreatePromotionResponse) {}

  rpc AssignPromotionToUser(AssignPromotionToUserRequest) returns (AssignPromotionToUserResponse) {}

  rpc GetPromotions(GetPromotionsRequest) returns (GetPromotionsResponse) {}

  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {}

}

// called by party or payment service
service PromotionService{

  rpc AssignUserReferral(AssignUserReferralRequest) returns (AssignUserReferralResponse) {}

  rpc ApplyPromotion(ApplyPromotionRequest) returns (ApplyPromotionResponse) {}

}

// called by client
service PromotionUserService{

  rpc GetPromotionsOfUser(GetPromotionsOfUserRequest) returns (GetPromotionsOfUserResponse) {}

}

message CreatePromotionRequest{
  // admin access token
  // required
  string access_token = 1 [(validate.rules).string.min_len = 1];

  // name of the promotion
  // required
  string name = 2 [(validate.rules).string.min_len = 1];

  // having no start date means that the promotion is available from any time
  // optional
  string start_date = 3;

  // having no expiration date means that the promotion is available until any time
  // optional
  string exp_date = 4;

  // promotion type (all, referral, group, individual)
  // required
  PromotionType type = 5 [(validate.rules).enum.defined_only = true];

  // optional
  double discount_percentage = 6 [(validate.rules).double = { gte: 0,  lte: 100 }];

  // optional
  double discount_value = 7;

  // if both of discount values are defined, the actual discount value would be the minimum of them
  // at least one of discount values should be defined
}

message CreatePromotionResponse{
  int64 promotion_id = 1;
}

message AssignPromotionToUserRequest{
  // admin access token
  // required
  string access_token = 1 [(validate.rules).string.min_len = 1];

  // required
  int64 promotion_id = 2 [(validate.rules).int64.gt = 0];

  // required
  repeated string user_ids = 3;
}

message AssignPromotionToUserResponse{

}

message AssignUserReferralRequest{
  // required
  string user_id = 1 [(validate.rules).string.min_len = 1];

  // referral of the user
  // required
  string referral = 2 [(validate.rules).string.min_len = 1];

  // id of the user which is referred
  // required
  string referred_id = 3 [(validate.rules).string.min_len = 1];
}

message AssignUserReferralResponse{
  int64 promotion_id = 1;
}

message GetPromotionsRequest{
  // admin access token
  // required
  string access_token = 1 [(validate.rules).string.min_len = 1];

  // optional
  Pagination pagination = 2;

}

message GetPromotionsResponse{
  repeated Promotion promotions = 1;
}

message GetUsersRequest{
  // admin access token
  // required
  string access_token = 1 [(validate.rules).string.min_len = 1];

  // optional
  // get promotion-users by promotion or user
  oneof filter {
    int64 promotion_id = 2;
    string user_id = 3;
  };

}

message GetUsersResponse{
  repeated PromotionUser users = 1;
}

message ApplyPromotionRequest{
  // required
  int64 promotion_id = 1 [(validate.rules).int64.gt = 0];

  // required
  string user_id = 2 [(validate.rules).string.min_len = 1];

  // required
  string transaction_id = 3 [(validate.rules).string.min_len = 1];

  // required
  double total_payment = 4 [(validate.rules).double.gt = 0];
}

message ApplyPromotionResponse{
  double discount_percentage = 1;
  double discount_value = 2;
}

message GetPromotionsOfUserRequest{
  // client's access token
  // required
  string access_token = 1 [(validate.rules).string.min_len = 1];

  // required
  PromotionUserStatus type = 2 [(validate.rules).enum.defined_only = true];
}

message GetPromotionsOfUserResponse{
  repeated Promotion promotions = 1;
}

message Promotion{
  int64 id = 1;
  string name = 2;
  string start_date = 3;
  string exp_date = 4;
  PromotionType type = 5;
  double discount_percentage = 6;
  double discount_value = 7;
}

message PromotionUser{
  Promotion promotion = 1;
  string user_id = 2;
  string metadata = 3;
  PromotionUserStatus status = 4;
  Transaction transaction = 5;
}

message Transaction{
  string transaction_id = 1;
  string date = 2;
}

message Pagination{
  int32 page = 1;
  int32 limit = 2;
  string sort = 3;
  SortType sort_type = 4;
}

enum SortType{
  UNKNOWN_SORT_TYPE = 0;
  SORT_TYPE_ASC = 1;
  SORT_TYPE_DESC = 2;
}

enum PromotionType{
  UNKNOWN_PROMOTION_TYPE = 0;
  PROMOTION_TYPE_ALL = 1;
  PROMOTION_TYPE_REFERRAL = 2;
  PROMOTION_TYPE_GROUP = 3;
  PROMOTION_TYPE_INDIVIDUAL = 4;
}

enum PromotionUserStatus{
  UNKNOWN_PROMOTION_USER_STATUS = 0;
  PROMOTION_USER_STATUS_AVAILABLE = 1;
  PROMOTION_USER_STATUS_CONSUMED = 2;
  PROMOTION_USER_STATUS_NOT_AVAILABLE = 3;
}